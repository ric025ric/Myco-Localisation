{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useDataMultiplier = useDataMultiplier;\n  /**\n   * Increases the data size by duplicating it, it's kept in hook format so that in future we can add auto pagination support.\n   * If you're using this with FlatList then make sure you remove `keyExtractor` because this method might duplicate ids that might be in the data.\n   * @param data The data to duplicate\n   * @param count Final count of data to be returned from this hook\n   * @returns Multiplied data.\n   */\n  function useDataMultiplier(data, count) {\n    const len = data.length;\n    const arr = new Array(count);\n    let isObject = false;\n    if (typeof data[0] === \"object\") {\n      isObject = true;\n    }\n    for (let i = 0; i < count; i++) {\n      arr[i] = isObject ? Object.assign({}, data[i % len]) : data[i % len];\n    }\n    return [arr];\n  }\n});","lineCount":27,"map":[[7,2,8,0,"exports"],[7,9,8,0],[7,10,8,0,"useDataMultiplier"],[7,27,8,0],[7,30,8,0,"useDataMultiplier"],[7,47,8,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,2,8,7],[15,11,8,16,"useDataMultiplier"],[15,28,8,33,"useDataMultiplier"],[15,29,8,34,"data"],[15,33,8,38],[15,35,8,40,"count"],[15,40,8,45],[15,42,8,47],[16,4,9,4],[16,10,9,10,"len"],[16,13,9,13],[16,16,9,16,"data"],[16,20,9,20],[16,21,9,21,"length"],[16,27,9,27],[17,4,10,4],[17,10,10,10,"arr"],[17,13,10,13],[17,16,10,16],[17,20,10,20,"Array"],[17,25,10,25],[17,26,10,26,"count"],[17,31,10,31],[17,32,10,32],[18,4,11,4],[18,8,11,8,"isObject"],[18,16,11,16],[18,19,11,19],[18,24,11,24],[19,4,12,4],[19,8,12,8],[19,15,12,15,"data"],[19,19,12,19],[19,20,12,20],[19,21,12,21],[19,22,12,22],[19,27,12,27],[19,35,12,35],[19,37,12,37],[20,6,13,8,"isObject"],[20,14,13,16],[20,17,13,19],[20,21,13,23],[21,4,14,4],[22,4,15,4],[22,9,15,9],[22,13,15,13,"i"],[22,14,15,14],[22,17,15,17],[22,18,15,18],[22,20,15,20,"i"],[22,21,15,21],[22,24,15,24,"count"],[22,29,15,29],[22,31,15,31,"i"],[22,32,15,32],[22,34,15,34],[22,36,15,36],[23,6,16,8,"arr"],[23,9,16,11],[23,10,16,12,"i"],[23,11,16,13],[23,12,16,14],[23,15,16,17,"isObject"],[23,23,16,25],[23,26,16,25,"Object"],[23,32,16,25],[23,33,16,25,"assign"],[23,39,16,25],[23,44,16,33,"data"],[23,48,16,37],[23,49,16,38,"i"],[23,50,16,39],[23,53,16,42,"len"],[23,56,16,45],[23,57,16,46],[23,61,16,51,"data"],[23,65,16,55],[23,66,16,56,"i"],[23,67,16,57],[23,70,16,60,"len"],[23,73,16,63],[23,74,16,64],[24,4,17,4],[25,4,18,4],[25,11,18,11],[25,12,18,12,"arr"],[25,15,18,15],[25,16,18,16],[26,2,19,0],[27,0,19,1],[27,3]],"functionMap":{"names":["<global>","useDataMultiplier"],"mappings":"AAA;OCO;CDW"},"hasCjsExports":false},"type":"js/module"}]}