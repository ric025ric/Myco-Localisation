{"dependencies":[{"name":"./paeth-predictor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":36},"end":{"line":3,"column":49,"index":64}}],"key":"fI75YoBtRz24BS7MNevPq6rzxzY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  let paethPredictor = require(_dependencyMap[0], \"./paeth-predictor\");\n  function filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n    for (let x = 0; x < byteWidth; x++) {\n      rawData[rawPos + x] = pxData[pxPos + x];\n    }\n  }\n  function filterSumNone(pxData, pxPos, byteWidth) {\n    let sum = 0;\n    let length = pxPos + byteWidth;\n    for (let i = pxPos; i < length; i++) {\n      sum += Math.abs(pxData[i]);\n    }\n    return sum;\n  }\n  function filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n    for (let x = 0; x < byteWidth; x++) {\n      let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n      let val = pxData[pxPos + x] - left;\n      rawData[rawPos + x] = val;\n    }\n  }\n  function filterSumSub(pxData, pxPos, byteWidth, bpp) {\n    let sum = 0;\n    for (let x = 0; x < byteWidth; x++) {\n      let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n      let val = pxData[pxPos + x] - left;\n      sum += Math.abs(val);\n    }\n    return sum;\n  }\n  function filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n    for (let x = 0; x < byteWidth; x++) {\n      let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n      let val = pxData[pxPos + x] - up;\n      rawData[rawPos + x] = val;\n    }\n  }\n  function filterSumUp(pxData, pxPos, byteWidth) {\n    let sum = 0;\n    let length = pxPos + byteWidth;\n    for (let x = pxPos; x < length; x++) {\n      let up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n      let val = pxData[x] - up;\n      sum += Math.abs(val);\n    }\n    return sum;\n  }\n  function filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n    for (let x = 0; x < byteWidth; x++) {\n      let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n      let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n      let val = pxData[pxPos + x] - (left + up >> 1);\n      rawData[rawPos + x] = val;\n    }\n  }\n  function filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n    let sum = 0;\n    for (let x = 0; x < byteWidth; x++) {\n      let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n      let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n      let val = pxData[pxPos + x] - (left + up >> 1);\n      sum += Math.abs(val);\n    }\n    return sum;\n  }\n  function filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n    for (let x = 0; x < byteWidth; x++) {\n      let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n      let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n      let upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n      let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n      rawData[rawPos + x] = val;\n    }\n  }\n  function filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n    let sum = 0;\n    for (let x = 0; x < byteWidth; x++) {\n      let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n      let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n      let upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n      let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n      sum += Math.abs(val);\n    }\n    return sum;\n  }\n  let filters = {\n    0: filterNone,\n    1: filterSub,\n    2: filterUp,\n    3: filterAvg,\n    4: filterPaeth\n  };\n  let filterSums = {\n    0: filterSumNone,\n    1: filterSumSub,\n    2: filterSumUp,\n    3: filterSumAvg,\n    4: filterSumPaeth\n  };\n  module.exports = function (pxData, width, height, options, bpp) {\n    let filterTypes;\n    if (!(\"filterType\" in options) || options.filterType === -1) {\n      filterTypes = [0, 1, 2, 3, 4];\n    } else if (typeof options.filterType === \"number\") {\n      filterTypes = [options.filterType];\n    } else {\n      throw new Error(\"unrecognised filter types\");\n    }\n    if (options.bitDepth === 16) {\n      bpp *= 2;\n    }\n    let byteWidth = width * bpp;\n    let rawPos = 0;\n    let pxPos = 0;\n    let rawData = Buffer.alloc((byteWidth + 1) * height);\n    let sel = filterTypes[0];\n    for (let y = 0; y < height; y++) {\n      if (filterTypes.length > 1) {\n        // find best filter for this line (with lowest sum of values)\n        let min = Infinity;\n        for (let i = 0; i < filterTypes.length; i++) {\n          let sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n          if (sum < min) {\n            sel = filterTypes[i];\n            min = sum;\n          }\n        }\n      }\n      rawData[rawPos] = sel;\n      rawPos++;\n      filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n      rawPos += byteWidth;\n      pxPos += byteWidth;\n    }\n    return rawData;\n  };\n});","lineCount":140,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"paethPredictor"],[4,20,3,18],[4,23,3,21,"require"],[4,30,3,28],[4,31,3,28,"_dependencyMap"],[4,45,3,28],[4,69,3,48],[4,70,3,49],[5,2,5,0],[5,11,5,9,"filterNone"],[5,21,5,19,"filterNone"],[5,22,5,20,"pxData"],[5,28,5,26],[5,30,5,28,"pxPos"],[5,35,5,33],[5,37,5,35,"byteWidth"],[5,46,5,44],[5,48,5,46,"rawData"],[5,55,5,53],[5,57,5,55,"rawPos"],[5,63,5,61],[5,65,5,63],[6,4,6,2],[6,9,6,7],[6,13,6,11,"x"],[6,14,6,12],[6,17,6,15],[6,18,6,16],[6,20,6,18,"x"],[6,21,6,19],[6,24,6,22,"byteWidth"],[6,33,6,31],[6,35,6,33,"x"],[6,36,6,34],[6,38,6,36],[6,40,6,38],[7,6,7,4,"rawData"],[7,13,7,11],[7,14,7,12,"rawPos"],[7,20,7,18],[7,23,7,21,"x"],[7,24,7,22],[7,25,7,23],[7,28,7,26,"pxData"],[7,34,7,32],[7,35,7,33,"pxPos"],[7,40,7,38],[7,43,7,41,"x"],[7,44,7,42],[7,45,7,43],[8,4,8,2],[9,2,9,0],[10,2,11,0],[10,11,11,9,"filterSumNone"],[10,24,11,22,"filterSumNone"],[10,25,11,23,"pxData"],[10,31,11,29],[10,33,11,31,"pxPos"],[10,38,11,36],[10,40,11,38,"byteWidth"],[10,49,11,47],[10,51,11,49],[11,4,12,2],[11,8,12,6,"sum"],[11,11,12,9],[11,14,12,12],[11,15,12,13],[12,4,13,2],[12,8,13,6,"length"],[12,14,13,12],[12,17,13,15,"pxPos"],[12,22,13,20],[12,25,13,23,"byteWidth"],[12,34,13,32],[13,4,15,2],[13,9,15,7],[13,13,15,11,"i"],[13,14,15,12],[13,17,15,15,"pxPos"],[13,22,15,20],[13,24,15,22,"i"],[13,25,15,23],[13,28,15,26,"length"],[13,34,15,32],[13,36,15,34,"i"],[13,37,15,35],[13,39,15,37],[13,41,15,39],[14,6,16,4,"sum"],[14,9,16,7],[14,13,16,11,"Math"],[14,17,16,15],[14,18,16,16,"abs"],[14,21,16,19],[14,22,16,20,"pxData"],[14,28,16,26],[14,29,16,27,"i"],[14,30,16,28],[14,31,16,29],[14,32,16,30],[15,4,17,2],[16,4,18,2],[16,11,18,9,"sum"],[16,14,18,12],[17,2,19,0],[18,2,21,0],[18,11,21,9,"filterSub"],[18,20,21,18,"filterSub"],[18,21,21,19,"pxData"],[18,27,21,25],[18,29,21,27,"pxPos"],[18,34,21,32],[18,36,21,34,"byteWidth"],[18,45,21,43],[18,47,21,45,"rawData"],[18,54,21,52],[18,56,21,54,"rawPos"],[18,62,21,60],[18,64,21,62,"bpp"],[18,67,21,65],[18,69,21,67],[19,4,22,2],[19,9,22,7],[19,13,22,11,"x"],[19,14,22,12],[19,17,22,15],[19,18,22,16],[19,20,22,18,"x"],[19,21,22,19],[19,24,22,22,"byteWidth"],[19,33,22,31],[19,35,22,33,"x"],[19,36,22,34],[19,38,22,36],[19,40,22,38],[20,6,23,4],[20,10,23,8,"left"],[20,14,23,12],[20,17,23,15,"x"],[20,18,23,16],[20,22,23,20,"bpp"],[20,25,23,23],[20,28,23,26,"pxData"],[20,34,23,32],[20,35,23,33,"pxPos"],[20,40,23,38],[20,43,23,41,"x"],[20,44,23,42],[20,47,23,45,"bpp"],[20,50,23,48],[20,51,23,49],[20,54,23,52],[20,55,23,53],[21,6,24,4],[21,10,24,8,"val"],[21,13,24,11],[21,16,24,14,"pxData"],[21,22,24,20],[21,23,24,21,"pxPos"],[21,28,24,26],[21,31,24,29,"x"],[21,32,24,30],[21,33,24,31],[21,36,24,34,"left"],[21,40,24,38],[22,6,26,4,"rawData"],[22,13,26,11],[22,14,26,12,"rawPos"],[22,20,26,18],[22,23,26,21,"x"],[22,24,26,22],[22,25,26,23],[22,28,26,26,"val"],[22,31,26,29],[23,4,27,2],[24,2,28,0],[25,2,30,0],[25,11,30,9,"filterSumSub"],[25,23,30,21,"filterSumSub"],[25,24,30,22,"pxData"],[25,30,30,28],[25,32,30,30,"pxPos"],[25,37,30,35],[25,39,30,37,"byteWidth"],[25,48,30,46],[25,50,30,48,"bpp"],[25,53,30,51],[25,55,30,53],[26,4,31,2],[26,8,31,6,"sum"],[26,11,31,9],[26,14,31,12],[26,15,31,13],[27,4,32,2],[27,9,32,7],[27,13,32,11,"x"],[27,14,32,12],[27,17,32,15],[27,18,32,16],[27,20,32,18,"x"],[27,21,32,19],[27,24,32,22,"byteWidth"],[27,33,32,31],[27,35,32,33,"x"],[27,36,32,34],[27,38,32,36],[27,40,32,38],[28,6,33,4],[28,10,33,8,"left"],[28,14,33,12],[28,17,33,15,"x"],[28,18,33,16],[28,22,33,20,"bpp"],[28,25,33,23],[28,28,33,26,"pxData"],[28,34,33,32],[28,35,33,33,"pxPos"],[28,40,33,38],[28,43,33,41,"x"],[28,44,33,42],[28,47,33,45,"bpp"],[28,50,33,48],[28,51,33,49],[28,54,33,52],[28,55,33,53],[29,6,34,4],[29,10,34,8,"val"],[29,13,34,11],[29,16,34,14,"pxData"],[29,22,34,20],[29,23,34,21,"pxPos"],[29,28,34,26],[29,31,34,29,"x"],[29,32,34,30],[29,33,34,31],[29,36,34,34,"left"],[29,40,34,38],[30,6,36,4,"sum"],[30,9,36,7],[30,13,36,11,"Math"],[30,17,36,15],[30,18,36,16,"abs"],[30,21,36,19],[30,22,36,20,"val"],[30,25,36,23],[30,26,36,24],[31,4,37,2],[32,4,39,2],[32,11,39,9,"sum"],[32,14,39,12],[33,2,40,0],[34,2,42,0],[34,11,42,9,"filterUp"],[34,19,42,17,"filterUp"],[34,20,42,18,"pxData"],[34,26,42,24],[34,28,42,26,"pxPos"],[34,33,42,31],[34,35,42,33,"byteWidth"],[34,44,42,42],[34,46,42,44,"rawData"],[34,53,42,51],[34,55,42,53,"rawPos"],[34,61,42,59],[34,63,42,61],[35,4,43,2],[35,9,43,7],[35,13,43,11,"x"],[35,14,43,12],[35,17,43,15],[35,18,43,16],[35,20,43,18,"x"],[35,21,43,19],[35,24,43,22,"byteWidth"],[35,33,43,31],[35,35,43,33,"x"],[35,36,43,34],[35,38,43,36],[35,40,43,38],[36,6,44,4],[36,10,44,8,"up"],[36,12,44,10],[36,15,44,13,"pxPos"],[36,20,44,18],[36,23,44,21],[36,24,44,22],[36,27,44,25,"pxData"],[36,33,44,31],[36,34,44,32,"pxPos"],[36,39,44,37],[36,42,44,40,"x"],[36,43,44,41],[36,46,44,44,"byteWidth"],[36,55,44,53],[36,56,44,54],[36,59,44,57],[36,60,44,58],[37,6,45,4],[37,10,45,8,"val"],[37,13,45,11],[37,16,45,14,"pxData"],[37,22,45,20],[37,23,45,21,"pxPos"],[37,28,45,26],[37,31,45,29,"x"],[37,32,45,30],[37,33,45,31],[37,36,45,34,"up"],[37,38,45,36],[38,6,47,4,"rawData"],[38,13,47,11],[38,14,47,12,"rawPos"],[38,20,47,18],[38,23,47,21,"x"],[38,24,47,22],[38,25,47,23],[38,28,47,26,"val"],[38,31,47,29],[39,4,48,2],[40,2,49,0],[41,2,51,0],[41,11,51,9,"filterSumUp"],[41,22,51,20,"filterSumUp"],[41,23,51,21,"pxData"],[41,29,51,27],[41,31,51,29,"pxPos"],[41,36,51,34],[41,38,51,36,"byteWidth"],[41,47,51,45],[41,49,51,47],[42,4,52,2],[42,8,52,6,"sum"],[42,11,52,9],[42,14,52,12],[42,15,52,13],[43,4,53,2],[43,8,53,6,"length"],[43,14,53,12],[43,17,53,15,"pxPos"],[43,22,53,20],[43,25,53,23,"byteWidth"],[43,34,53,32],[44,4,54,2],[44,9,54,7],[44,13,54,11,"x"],[44,14,54,12],[44,17,54,15,"pxPos"],[44,22,54,20],[44,24,54,22,"x"],[44,25,54,23],[44,28,54,26,"length"],[44,34,54,32],[44,36,54,34,"x"],[44,37,54,35],[44,39,54,37],[44,41,54,39],[45,6,55,4],[45,10,55,8,"up"],[45,12,55,10],[45,15,55,13,"pxPos"],[45,20,55,18],[45,23,55,21],[45,24,55,22],[45,27,55,25,"pxData"],[45,33,55,31],[45,34,55,32,"x"],[45,35,55,33],[45,38,55,36,"byteWidth"],[45,47,55,45],[45,48,55,46],[45,51,55,49],[45,52,55,50],[46,6,56,4],[46,10,56,8,"val"],[46,13,56,11],[46,16,56,14,"pxData"],[46,22,56,20],[46,23,56,21,"x"],[46,24,56,22],[46,25,56,23],[46,28,56,26,"up"],[46,30,56,28],[47,6,58,4,"sum"],[47,9,58,7],[47,13,58,11,"Math"],[47,17,58,15],[47,18,58,16,"abs"],[47,21,58,19],[47,22,58,20,"val"],[47,25,58,23],[47,26,58,24],[48,4,59,2],[49,4,61,2],[49,11,61,9,"sum"],[49,14,61,12],[50,2,62,0],[51,2,64,0],[51,11,64,9,"filterAvg"],[51,20,64,18,"filterAvg"],[51,21,64,19,"pxData"],[51,27,64,25],[51,29,64,27,"pxPos"],[51,34,64,32],[51,36,64,34,"byteWidth"],[51,45,64,43],[51,47,64,45,"rawData"],[51,54,64,52],[51,56,64,54,"rawPos"],[51,62,64,60],[51,64,64,62,"bpp"],[51,67,64,65],[51,69,64,67],[52,4,65,2],[52,9,65,7],[52,13,65,11,"x"],[52,14,65,12],[52,17,65,15],[52,18,65,16],[52,20,65,18,"x"],[52,21,65,19],[52,24,65,22,"byteWidth"],[52,33,65,31],[52,35,65,33,"x"],[52,36,65,34],[52,38,65,36],[52,40,65,38],[53,6,66,4],[53,10,66,8,"left"],[53,14,66,12],[53,17,66,15,"x"],[53,18,66,16],[53,22,66,20,"bpp"],[53,25,66,23],[53,28,66,26,"pxData"],[53,34,66,32],[53,35,66,33,"pxPos"],[53,40,66,38],[53,43,66,41,"x"],[53,44,66,42],[53,47,66,45,"bpp"],[53,50,66,48],[53,51,66,49],[53,54,66,52],[53,55,66,53],[54,6,67,4],[54,10,67,8,"up"],[54,12,67,10],[54,15,67,13,"pxPos"],[54,20,67,18],[54,23,67,21],[54,24,67,22],[54,27,67,25,"pxData"],[54,33,67,31],[54,34,67,32,"pxPos"],[54,39,67,37],[54,42,67,40,"x"],[54,43,67,41],[54,46,67,44,"byteWidth"],[54,55,67,53],[54,56,67,54],[54,59,67,57],[54,60,67,58],[55,6,68,4],[55,10,68,8,"val"],[55,13,68,11],[55,16,68,14,"pxData"],[55,22,68,20],[55,23,68,21,"pxPos"],[55,28,68,26],[55,31,68,29,"x"],[55,32,68,30],[55,33,68,31],[55,37,68,36,"left"],[55,41,68,40],[55,44,68,43,"up"],[55,46,68,45],[55,50,68,50],[55,51,68,51],[55,52,68,52],[56,6,70,4,"rawData"],[56,13,70,11],[56,14,70,12,"rawPos"],[56,20,70,18],[56,23,70,21,"x"],[56,24,70,22],[56,25,70,23],[56,28,70,26,"val"],[56,31,70,29],[57,4,71,2],[58,2,72,0],[59,2,74,0],[59,11,74,9,"filterSumAvg"],[59,23,74,21,"filterSumAvg"],[59,24,74,22,"pxData"],[59,30,74,28],[59,32,74,30,"pxPos"],[59,37,74,35],[59,39,74,37,"byteWidth"],[59,48,74,46],[59,50,74,48,"bpp"],[59,53,74,51],[59,55,74,53],[60,4,75,2],[60,8,75,6,"sum"],[60,11,75,9],[60,14,75,12],[60,15,75,13],[61,4,76,2],[61,9,76,7],[61,13,76,11,"x"],[61,14,76,12],[61,17,76,15],[61,18,76,16],[61,20,76,18,"x"],[61,21,76,19],[61,24,76,22,"byteWidth"],[61,33,76,31],[61,35,76,33,"x"],[61,36,76,34],[61,38,76,36],[61,40,76,38],[62,6,77,4],[62,10,77,8,"left"],[62,14,77,12],[62,17,77,15,"x"],[62,18,77,16],[62,22,77,20,"bpp"],[62,25,77,23],[62,28,77,26,"pxData"],[62,34,77,32],[62,35,77,33,"pxPos"],[62,40,77,38],[62,43,77,41,"x"],[62,44,77,42],[62,47,77,45,"bpp"],[62,50,77,48],[62,51,77,49],[62,54,77,52],[62,55,77,53],[63,6,78,4],[63,10,78,8,"up"],[63,12,78,10],[63,15,78,13,"pxPos"],[63,20,78,18],[63,23,78,21],[63,24,78,22],[63,27,78,25,"pxData"],[63,33,78,31],[63,34,78,32,"pxPos"],[63,39,78,37],[63,42,78,40,"x"],[63,43,78,41],[63,46,78,44,"byteWidth"],[63,55,78,53],[63,56,78,54],[63,59,78,57],[63,60,78,58],[64,6,79,4],[64,10,79,8,"val"],[64,13,79,11],[64,16,79,14,"pxData"],[64,22,79,20],[64,23,79,21,"pxPos"],[64,28,79,26],[64,31,79,29,"x"],[64,32,79,30],[64,33,79,31],[64,37,79,36,"left"],[64,41,79,40],[64,44,79,43,"up"],[64,46,79,45],[64,50,79,50],[64,51,79,51],[64,52,79,52],[65,6,81,4,"sum"],[65,9,81,7],[65,13,81,11,"Math"],[65,17,81,15],[65,18,81,16,"abs"],[65,21,81,19],[65,22,81,20,"val"],[65,25,81,23],[65,26,81,24],[66,4,82,2],[67,4,84,2],[67,11,84,9,"sum"],[67,14,84,12],[68,2,85,0],[69,2,87,0],[69,11,87,9,"filterPaeth"],[69,22,87,20,"filterPaeth"],[69,23,87,21,"pxData"],[69,29,87,27],[69,31,87,29,"pxPos"],[69,36,87,34],[69,38,87,36,"byteWidth"],[69,47,87,45],[69,49,87,47,"rawData"],[69,56,87,54],[69,58,87,56,"rawPos"],[69,64,87,62],[69,66,87,64,"bpp"],[69,69,87,67],[69,71,87,69],[70,4,88,2],[70,9,88,7],[70,13,88,11,"x"],[70,14,88,12],[70,17,88,15],[70,18,88,16],[70,20,88,18,"x"],[70,21,88,19],[70,24,88,22,"byteWidth"],[70,33,88,31],[70,35,88,33,"x"],[70,36,88,34],[70,38,88,36],[70,40,88,38],[71,6,89,4],[71,10,89,8,"left"],[71,14,89,12],[71,17,89,15,"x"],[71,18,89,16],[71,22,89,20,"bpp"],[71,25,89,23],[71,28,89,26,"pxData"],[71,34,89,32],[71,35,89,33,"pxPos"],[71,40,89,38],[71,43,89,41,"x"],[71,44,89,42],[71,47,89,45,"bpp"],[71,50,89,48],[71,51,89,49],[71,54,89,52],[71,55,89,53],[72,6,90,4],[72,10,90,8,"up"],[72,12,90,10],[72,15,90,13,"pxPos"],[72,20,90,18],[72,23,90,21],[72,24,90,22],[72,27,90,25,"pxData"],[72,33,90,31],[72,34,90,32,"pxPos"],[72,39,90,37],[72,42,90,40,"x"],[72,43,90,41],[72,46,90,44,"byteWidth"],[72,55,90,53],[72,56,90,54],[72,59,90,57],[72,60,90,58],[73,6,91,4],[73,10,91,8,"upleft"],[73,16,91,14],[73,19,92,6,"pxPos"],[73,24,92,11],[73,27,92,14],[73,28,92,15],[73,32,92,19,"x"],[73,33,92,20],[73,37,92,24,"bpp"],[73,40,92,27],[73,43,92,30,"pxData"],[73,49,92,36],[73,50,92,37,"pxPos"],[73,55,92,42],[73,58,92,45,"x"],[73,59,92,46],[73,63,92,50,"byteWidth"],[73,72,92,59],[73,75,92,62,"bpp"],[73,78,92,65],[73,79,92,66],[73,80,92,67],[73,83,92,70],[73,84,92,71],[74,6,93,4],[74,10,93,8,"val"],[74,13,93,11],[74,16,93,14,"pxData"],[74,22,93,20],[74,23,93,21,"pxPos"],[74,28,93,26],[74,31,93,29,"x"],[74,32,93,30],[74,33,93,31],[74,36,93,34,"paethPredictor"],[74,50,93,48],[74,51,93,49,"left"],[74,55,93,53],[74,57,93,55,"up"],[74,59,93,57],[74,61,93,59,"upleft"],[74,67,93,65],[74,68,93,66],[75,6,95,4,"rawData"],[75,13,95,11],[75,14,95,12,"rawPos"],[75,20,95,18],[75,23,95,21,"x"],[75,24,95,22],[75,25,95,23],[75,28,95,26,"val"],[75,31,95,29],[76,4,96,2],[77,2,97,0],[78,2,99,0],[78,11,99,9,"filterSumPaeth"],[78,25,99,23,"filterSumPaeth"],[78,26,99,24,"pxData"],[78,32,99,30],[78,34,99,32,"pxPos"],[78,39,99,37],[78,41,99,39,"byteWidth"],[78,50,99,48],[78,52,99,50,"bpp"],[78,55,99,53],[78,57,99,55],[79,4,100,2],[79,8,100,6,"sum"],[79,11,100,9],[79,14,100,12],[79,15,100,13],[80,4,101,2],[80,9,101,7],[80,13,101,11,"x"],[80,14,101,12],[80,17,101,15],[80,18,101,16],[80,20,101,18,"x"],[80,21,101,19],[80,24,101,22,"byteWidth"],[80,33,101,31],[80,35,101,33,"x"],[80,36,101,34],[80,38,101,36],[80,40,101,38],[81,6,102,4],[81,10,102,8,"left"],[81,14,102,12],[81,17,102,15,"x"],[81,18,102,16],[81,22,102,20,"bpp"],[81,25,102,23],[81,28,102,26,"pxData"],[81,34,102,32],[81,35,102,33,"pxPos"],[81,40,102,38],[81,43,102,41,"x"],[81,44,102,42],[81,47,102,45,"bpp"],[81,50,102,48],[81,51,102,49],[81,54,102,52],[81,55,102,53],[82,6,103,4],[82,10,103,8,"up"],[82,12,103,10],[82,15,103,13,"pxPos"],[82,20,103,18],[82,23,103,21],[82,24,103,22],[82,27,103,25,"pxData"],[82,33,103,31],[82,34,103,32,"pxPos"],[82,39,103,37],[82,42,103,40,"x"],[82,43,103,41],[82,46,103,44,"byteWidth"],[82,55,103,53],[82,56,103,54],[82,59,103,57],[82,60,103,58],[83,6,104,4],[83,10,104,8,"upleft"],[83,16,104,14],[83,19,105,6,"pxPos"],[83,24,105,11],[83,27,105,14],[83,28,105,15],[83,32,105,19,"x"],[83,33,105,20],[83,37,105,24,"bpp"],[83,40,105,27],[83,43,105,30,"pxData"],[83,49,105,36],[83,50,105,37,"pxPos"],[83,55,105,42],[83,58,105,45,"x"],[83,59,105,46],[83,63,105,50,"byteWidth"],[83,72,105,59],[83,75,105,62,"bpp"],[83,78,105,65],[83,79,105,66],[83,80,105,67],[83,83,105,70],[83,84,105,71],[84,6,106,4],[84,10,106,8,"val"],[84,13,106,11],[84,16,106,14,"pxData"],[84,22,106,20],[84,23,106,21,"pxPos"],[84,28,106,26],[84,31,106,29,"x"],[84,32,106,30],[84,33,106,31],[84,36,106,34,"paethPredictor"],[84,50,106,48],[84,51,106,49,"left"],[84,55,106,53],[84,57,106,55,"up"],[84,59,106,57],[84,61,106,59,"upleft"],[84,67,106,65],[84,68,106,66],[85,6,108,4,"sum"],[85,9,108,7],[85,13,108,11,"Math"],[85,17,108,15],[85,18,108,16,"abs"],[85,21,108,19],[85,22,108,20,"val"],[85,25,108,23],[85,26,108,24],[86,4,109,2],[87,4,111,2],[87,11,111,9,"sum"],[87,14,111,12],[88,2,112,0],[89,2,114,0],[89,6,114,4,"filters"],[89,13,114,11],[89,16,114,14],[90,4,115,2],[90,5,115,3],[90,7,115,5,"filterNone"],[90,17,115,15],[91,4,116,2],[91,5,116,3],[91,7,116,5,"filterSub"],[91,16,116,14],[92,4,117,2],[92,5,117,3],[92,7,117,5,"filterUp"],[92,15,117,13],[93,4,118,2],[93,5,118,3],[93,7,118,5,"filterAvg"],[93,16,118,14],[94,4,119,2],[94,5,119,3],[94,7,119,5,"filterPaeth"],[95,2,120,0],[95,3,120,1],[96,2,122,0],[96,6,122,4,"filterSums"],[96,16,122,14],[96,19,122,17],[97,4,123,2],[97,5,123,3],[97,7,123,5,"filterSumNone"],[97,20,123,18],[98,4,124,2],[98,5,124,3],[98,7,124,5,"filterSumSub"],[98,19,124,17],[99,4,125,2],[99,5,125,3],[99,7,125,5,"filterSumUp"],[99,18,125,16],[100,4,126,2],[100,5,126,3],[100,7,126,5,"filterSumAvg"],[100,19,126,17],[101,4,127,2],[101,5,127,3],[101,7,127,5,"filterSumPaeth"],[102,2,128,0],[102,3,128,1],[103,2,130,0,"module"],[103,8,130,6],[103,9,130,7,"exports"],[103,16,130,14],[103,19,130,17],[103,29,130,27,"pxData"],[103,35,130,33],[103,37,130,35,"width"],[103,42,130,40],[103,44,130,42,"height"],[103,50,130,48],[103,52,130,50,"options"],[103,59,130,57],[103,61,130,59,"bpp"],[103,64,130,62],[103,66,130,64],[104,4,131,2],[104,8,131,6,"filterTypes"],[104,19,131,17],[105,4,132,2],[105,8,132,6],[105,10,132,8],[105,22,132,20],[105,26,132,24,"options"],[105,33,132,31],[105,34,132,32],[105,38,132,36,"options"],[105,45,132,43],[105,46,132,44,"filterType"],[105,56,132,54],[105,61,132,59],[105,62,132,60],[105,63,132,61],[105,65,132,63],[106,6,133,4,"filterTypes"],[106,17,133,15],[106,20,133,18],[106,21,133,19],[106,22,133,20],[106,24,133,22],[106,25,133,23],[106,27,133,25],[106,28,133,26],[106,30,133,28],[106,31,133,29],[106,33,133,31],[106,34,133,32],[106,35,133,33],[107,4,134,2],[107,5,134,3],[107,11,134,9],[107,15,134,13],[107,22,134,20,"options"],[107,29,134,27],[107,30,134,28,"filterType"],[107,40,134,38],[107,45,134,43],[107,53,134,51],[107,55,134,53],[108,6,135,4,"filterTypes"],[108,17,135,15],[108,20,135,18],[108,21,135,19,"options"],[108,28,135,26],[108,29,135,27,"filterType"],[108,39,135,37],[108,40,135,38],[109,4,136,2],[109,5,136,3],[109,11,136,9],[110,6,137,4],[110,12,137,10],[110,16,137,14,"Error"],[110,21,137,19],[110,22,137,20],[110,49,137,47],[110,50,137,48],[111,4,138,2],[112,4,140,2],[112,8,140,6,"options"],[112,15,140,13],[112,16,140,14,"bitDepth"],[112,24,140,22],[112,29,140,27],[112,31,140,29],[112,33,140,31],[113,6,141,4,"bpp"],[113,9,141,7],[113,13,141,11],[113,14,141,12],[114,4,142,2],[115,4,143,2],[115,8,143,6,"byteWidth"],[115,17,143,15],[115,20,143,18,"width"],[115,25,143,23],[115,28,143,26,"bpp"],[115,31,143,29],[116,4,144,2],[116,8,144,6,"rawPos"],[116,14,144,12],[116,17,144,15],[116,18,144,16],[117,4,145,2],[117,8,145,6,"pxPos"],[117,13,145,11],[117,16,145,14],[117,17,145,15],[118,4,146,2],[118,8,146,6,"rawData"],[118,15,146,13],[118,18,146,16,"Buffer"],[118,24,146,22],[118,25,146,23,"alloc"],[118,30,146,28],[118,31,146,29],[118,32,146,30,"byteWidth"],[118,41,146,39],[118,44,146,42],[118,45,146,43],[118,49,146,47,"height"],[118,55,146,53],[118,56,146,54],[119,4,148,2],[119,8,148,6,"sel"],[119,11,148,9],[119,14,148,12,"filterTypes"],[119,25,148,23],[119,26,148,24],[119,27,148,25],[119,28,148,26],[120,4,150,2],[120,9,150,7],[120,13,150,11,"y"],[120,14,150,12],[120,17,150,15],[120,18,150,16],[120,20,150,18,"y"],[120,21,150,19],[120,24,150,22,"height"],[120,30,150,28],[120,32,150,30,"y"],[120,33,150,31],[120,35,150,33],[120,37,150,35],[121,6,151,4],[121,10,151,8,"filterTypes"],[121,21,151,19],[121,22,151,20,"length"],[121,28,151,26],[121,31,151,29],[121,32,151,30],[121,34,151,32],[122,8,152,6],[123,8,153,6],[123,12,153,10,"min"],[123,15,153,13],[123,18,153,16,"Infinity"],[123,26,153,24],[124,8,155,6],[124,13,155,11],[124,17,155,15,"i"],[124,18,155,16],[124,21,155,19],[124,22,155,20],[124,24,155,22,"i"],[124,25,155,23],[124,28,155,26,"filterTypes"],[124,39,155,37],[124,40,155,38,"length"],[124,46,155,44],[124,48,155,46,"i"],[124,49,155,47],[124,51,155,49],[124,53,155,51],[125,10,156,8],[125,14,156,12,"sum"],[125,17,156,15],[125,20,156,18,"filterSums"],[125,30,156,28],[125,31,156,29,"filterTypes"],[125,42,156,40],[125,43,156,41,"i"],[125,44,156,42],[125,45,156,43],[125,46,156,44],[125,47,156,45,"pxData"],[125,53,156,51],[125,55,156,53,"pxPos"],[125,60,156,58],[125,62,156,60,"byteWidth"],[125,71,156,69],[125,73,156,71,"bpp"],[125,76,156,74],[125,77,156,75],[126,10,157,8],[126,14,157,12,"sum"],[126,17,157,15],[126,20,157,18,"min"],[126,23,157,21],[126,25,157,23],[127,12,158,10,"sel"],[127,15,158,13],[127,18,158,16,"filterTypes"],[127,29,158,27],[127,30,158,28,"i"],[127,31,158,29],[127,32,158,30],[128,12,159,10,"min"],[128,15,159,13],[128,18,159,16,"sum"],[128,21,159,19],[129,10,160,8],[130,8,161,6],[131,6,162,4],[132,6,164,4,"rawData"],[132,13,164,11],[132,14,164,12,"rawPos"],[132,20,164,18],[132,21,164,19],[132,24,164,22,"sel"],[132,27,164,25],[133,6,165,4,"rawPos"],[133,12,165,10],[133,14,165,12],[134,6,166,4,"filters"],[134,13,166,11],[134,14,166,12,"sel"],[134,17,166,15],[134,18,166,16],[134,19,166,17,"pxData"],[134,25,166,23],[134,27,166,25,"pxPos"],[134,32,166,30],[134,34,166,32,"byteWidth"],[134,43,166,41],[134,45,166,43,"rawData"],[134,52,166,50],[134,54,166,52,"rawPos"],[134,60,166,58],[134,62,166,60,"bpp"],[134,65,166,63],[134,66,166,64],[135,6,167,4,"rawPos"],[135,12,167,10],[135,16,167,14,"byteWidth"],[135,25,167,23],[136,6,168,4,"pxPos"],[136,11,168,9],[136,15,168,13,"byteWidth"],[136,24,168,22],[137,4,169,2],[138,4,170,2],[138,11,170,9,"rawData"],[138,18,170,16],[139,2,171,0],[139,3,171,1],[140,0,171,2],[140,3]],"functionMap":{"names":["<global>","filterNone","filterSumNone","filterSub","filterSumSub","filterUp","filterSumUp","filterAvg","filterSumAvg","filterPaeth","filterSumPaeth","module.exports"],"mappings":"AAA;ACI;CDI;AEE;CFQ;AGE;CHO;AIE;CJU;AKE;CLO;AME;CNW;AOE;CPQ;AQE;CRW;ASE;CTU;AUE;CVa;iBWkB;CXyC"},"hasCjsExports":true},"type":"js/module"}]}