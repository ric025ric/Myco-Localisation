{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../RecyclerViewContextProvider","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":72,"index":119}}],"key":"aoz1c9gK2hAu/MtaQxNdSmr4GAc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useLayoutState = useLayoutState;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _RecyclerViewContextProvider = require(_dependencyMap[1], \"../RecyclerViewContextProvider\");\n  /**\n   * Custom hook that combines state management with RecyclerView layout updates.\n   * This hook provides a way to manage state that affects the layout of the RecyclerView,\n   * ensuring that any state changes trigger a layout recalculation.\n   *\n   * @param initialState - The initial state value or a function that returns the initial state\n   * @returns A tuple containing:\n   *   - The current state value\n   *   - A setter function that updates the state and triggers a layout recalculation\n   */\n  function useLayoutState(initialState) {\n    // Initialize state with the provided initial value\n    const [state, setState] = (0, _react.useState)(initialState);\n    // Get the RecyclerView context for layout management\n    const recyclerViewContext = (0, _RecyclerViewContextProvider.useRecyclerViewContext)();\n    /**\n     * Setter function that updates the state and triggers a layout recalculation.\n     * This ensures that any state changes that affect the layout are properly reflected\n     * in the RecyclerView's visual representation.\n     *\n     * @param newValue - Either a new state value or a function that receives the previous state\n     *                   and returns the new state\n     */\n    const setLayoutState = (0, _react.useCallback)((newValue, skipParentLayout) => {\n      // Update the state using either the new value or the result of the updater function\n      setState(prevValue => typeof newValue === \"function\" ? newValue(prevValue) : newValue);\n      if (!skipParentLayout) {\n        // Trigger a layout recalculation in the RecyclerView\n        recyclerViewContext === null || recyclerViewContext === void 0 ? void 0 : recyclerViewContext.layout();\n      }\n    }, [recyclerViewContext]);\n    return [state, setLayoutState];\n  }\n});","lineCount":43,"map":[[7,2,13,0,"exports"],[7,9,13,0],[7,10,13,0,"useLayoutState"],[7,24,13,0],[7,27,13,0,"useLayoutState"],[7,41,13,0],[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_RecyclerViewContextProvider"],[9,34,2,0],[9,37,2,0,"require"],[9,44,2,0],[9,45,2,0,"_dependencyMap"],[9,59,2,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,2,13,7],[20,11,13,16,"useLayoutState"],[20,25,13,30,"useLayoutState"],[20,26,13,31,"initialState"],[20,38,13,43],[20,40,13,45],[21,4,14,4],[22,4,15,4],[22,10,15,10],[22,11,15,11,"state"],[22,16,15,16],[22,18,15,18,"setState"],[22,26,15,26],[22,27,15,27],[22,30,15,30],[22,34,15,30,"useState"],[22,40,15,38],[22,41,15,38,"useState"],[22,49,15,38],[22,51,15,39,"initialState"],[22,63,15,51],[22,64,15,52],[23,4,16,4],[24,4,17,4],[24,10,17,10,"recyclerViewContext"],[24,29,17,29],[24,32,17,32],[24,36,17,32,"useRecyclerViewContext"],[24,64,17,54],[24,65,17,54,"useRecyclerViewContext"],[24,87,17,54],[24,89,17,55],[24,90,17,56],[25,4,18,4],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,4,26,4],[33,10,26,10,"setLayoutState"],[33,24,26,24],[33,27,26,27],[33,31,26,27,"useCallback"],[33,37,26,38],[33,38,26,38,"useCallback"],[33,49,26,38],[33,51,26,39],[33,52,26,40,"newValue"],[33,60,26,48],[33,62,26,50,"skipParentLayout"],[33,78,26,66],[33,83,26,71],[34,6,27,8],[35,6,28,8,"setState"],[35,14,28,16],[35,15,28,18,"prevValue"],[35,24,28,27],[35,28,28,32],[35,35,28,39,"newValue"],[35,43,28,47],[35,48,28,52],[35,58,28,62],[35,61,29,14,"newValue"],[35,69,29,22],[35,70,29,23,"prevValue"],[35,79,29,32],[35,80,29,33],[35,83,30,14,"newValue"],[35,91,30,22],[35,92,30,23],[36,6,31,8],[36,10,31,12],[36,11,31,13,"skipParentLayout"],[36,27,31,29],[36,29,31,31],[37,8,32,12],[38,8,33,12,"recyclerViewContext"],[38,27,33,31],[38,32,33,36],[38,36,33,40],[38,40,33,44,"recyclerViewContext"],[38,59,33,63],[38,64,33,68],[38,69,33,73],[38,70,33,74],[38,73,33,77],[38,78,33,82],[38,79,33,83],[38,82,33,86,"recyclerViewContext"],[38,101,33,105],[38,102,33,106,"layout"],[38,108,33,112],[38,109,33,113],[38,110,33,114],[39,6,34,8],[40,4,35,4],[40,5,35,5],[40,7,35,7],[40,8,35,8,"recyclerViewContext"],[40,27,35,27],[40,28,35,28],[40,29,35,29],[41,4,36,4],[41,11,36,11],[41,12,36,12,"state"],[41,17,36,17],[41,19,36,19,"setLayoutState"],[41,33,36,33],[41,34,36,34],[42,2,37,0],[43,0,37,1],[43,3]],"functionMap":{"names":["<global>","useLayoutState","setLayoutState","setState$argument_0"],"mappings":"AAA;OCY;uCCa;iBCE;sBDE;KDK;CDE"},"hasCjsExports":false},"type":"js/module"}]}