{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  function dePalette(indata, outdata, width, height, palette) {\n    let pxPos = 0;\n    // use values from palette\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let color = palette[indata[pxPos]];\n        if (!color) {\n          throw new Error(\"index \" + indata[pxPos] + \" not in palette\");\n        }\n        for (let i = 0; i < 4; i++) {\n          outdata[pxPos + i] = color[i];\n        }\n        pxPos += 4;\n      }\n    }\n  }\n  function replaceTransparentColor(indata, outdata, width, height, transColor) {\n    let pxPos = 0;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let makeTrans = false;\n        if (transColor.length === 1) {\n          if (transColor[0] === indata[pxPos]) {\n            makeTrans = true;\n          }\n        } else if (transColor[0] === indata[pxPos] && transColor[1] === indata[pxPos + 1] && transColor[2] === indata[pxPos + 2]) {\n          makeTrans = true;\n        }\n        if (makeTrans) {\n          for (let i = 0; i < 4; i++) {\n            outdata[pxPos + i] = 0;\n          }\n        }\n        pxPos += 4;\n      }\n    }\n  }\n  function scaleDepth(indata, outdata, width, height, depth) {\n    let maxOutSample = 255;\n    let maxInSample = Math.pow(2, depth) - 1;\n    let pxPos = 0;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        for (let i = 0; i < 4; i++) {\n          outdata[pxPos + i] = Math.floor(indata[pxPos + i] * maxOutSample / maxInSample + 0.5);\n        }\n        pxPos += 4;\n      }\n    }\n  }\n  module.exports = function (indata, imageData) {\n    let depth = imageData.depth;\n    let width = imageData.width;\n    let height = imageData.height;\n    let colorType = imageData.colorType;\n    let transColor = imageData.transColor;\n    let palette = imageData.palette;\n    let outdata = indata; // only different for 16 bits\n\n    if (colorType === 3) {\n      // paletted\n      dePalette(indata, outdata, width, height, palette);\n    } else {\n      if (transColor) {\n        replaceTransparentColor(indata, outdata, width, height, transColor);\n      }\n      // if it needs scaling\n      if (depth !== 8) {\n        // if we need to change the buffer size\n        if (depth === 16) {\n          outdata = Buffer.alloc(width * height * 4);\n        }\n        scaleDepth(indata, outdata, width, height, depth);\n      }\n    }\n    return outdata;\n  };\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,11,3,9,"dePalette"],[4,20,3,18,"dePalette"],[4,21,3,19,"indata"],[4,27,3,25],[4,29,3,27,"outdata"],[4,36,3,34],[4,38,3,36,"width"],[4,43,3,41],[4,45,3,43,"height"],[4,51,3,49],[4,53,3,51,"palette"],[4,60,3,58],[4,62,3,60],[5,4,4,2],[5,8,4,6,"pxPos"],[5,13,4,11],[5,16,4,14],[5,17,4,15],[6,4,5,2],[7,4,6,2],[7,9,6,7],[7,13,6,11,"y"],[7,14,6,12],[7,17,6,15],[7,18,6,16],[7,20,6,18,"y"],[7,21,6,19],[7,24,6,22,"height"],[7,30,6,28],[7,32,6,30,"y"],[7,33,6,31],[7,35,6,33],[7,37,6,35],[8,6,7,4],[8,11,7,9],[8,15,7,13,"x"],[8,16,7,14],[8,19,7,17],[8,20,7,18],[8,22,7,20,"x"],[8,23,7,21],[8,26,7,24,"width"],[8,31,7,29],[8,33,7,31,"x"],[8,34,7,32],[8,36,7,34],[8,38,7,36],[9,8,8,6],[9,12,8,10,"color"],[9,17,8,15],[9,20,8,18,"palette"],[9,27,8,25],[9,28,8,26,"indata"],[9,34,8,32],[9,35,8,33,"pxPos"],[9,40,8,38],[9,41,8,39],[9,42,8,40],[10,8,10,6],[10,12,10,10],[10,13,10,11,"color"],[10,18,10,16],[10,20,10,18],[11,10,11,8],[11,16,11,14],[11,20,11,18,"Error"],[11,25,11,23],[11,26,11,24],[11,34,11,32],[11,37,11,35,"indata"],[11,43,11,41],[11,44,11,42,"pxPos"],[11,49,11,47],[11,50,11,48],[11,53,11,51],[11,70,11,68],[11,71,11,69],[12,8,12,6],[13,8,14,6],[13,13,14,11],[13,17,14,15,"i"],[13,18,14,16],[13,21,14,19],[13,22,14,20],[13,24,14,22,"i"],[13,25,14,23],[13,28,14,26],[13,29,14,27],[13,31,14,29,"i"],[13,32,14,30],[13,34,14,32],[13,36,14,34],[14,10,15,8,"outdata"],[14,17,15,15],[14,18,15,16,"pxPos"],[14,23,15,21],[14,26,15,24,"i"],[14,27,15,25],[14,28,15,26],[14,31,15,29,"color"],[14,36,15,34],[14,37,15,35,"i"],[14,38,15,36],[14,39,15,37],[15,8,16,6],[16,8,17,6,"pxPos"],[16,13,17,11],[16,17,17,15],[16,18,17,16],[17,6,18,4],[18,4,19,2],[19,2,20,0],[20,2,22,0],[20,11,22,9,"replaceTransparentColor"],[20,34,22,32,"replaceTransparentColor"],[20,35,22,33,"indata"],[20,41,22,39],[20,43,22,41,"outdata"],[20,50,22,48],[20,52,22,50,"width"],[20,57,22,55],[20,59,22,57,"height"],[20,65,22,63],[20,67,22,65,"transColor"],[20,77,22,75],[20,79,22,77],[21,4,23,2],[21,8,23,6,"pxPos"],[21,13,23,11],[21,16,23,14],[21,17,23,15],[22,4,24,2],[22,9,24,7],[22,13,24,11,"y"],[22,14,24,12],[22,17,24,15],[22,18,24,16],[22,20,24,18,"y"],[22,21,24,19],[22,24,24,22,"height"],[22,30,24,28],[22,32,24,30,"y"],[22,33,24,31],[22,35,24,33],[22,37,24,35],[23,6,25,4],[23,11,25,9],[23,15,25,13,"x"],[23,16,25,14],[23,19,25,17],[23,20,25,18],[23,22,25,20,"x"],[23,23,25,21],[23,26,25,24,"width"],[23,31,25,29],[23,33,25,31,"x"],[23,34,25,32],[23,36,25,34],[23,38,25,36],[24,8,26,6],[24,12,26,10,"makeTrans"],[24,21,26,19],[24,24,26,22],[24,29,26,27],[25,8,28,6],[25,12,28,10,"transColor"],[25,22,28,20],[25,23,28,21,"length"],[25,29,28,27],[25,34,28,32],[25,35,28,33],[25,37,28,35],[26,10,29,8],[26,14,29,12,"transColor"],[26,24,29,22],[26,25,29,23],[26,26,29,24],[26,27,29,25],[26,32,29,30,"indata"],[26,38,29,36],[26,39,29,37,"pxPos"],[26,44,29,42],[26,45,29,43],[26,47,29,45],[27,12,30,10,"makeTrans"],[27,21,30,19],[27,24,30,22],[27,28,30,26],[28,10,31,8],[29,8,32,6],[29,9,32,7],[29,15,32,13],[29,19,33,8,"transColor"],[29,29,33,18],[29,30,33,19],[29,31,33,20],[29,32,33,21],[29,37,33,26,"indata"],[29,43,33,32],[29,44,33,33,"pxPos"],[29,49,33,38],[29,50,33,39],[29,54,34,8,"transColor"],[29,64,34,18],[29,65,34,19],[29,66,34,20],[29,67,34,21],[29,72,34,26,"indata"],[29,78,34,32],[29,79,34,33,"pxPos"],[29,84,34,38],[29,87,34,41],[29,88,34,42],[29,89,34,43],[29,93,35,8,"transColor"],[29,103,35,18],[29,104,35,19],[29,105,35,20],[29,106,35,21],[29,111,35,26,"indata"],[29,117,35,32],[29,118,35,33,"pxPos"],[29,123,35,38],[29,126,35,41],[29,127,35,42],[29,128,35,43],[29,130,36,8],[30,10,37,8,"makeTrans"],[30,19,37,17],[30,22,37,20],[30,26,37,24],[31,8,38,6],[32,8,39,6],[32,12,39,10,"makeTrans"],[32,21,39,19],[32,23,39,21],[33,10,40,8],[33,15,40,13],[33,19,40,17,"i"],[33,20,40,18],[33,23,40,21],[33,24,40,22],[33,26,40,24,"i"],[33,27,40,25],[33,30,40,28],[33,31,40,29],[33,33,40,31,"i"],[33,34,40,32],[33,36,40,34],[33,38,40,36],[34,12,41,10,"outdata"],[34,19,41,17],[34,20,41,18,"pxPos"],[34,25,41,23],[34,28,41,26,"i"],[34,29,41,27],[34,30,41,28],[34,33,41,31],[34,34,41,32],[35,10,42,8],[36,8,43,6],[37,8,44,6,"pxPos"],[37,13,44,11],[37,17,44,15],[37,18,44,16],[38,6,45,4],[39,4,46,2],[40,2,47,0],[41,2,49,0],[41,11,49,9,"scaleDepth"],[41,21,49,19,"scaleDepth"],[41,22,49,20,"indata"],[41,28,49,26],[41,30,49,28,"outdata"],[41,37,49,35],[41,39,49,37,"width"],[41,44,49,42],[41,46,49,44,"height"],[41,52,49,50],[41,54,49,52,"depth"],[41,59,49,57],[41,61,49,59],[42,4,50,2],[42,8,50,6,"maxOutSample"],[42,20,50,18],[42,23,50,21],[42,26,50,24],[43,4,51,2],[43,8,51,6,"maxInSample"],[43,19,51,17],[43,22,51,20,"Math"],[43,26,51,24],[43,27,51,25,"pow"],[43,30,51,28],[43,31,51,29],[43,32,51,30],[43,34,51,32,"depth"],[43,39,51,37],[43,40,51,38],[43,43,51,41],[43,44,51,42],[44,4,52,2],[44,8,52,6,"pxPos"],[44,13,52,11],[44,16,52,14],[44,17,52,15],[45,4,54,2],[45,9,54,7],[45,13,54,11,"y"],[45,14,54,12],[45,17,54,15],[45,18,54,16],[45,20,54,18,"y"],[45,21,54,19],[45,24,54,22,"height"],[45,30,54,28],[45,32,54,30,"y"],[45,33,54,31],[45,35,54,33],[45,37,54,35],[46,6,55,4],[46,11,55,9],[46,15,55,13,"x"],[46,16,55,14],[46,19,55,17],[46,20,55,18],[46,22,55,20,"x"],[46,23,55,21],[46,26,55,24,"width"],[46,31,55,29],[46,33,55,31,"x"],[46,34,55,32],[46,36,55,34],[46,38,55,36],[47,8,56,6],[47,13,56,11],[47,17,56,15,"i"],[47,18,56,16],[47,21,56,19],[47,22,56,20],[47,24,56,22,"i"],[47,25,56,23],[47,28,56,26],[47,29,56,27],[47,31,56,29,"i"],[47,32,56,30],[47,34,56,32],[47,36,56,34],[48,10,57,8,"outdata"],[48,17,57,15],[48,18,57,16,"pxPos"],[48,23,57,21],[48,26,57,24,"i"],[48,27,57,25],[48,28,57,26],[48,31,57,29,"Math"],[48,35,57,33],[48,36,57,34,"floor"],[48,41,57,39],[48,42,58,11,"indata"],[48,48,58,17],[48,49,58,18,"pxPos"],[48,54,58,23],[48,57,58,26,"i"],[48,58,58,27],[48,59,58,28],[48,62,58,31,"maxOutSample"],[48,74,58,43],[48,77,58,47,"maxInSample"],[48,88,58,58],[48,91,58,61],[48,94,59,8],[48,95,59,9],[49,8,60,6],[50,8,61,6,"pxPos"],[50,13,61,11],[50,17,61,15],[50,18,61,16],[51,6,62,4],[52,4,63,2],[53,2,64,0],[54,2,66,0,"module"],[54,8,66,6],[54,9,66,7,"exports"],[54,16,66,14],[54,19,66,17],[54,29,66,27,"indata"],[54,35,66,33],[54,37,66,35,"imageData"],[54,46,66,44],[54,48,66,46],[55,4,67,2],[55,8,67,6,"depth"],[55,13,67,11],[55,16,67,14,"imageData"],[55,25,67,23],[55,26,67,24,"depth"],[55,31,67,29],[56,4,68,2],[56,8,68,6,"width"],[56,13,68,11],[56,16,68,14,"imageData"],[56,25,68,23],[56,26,68,24,"width"],[56,31,68,29],[57,4,69,2],[57,8,69,6,"height"],[57,14,69,12],[57,17,69,15,"imageData"],[57,26,69,24],[57,27,69,25,"height"],[57,33,69,31],[58,4,70,2],[58,8,70,6,"colorType"],[58,17,70,15],[58,20,70,18,"imageData"],[58,29,70,27],[58,30,70,28,"colorType"],[58,39,70,37],[59,4,71,2],[59,8,71,6,"transColor"],[59,18,71,16],[59,21,71,19,"imageData"],[59,30,71,28],[59,31,71,29,"transColor"],[59,41,71,39],[60,4,72,2],[60,8,72,6,"palette"],[60,15,72,13],[60,18,72,16,"imageData"],[60,27,72,25],[60,28,72,26,"palette"],[60,35,72,33],[61,4,74,2],[61,8,74,6,"outdata"],[61,15,74,13],[61,18,74,16,"indata"],[61,24,74,22],[61,25,74,23],[61,26,74,24],[63,4,76,2],[63,8,76,6,"colorType"],[63,17,76,15],[63,22,76,20],[63,23,76,21],[63,25,76,23],[64,6,77,4],[65,6,78,4,"dePalette"],[65,15,78,13],[65,16,78,14,"indata"],[65,22,78,20],[65,24,78,22,"outdata"],[65,31,78,29],[65,33,78,31,"width"],[65,38,78,36],[65,40,78,38,"height"],[65,46,78,44],[65,48,78,46,"palette"],[65,55,78,53],[65,56,78,54],[66,4,79,2],[66,5,79,3],[66,11,79,9],[67,6,80,4],[67,10,80,8,"transColor"],[67,20,80,18],[67,22,80,20],[68,8,81,6,"replaceTransparentColor"],[68,31,81,29],[68,32,81,30,"indata"],[68,38,81,36],[68,40,81,38,"outdata"],[68,47,81,45],[68,49,81,47,"width"],[68,54,81,52],[68,56,81,54,"height"],[68,62,81,60],[68,64,81,62,"transColor"],[68,74,81,72],[68,75,81,73],[69,6,82,4],[70,6,83,4],[71,6,84,4],[71,10,84,8,"depth"],[71,15,84,13],[71,20,84,18],[71,21,84,19],[71,23,84,21],[72,8,85,6],[73,8,86,6],[73,12,86,10,"depth"],[73,17,86,15],[73,22,86,20],[73,24,86,22],[73,26,86,24],[74,10,87,8,"outdata"],[74,17,87,15],[74,20,87,18,"Buffer"],[74,26,87,24],[74,27,87,25,"alloc"],[74,32,87,30],[74,33,87,31,"width"],[74,38,87,36],[74,41,87,39,"height"],[74,47,87,45],[74,50,87,48],[74,51,87,49],[74,52,87,50],[75,8,88,6],[76,8,89,6,"scaleDepth"],[76,18,89,16],[76,19,89,17,"indata"],[76,25,89,23],[76,27,89,25,"outdata"],[76,34,89,32],[76,36,89,34,"width"],[76,41,89,39],[76,43,89,41,"height"],[76,49,89,47],[76,51,89,49,"depth"],[76,56,89,54],[76,57,89,55],[77,6,90,4],[78,4,91,2],[79,4,92,2],[79,11,92,9,"outdata"],[79,18,92,16],[80,2,93,0],[80,3,93,1],[81,0,93,2],[81,3]],"functionMap":{"names":["<global>","dePalette","replaceTransparentColor","scaleDepth","module.exports"],"mappings":"AAA;ACE;CDiB;AEE;CFyB;AGE;CHe;iBIE;CJ2B"},"hasCjsExports":true},"type":"js/module"}]}