{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":31},"end":{"line":3,"column":38,"index":53}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./crc","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":71},"end":{"line":4,"column":32,"index":87}}],"key":"Jb1D9JLIa5BFBnTH9DyoJl+pJLk=","exportNames":["*"],"imports":1}},{"name":"./bitpacker","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":105},"end":{"line":5,"column":38,"index":127}}],"key":"9Iqh1NeLuG01T44gZ5Prb9wviI8=","exportNames":["*"],"imports":1}},{"name":"./filter-pack","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":13,"index":142},"end":{"line":6,"column":37,"index":166}}],"key":"kiZOIg1JrKUVfTr4XBHfI77Zknk=","exportNames":["*"],"imports":1}},{"name":"zlib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":179},"end":{"line":7,"column":26,"index":194}}],"key":"7ZGzBJgs2mS8aYt35oOcBHDVVuM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  let constants = require(_dependencyMap[0], \"./constants\");\n  let CrcStream = require(_dependencyMap[1], \"./crc\");\n  let bitPacker = require(_dependencyMap[2], \"./bitpacker\");\n  let filter = require(_dependencyMap[3], \"./filter-pack\");\n  let zlib = require(_dependencyMap[4], \"zlib\");\n  let Packer = module.exports = function (options) {\n    this._options = options;\n    options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n    options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n    options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n    options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n    options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n    options.bitDepth = options.bitDepth || 8;\n    // This is outputColorType\n    options.colorType = typeof options.colorType === \"number\" ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n    options.inputColorType = typeof options.inputColorType === \"number\" ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\n    if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) === -1) {\n      throw new Error(\"option color type:\" + options.colorType + \" is not supported at present\");\n    }\n    if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.inputColorType) === -1) {\n      throw new Error(\"option input color type:\" + options.inputColorType + \" is not supported at present\");\n    }\n    if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n      throw new Error(\"option bit depth:\" + options.bitDepth + \" is not supported at present\");\n    }\n  };\n  Packer.prototype.getDeflateOptions = function () {\n    return {\n      chunkSize: this._options.deflateChunkSize,\n      level: this._options.deflateLevel,\n      strategy: this._options.deflateStrategy\n    };\n  };\n  Packer.prototype.createDeflate = function () {\n    return this._options.deflateFactory(this.getDeflateOptions());\n  };\n  Packer.prototype.filterData = function (data, width, height) {\n    // convert to correct format for filtering (e.g. right bpp and bit depth)\n    let packedData = bitPacker(data, width, height, this._options);\n\n    // filter pixel data\n    let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n    let filteredData = filter(packedData, width, height, this._options, bpp);\n    return filteredData;\n  };\n  Packer.prototype._packChunk = function (type, data) {\n    let len = data ? data.length : 0;\n    let buf = Buffer.alloc(len + 12);\n    buf.writeUInt32BE(len, 0);\n    buf.writeUInt32BE(type, 4);\n    if (data) {\n      data.copy(buf, 8);\n    }\n    buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n    return buf;\n  };\n  Packer.prototype.packGAMA = function (gamma) {\n    let buf = Buffer.alloc(4);\n    buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n    return this._packChunk(constants.TYPE_gAMA, buf);\n  };\n  Packer.prototype.packIHDR = function (width, height) {\n    let buf = Buffer.alloc(13);\n    buf.writeUInt32BE(width, 0);\n    buf.writeUInt32BE(height, 4);\n    buf[8] = this._options.bitDepth; // Bit depth\n    buf[9] = this._options.colorType; // colorType\n    buf[10] = 0; // compression\n    buf[11] = 0; // filter\n    buf[12] = 0; // interlace\n\n    return this._packChunk(constants.TYPE_IHDR, buf);\n  };\n  Packer.prototype.packIDAT = function (data) {\n    return this._packChunk(constants.TYPE_IDAT, data);\n  };\n  Packer.prototype.packIEND = function () {\n    return this._packChunk(constants.TYPE_IEND, null);\n  };\n});","lineCount":83,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"constants"],[4,15,3,13],[4,18,3,16,"require"],[4,25,3,23],[4,26,3,23,"_dependencyMap"],[4,40,3,23],[4,58,3,37],[4,59,3,38],[5,2,4,0],[5,6,4,4,"CrcStream"],[5,15,4,13],[5,18,4,16,"require"],[5,25,4,23],[5,26,4,23,"_dependencyMap"],[5,40,4,23],[5,52,4,31],[5,53,4,32],[6,2,5,0],[6,6,5,4,"bitPacker"],[6,15,5,13],[6,18,5,16,"require"],[6,25,5,23],[6,26,5,23,"_dependencyMap"],[6,40,5,23],[6,58,5,37],[6,59,5,38],[7,2,6,0],[7,6,6,4,"filter"],[7,12,6,10],[7,15,6,13,"require"],[7,22,6,20],[7,23,6,20,"_dependencyMap"],[7,37,6,20],[7,57,6,36],[7,58,6,37],[8,2,7,0],[8,6,7,4,"zlib"],[8,10,7,8],[8,13,7,11,"require"],[8,20,7,18],[8,21,7,18,"_dependencyMap"],[8,35,7,18],[8,46,7,25],[8,47,7,26],[9,2,9,0],[9,6,9,4,"Packer"],[9,12,9,10],[9,15,9,14,"module"],[9,21,9,20],[9,22,9,21,"exports"],[9,29,9,28],[9,32,9,31],[9,42,9,41,"options"],[9,49,9,48],[9,51,9,50],[10,4,10,2],[10,8,10,6],[10,9,10,7,"_options"],[10,17,10,15],[10,20,10,18,"options"],[10,27,10,25],[11,4,12,2,"options"],[11,11,12,9],[11,12,12,10,"deflateChunkSize"],[11,28,12,26],[11,31,12,29,"options"],[11,38,12,36],[11,39,12,37,"deflateChunkSize"],[11,55,12,53],[11,59,12,57],[11,61,12,59],[11,64,12,62],[11,68,12,66],[12,4,13,2,"options"],[12,11,13,9],[12,12,13,10,"deflateLevel"],[12,24,13,22],[12,27,14,4,"options"],[12,34,14,11],[12,35,14,12,"deflateLevel"],[12,47,14,24],[12,51,14,28],[12,55,14,32],[12,58,14,35,"options"],[12,65,14,42],[12,66,14,43,"deflateLevel"],[12,78,14,55],[12,81,14,58],[12,82,14,59],[13,4,15,2,"options"],[13,11,15,9],[13,12,15,10,"deflateStrategy"],[13,27,15,25],[13,30,16,4,"options"],[13,37,16,11],[13,38,16,12,"deflateStrategy"],[13,53,16,27],[13,57,16,31],[13,61,16,35],[13,64,16,38,"options"],[13,71,16,45],[13,72,16,46,"deflateStrategy"],[13,87,16,61],[13,90,16,64],[13,91,16,65],[14,4,17,2,"options"],[14,11,17,9],[14,12,17,10,"inputHasAlpha"],[14,25,17,23],[14,28,18,4,"options"],[14,35,18,11],[14,36,18,12,"inputHasAlpha"],[14,49,18,25],[14,53,18,29],[14,57,18,33],[14,60,18,36,"options"],[14,67,18,43],[14,68,18,44,"inputHasAlpha"],[14,81,18,57],[14,84,18,60],[14,88,18,64],[15,4,19,2,"options"],[15,11,19,9],[15,12,19,10,"deflateFactory"],[15,26,19,24],[15,29,19,27,"options"],[15,36,19,34],[15,37,19,35,"deflateFactory"],[15,51,19,49],[15,55,19,53,"zlib"],[15,59,19,57],[15,60,19,58,"createDeflate"],[15,73,19,71],[16,4,20,2,"options"],[16,11,20,9],[16,12,20,10,"bitDepth"],[16,20,20,18],[16,23,20,21,"options"],[16,30,20,28],[16,31,20,29,"bitDepth"],[16,39,20,37],[16,43,20,41],[16,44,20,42],[17,4,21,2],[18,4,22,2,"options"],[18,11,22,9],[18,12,22,10,"colorType"],[18,21,22,19],[18,24,23,4],[18,31,23,11,"options"],[18,38,23,18],[18,39,23,19,"colorType"],[18,48,23,28],[18,53,23,33],[18,61,23,41],[18,64,24,8,"options"],[18,71,24,15],[18,72,24,16,"colorType"],[18,81,24,25],[18,84,25,8,"constants"],[18,93,25,17],[18,94,25,18,"COLORTYPE_COLOR_ALPHA"],[18,115,25,39],[19,4,26,2,"options"],[19,11,26,9],[19,12,26,10,"inputColorType"],[19,26,26,24],[19,29,27,4],[19,36,27,11,"options"],[19,43,27,18],[19,44,27,19,"inputColorType"],[19,58,27,33],[19,63,27,38],[19,71,27,46],[19,74,28,8,"options"],[19,81,28,15],[19,82,28,16,"inputColorType"],[19,96,28,30],[19,99,29,8,"constants"],[19,108,29,17],[19,109,29,18,"COLORTYPE_COLOR_ALPHA"],[19,130,29,39],[20,4,31,2],[20,8,32,4],[20,9,33,6,"constants"],[20,18,33,15],[20,19,33,16,"COLORTYPE_GRAYSCALE"],[20,38,33,35],[20,40,34,6,"constants"],[20,49,34,15],[20,50,34,16,"COLORTYPE_COLOR"],[20,65,34,31],[20,67,35,6,"constants"],[20,76,35,15],[20,77,35,16,"COLORTYPE_COLOR_ALPHA"],[20,98,35,37],[20,100,36,6,"constants"],[20,109,36,15],[20,110,36,16,"COLORTYPE_ALPHA"],[20,125,36,31],[20,126,37,5],[20,127,37,6,"indexOf"],[20,134,37,13],[20,135,37,14,"options"],[20,142,37,21],[20,143,37,22,"colorType"],[20,152,37,31],[20,153,37,32],[20,158,37,37],[20,159,37,38],[20,160,37,39],[20,162,38,4],[21,6,39,4],[21,12,39,10],[21,16,39,14,"Error"],[21,21,39,19],[21,22,40,6],[21,42,40,26],[21,45,40,29,"options"],[21,52,40,36],[21,53,40,37,"colorType"],[21,62,40,46],[21,65,40,49],[21,95,41,4],[21,96,41,5],[22,4,42,2],[23,4,43,2],[23,8,44,4],[23,9,45,6,"constants"],[23,18,45,15],[23,19,45,16,"COLORTYPE_GRAYSCALE"],[23,38,45,35],[23,40,46,6,"constants"],[23,49,46,15],[23,50,46,16,"COLORTYPE_COLOR"],[23,65,46,31],[23,67,47,6,"constants"],[23,76,47,15],[23,77,47,16,"COLORTYPE_COLOR_ALPHA"],[23,98,47,37],[23,100,48,6,"constants"],[23,109,48,15],[23,110,48,16,"COLORTYPE_ALPHA"],[23,125,48,31],[23,126,49,5],[23,127,49,6,"indexOf"],[23,134,49,13],[23,135,49,14,"options"],[23,142,49,21],[23,143,49,22,"inputColorType"],[23,157,49,36],[23,158,49,37],[23,163,49,42],[23,164,49,43],[23,165,49,44],[23,167,50,4],[24,6,51,4],[24,12,51,10],[24,16,51,14,"Error"],[24,21,51,19],[24,22,52,6],[24,48,52,32],[24,51,53,8,"options"],[24,58,53,15],[24,59,53,16,"inputColorType"],[24,73,53,30],[24,76,54,8],[24,106,55,4],[24,107,55,5],[25,4,56,2],[26,4,57,2],[26,8,57,6,"options"],[26,15,57,13],[26,16,57,14,"bitDepth"],[26,24,57,22],[26,29,57,27],[26,30,57,28],[26,34,57,32,"options"],[26,41,57,39],[26,42,57,40,"bitDepth"],[26,50,57,48],[26,55,57,53],[26,57,57,55],[26,59,57,57],[27,6,58,4],[27,12,58,10],[27,16,58,14,"Error"],[27,21,58,19],[27,22,59,6],[27,41,59,25],[27,44,59,28,"options"],[27,51,59,35],[27,52,59,36,"bitDepth"],[27,60,59,44],[27,63,59,47],[27,93,60,4],[27,94,60,5],[28,4,61,2],[29,2,62,0],[29,3,62,2],[30,2,64,0,"Packer"],[30,8,64,6],[30,9,64,7,"prototype"],[30,18,64,16],[30,19,64,17,"getDeflateOptions"],[30,36,64,34],[30,39,64,37],[30,51,64,49],[31,4,65,2],[31,11,65,9],[32,6,66,4,"chunkSize"],[32,15,66,13],[32,17,66,15],[32,21,66,19],[32,22,66,20,"_options"],[32,30,66,28],[32,31,66,29,"deflateChunkSize"],[32,47,66,45],[33,6,67,4,"level"],[33,11,67,9],[33,13,67,11],[33,17,67,15],[33,18,67,16,"_options"],[33,26,67,24],[33,27,67,25,"deflateLevel"],[33,39,67,37],[34,6,68,4,"strategy"],[34,14,68,12],[34,16,68,14],[34,20,68,18],[34,21,68,19,"_options"],[34,29,68,27],[34,30,68,28,"deflateStrategy"],[35,4,69,2],[35,5,69,3],[36,2,70,0],[36,3,70,1],[37,2,72,0,"Packer"],[37,8,72,6],[37,9,72,7,"prototype"],[37,18,72,16],[37,19,72,17,"createDeflate"],[37,32,72,30],[37,35,72,33],[37,47,72,45],[38,4,73,2],[38,11,73,9],[38,15,73,13],[38,16,73,14,"_options"],[38,24,73,22],[38,25,73,23,"deflateFactory"],[38,39,73,37],[38,40,73,38],[38,44,73,42],[38,45,73,43,"getDeflateOptions"],[38,62,73,60],[38,63,73,61],[38,64,73,62],[38,65,73,63],[39,2,74,0],[39,3,74,1],[40,2,76,0,"Packer"],[40,8,76,6],[40,9,76,7,"prototype"],[40,18,76,16],[40,19,76,17,"filterData"],[40,29,76,27],[40,32,76,30],[40,42,76,40,"data"],[40,46,76,44],[40,48,76,46,"width"],[40,53,76,51],[40,55,76,53,"height"],[40,61,76,59],[40,63,76,61],[41,4,77,2],[42,4,78,2],[42,8,78,6,"packedData"],[42,18,78,16],[42,21,78,19,"bitPacker"],[42,30,78,28],[42,31,78,29,"data"],[42,35,78,33],[42,37,78,35,"width"],[42,42,78,40],[42,44,78,42,"height"],[42,50,78,48],[42,52,78,50],[42,56,78,54],[42,57,78,55,"_options"],[42,65,78,63],[42,66,78,64],[44,4,80,2],[45,4,81,2],[45,8,81,6,"bpp"],[45,11,81,9],[45,14,81,12,"constants"],[45,23,81,21],[45,24,81,22,"COLORTYPE_TO_BPP_MAP"],[45,44,81,42],[45,45,81,43],[45,49,81,47],[45,50,81,48,"_options"],[45,58,81,56],[45,59,81,57,"colorType"],[45,68,81,66],[45,69,81,67],[46,4,82,2],[46,8,82,6,"filteredData"],[46,20,82,18],[46,23,82,21,"filter"],[46,29,82,27],[46,30,82,28,"packedData"],[46,40,82,38],[46,42,82,40,"width"],[46,47,82,45],[46,49,82,47,"height"],[46,55,82,53],[46,57,82,55],[46,61,82,59],[46,62,82,60,"_options"],[46,70,82,68],[46,72,82,70,"bpp"],[46,75,82,73],[46,76,82,74],[47,4,83,2],[47,11,83,9,"filteredData"],[47,23,83,21],[48,2,84,0],[48,3,84,1],[49,2,86,0,"Packer"],[49,8,86,6],[49,9,86,7,"prototype"],[49,18,86,16],[49,19,86,17,"_packChunk"],[49,29,86,27],[49,32,86,30],[49,42,86,40,"type"],[49,46,86,44],[49,48,86,46,"data"],[49,52,86,50],[49,54,86,52],[50,4,87,2],[50,8,87,6,"len"],[50,11,87,9],[50,14,87,12,"data"],[50,18,87,16],[50,21,87,19,"data"],[50,25,87,23],[50,26,87,24,"length"],[50,32,87,30],[50,35,87,33],[50,36,87,34],[51,4,88,2],[51,8,88,6,"buf"],[51,11,88,9],[51,14,88,12,"Buffer"],[51,20,88,18],[51,21,88,19,"alloc"],[51,26,88,24],[51,27,88,25,"len"],[51,30,88,28],[51,33,88,31],[51,35,88,33],[51,36,88,34],[52,4,90,2,"buf"],[52,7,90,5],[52,8,90,6,"writeUInt32BE"],[52,21,90,19],[52,22,90,20,"len"],[52,25,90,23],[52,27,90,25],[52,28,90,26],[52,29,90,27],[53,4,91,2,"buf"],[53,7,91,5],[53,8,91,6,"writeUInt32BE"],[53,21,91,19],[53,22,91,20,"type"],[53,26,91,24],[53,28,91,26],[53,29,91,27],[53,30,91,28],[54,4,93,2],[54,8,93,6,"data"],[54,12,93,10],[54,14,93,12],[55,6,94,4,"data"],[55,10,94,8],[55,11,94,9,"copy"],[55,15,94,13],[55,16,94,14,"buf"],[55,19,94,17],[55,21,94,19],[55,22,94,20],[55,23,94,21],[56,4,95,2],[57,4,97,2,"buf"],[57,7,97,5],[57,8,97,6,"writeInt32BE"],[57,20,97,18],[57,21,98,4,"CrcStream"],[57,30,98,13],[57,31,98,14,"crc32"],[57,36,98,19],[57,37,98,20,"buf"],[57,40,98,23],[57,41,98,24,"slice"],[57,46,98,29],[57,47,98,30],[57,48,98,31],[57,50,98,33,"buf"],[57,53,98,36],[57,54,98,37,"length"],[57,60,98,43],[57,63,98,46],[57,64,98,47],[57,65,98,48],[57,66,98,49],[57,68,99,4,"buf"],[57,71,99,7],[57,72,99,8,"length"],[57,78,99,14],[57,81,99,17],[57,82,100,2],[57,83,100,3],[58,4,101,2],[58,11,101,9,"buf"],[58,14,101,12],[59,2,102,0],[59,3,102,1],[60,2,104,0,"Packer"],[60,8,104,6],[60,9,104,7,"prototype"],[60,18,104,16],[60,19,104,17,"packGAMA"],[60,27,104,25],[60,30,104,28],[60,40,104,38,"gamma"],[60,45,104,43],[60,47,104,45],[61,4,105,2],[61,8,105,6,"buf"],[61,11,105,9],[61,14,105,12,"Buffer"],[61,20,105,18],[61,21,105,19,"alloc"],[61,26,105,24],[61,27,105,25],[61,28,105,26],[61,29,105,27],[62,4,106,2,"buf"],[62,7,106,5],[62,8,106,6,"writeUInt32BE"],[62,21,106,19],[62,22,106,20,"Math"],[62,26,106,24],[62,27,106,25,"floor"],[62,32,106,30],[62,33,106,31,"gamma"],[62,38,106,36],[62,41,106,39,"constants"],[62,50,106,48],[62,51,106,49,"GAMMA_DIVISION"],[62,65,106,63],[62,66,106,64],[62,68,106,66],[62,69,106,67],[62,70,106,68],[63,4,107,2],[63,11,107,9],[63,15,107,13],[63,16,107,14,"_packChunk"],[63,26,107,24],[63,27,107,25,"constants"],[63,36,107,34],[63,37,107,35,"TYPE_gAMA"],[63,46,107,44],[63,48,107,46,"buf"],[63,51,107,49],[63,52,107,50],[64,2,108,0],[64,3,108,1],[65,2,110,0,"Packer"],[65,8,110,6],[65,9,110,7,"prototype"],[65,18,110,16],[65,19,110,17,"packIHDR"],[65,27,110,25],[65,30,110,28],[65,40,110,38,"width"],[65,45,110,43],[65,47,110,45,"height"],[65,53,110,51],[65,55,110,53],[66,4,111,2],[66,8,111,6,"buf"],[66,11,111,9],[66,14,111,12,"Buffer"],[66,20,111,18],[66,21,111,19,"alloc"],[66,26,111,24],[66,27,111,25],[66,29,111,27],[66,30,111,28],[67,4,112,2,"buf"],[67,7,112,5],[67,8,112,6,"writeUInt32BE"],[67,21,112,19],[67,22,112,20,"width"],[67,27,112,25],[67,29,112,27],[67,30,112,28],[67,31,112,29],[68,4,113,2,"buf"],[68,7,113,5],[68,8,113,6,"writeUInt32BE"],[68,21,113,19],[68,22,113,20,"height"],[68,28,113,26],[68,30,113,28],[68,31,113,29],[68,32,113,30],[69,4,114,2,"buf"],[69,7,114,5],[69,8,114,6],[69,9,114,7],[69,10,114,8],[69,13,114,11],[69,17,114,15],[69,18,114,16,"_options"],[69,26,114,24],[69,27,114,25,"bitDepth"],[69,35,114,33],[69,36,114,34],[69,37,114,35],[70,4,115,2,"buf"],[70,7,115,5],[70,8,115,6],[70,9,115,7],[70,10,115,8],[70,13,115,11],[70,17,115,15],[70,18,115,16,"_options"],[70,26,115,24],[70,27,115,25,"colorType"],[70,36,115,34],[70,37,115,35],[70,38,115,36],[71,4,116,2,"buf"],[71,7,116,5],[71,8,116,6],[71,10,116,8],[71,11,116,9],[71,14,116,12],[71,15,116,13],[71,16,116,14],[71,17,116,15],[72,4,117,2,"buf"],[72,7,117,5],[72,8,117,6],[72,10,117,8],[72,11,117,9],[72,14,117,12],[72,15,117,13],[72,16,117,14],[72,17,117,15],[73,4,118,2,"buf"],[73,7,118,5],[73,8,118,6],[73,10,118,8],[73,11,118,9],[73,14,118,12],[73,15,118,13],[73,16,118,14],[73,17,118,15],[75,4,120,2],[75,11,120,9],[75,15,120,13],[75,16,120,14,"_packChunk"],[75,26,120,24],[75,27,120,25,"constants"],[75,36,120,34],[75,37,120,35,"TYPE_IHDR"],[75,46,120,44],[75,48,120,46,"buf"],[75,51,120,49],[75,52,120,50],[76,2,121,0],[76,3,121,1],[77,2,123,0,"Packer"],[77,8,123,6],[77,9,123,7,"prototype"],[77,18,123,16],[77,19,123,17,"packIDAT"],[77,27,123,25],[77,30,123,28],[77,40,123,38,"data"],[77,44,123,42],[77,46,123,44],[78,4,124,2],[78,11,124,9],[78,15,124,13],[78,16,124,14,"_packChunk"],[78,26,124,24],[78,27,124,25,"constants"],[78,36,124,34],[78,37,124,35,"TYPE_IDAT"],[78,46,124,44],[78,48,124,46,"data"],[78,52,124,50],[78,53,124,51],[79,2,125,0],[79,3,125,1],[80,2,127,0,"Packer"],[80,8,127,6],[80,9,127,7,"prototype"],[80,18,127,16],[80,19,127,17,"packIEND"],[80,27,127,25],[80,30,127,28],[80,42,127,40],[81,4,128,2],[81,11,128,9],[81,15,128,13],[81,16,128,14,"_packChunk"],[81,26,128,24],[81,27,128,25,"constants"],[81,36,128,34],[81,37,128,35,"TYPE_IEND"],[81,46,128,44],[81,48,128,46],[81,52,128,50],[81,53,128,51],[82,2,129,0],[82,3,129,1],[83,0,129,2],[83,3]],"functionMap":{"names":["<global>","module.exports","Packer.prototype.getDeflateOptions","Packer.prototype.createDeflate","Packer.prototype.filterData","Packer.prototype._packChunk","Packer.prototype.packGAMA","Packer.prototype.packIHDR","Packer.prototype.packIDAT","Packer.prototype.packIEND"],"mappings":"AAA;+BCQ;CDqD;qCEE;CFM;iCGE;CHE;8BIE;CJQ;8BKE;CLgB;4BME;CNI;4BOE;CPW;4BQE;CRE;4BSE;CTE"},"hasCjsExports":true},"type":"js/module"}]}