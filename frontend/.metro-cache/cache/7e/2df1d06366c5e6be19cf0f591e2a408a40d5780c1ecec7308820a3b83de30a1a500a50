{"dependencies":[{"name":"zlib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":11,"index":50},"end":{"line":4,"column":26,"index":65}}],"key":"7ZGzBJgs2mS8aYt35oOcBHDVVuM=","exportNames":["*"],"imports":1}},{"name":"./sync-inflate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":18,"index":85},"end":{"line":5,"column":43,"index":110}}],"key":"nqu7s6UeMtfjM+k4CQClaGSplF4=","exportNames":["*"],"imports":1}},{"name":"./sync-reader","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":17,"index":179},"end":{"line":9,"column":41,"index":203}}],"key":"ZMS3IWzJrB8fcdf2nlfcTlaIljc=","exportNames":["*"],"imports":1}},{"name":"./filter-parse-sync","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":17,"index":222},"end":{"line":10,"column":47,"index":252}}],"key":"p2VWNx6zMSidejTe+QpkAPHpWO0=","exportNames":["*"],"imports":1}},{"name":"./parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":13,"index":267},"end":{"line":11,"column":32,"index":286}}],"key":"FmGTSeJZ/sRo3ZQza+Wy1CXXMyM=","exportNames":["*"],"imports":1}},{"name":"./bitmapper","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":304},"end":{"line":12,"column":38,"index":326}}],"key":"vi8139EPiWWyzftijfzSH1CHXks=","exportNames":["*"],"imports":1}},{"name":"./format-normaliser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":23,"index":351},"end":{"line":13,"column":53,"index":381}}],"key":"ypTMryKQtTShoBQSBqdvn+nzLUE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  let hasSyncZlib = true;\n  let zlib = require(_dependencyMap[0], \"zlib\");\n  let inflateSync = require(_dependencyMap[1], \"./sync-inflate\");\n  if (!zlib.deflateSync) {\n    hasSyncZlib = false;\n  }\n  let SyncReader = require(_dependencyMap[2], \"./sync-reader\");\n  let FilterSync = require(_dependencyMap[3], \"./filter-parse-sync\");\n  let Parser = require(_dependencyMap[4], \"./parser\");\n  let bitmapper = require(_dependencyMap[5], \"./bitmapper\");\n  let formatNormaliser = require(_dependencyMap[6], \"./format-normaliser\");\n  module.exports = function (buffer, options) {\n    if (!hasSyncZlib) {\n      throw new Error(\"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\");\n    }\n    let err;\n    function handleError(_err_) {\n      err = _err_;\n    }\n    let metaData;\n    function handleMetaData(_metaData_) {\n      metaData = _metaData_;\n    }\n    function handleTransColor(transColor) {\n      metaData.transColor = transColor;\n    }\n    function handlePalette(palette) {\n      metaData.palette = palette;\n    }\n    function handleSimpleTransparency() {\n      metaData.alpha = true;\n    }\n    let gamma;\n    function handleGamma(_gamma_) {\n      gamma = _gamma_;\n    }\n    let inflateDataList = [];\n    function handleInflateData(inflatedData) {\n      inflateDataList.push(inflatedData);\n    }\n    let reader = new SyncReader(buffer);\n    let parser = new Parser(options, {\n      read: reader.read.bind(reader),\n      error: handleError,\n      metadata: handleMetaData,\n      gamma: handleGamma,\n      palette: handlePalette,\n      transColor: handleTransColor,\n      inflateData: handleInflateData,\n      simpleTransparency: handleSimpleTransparency\n    });\n    parser.start();\n    reader.process();\n    if (err) {\n      throw err;\n    }\n\n    //join together the inflate datas\n    let inflateData = Buffer.concat(inflateDataList);\n    inflateDataList.length = 0;\n    let inflatedData;\n    if (metaData.interlace) {\n      inflatedData = zlib.inflateSync(inflateData);\n    } else {\n      let rowSize = (metaData.width * metaData.bpp * metaData.depth + 7 >> 3) + 1;\n      let imageSize = rowSize * metaData.height;\n      inflatedData = inflateSync(inflateData, {\n        chunkSize: imageSize,\n        maxLength: imageSize\n      });\n    }\n    inflateData = null;\n    if (!inflatedData || !inflatedData.length) {\n      throw new Error(\"bad png - invalid inflate data response\");\n    }\n    let unfilteredData = FilterSync.process(inflatedData, metaData);\n    inflateData = null;\n    let bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n    unfilteredData = null;\n    let normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n    metaData.data = normalisedBitmapData;\n    metaData.gamma = gamma || 0;\n    return metaData;\n  };\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"hasSyncZlib"],[4,17,3,15],[4,20,3,18],[4,24,3,22],[5,2,4,0],[5,6,4,4,"zlib"],[5,10,4,8],[5,13,4,11,"require"],[5,20,4,18],[5,21,4,18,"_dependencyMap"],[5,35,4,18],[5,46,4,25],[5,47,4,26],[6,2,5,0],[6,6,5,4,"inflateSync"],[6,17,5,15],[6,20,5,18,"require"],[6,27,5,25],[6,28,5,25,"_dependencyMap"],[6,42,5,25],[6,63,5,42],[6,64,5,43],[7,2,6,0],[7,6,6,4],[7,7,6,5,"zlib"],[7,11,6,9],[7,12,6,10,"deflateSync"],[7,23,6,21],[7,25,6,23],[8,4,7,2,"hasSyncZlib"],[8,15,7,13],[8,18,7,16],[8,23,7,21],[9,2,8,0],[10,2,9,0],[10,6,9,4,"SyncReader"],[10,16,9,14],[10,19,9,17,"require"],[10,26,9,24],[10,27,9,24,"_dependencyMap"],[10,41,9,24],[10,61,9,40],[10,62,9,41],[11,2,10,0],[11,6,10,4,"FilterSync"],[11,16,10,14],[11,19,10,17,"require"],[11,26,10,24],[11,27,10,24,"_dependencyMap"],[11,41,10,24],[11,67,10,46],[11,68,10,47],[12,2,11,0],[12,6,11,4,"Parser"],[12,12,11,10],[12,15,11,13,"require"],[12,22,11,20],[12,23,11,20,"_dependencyMap"],[12,37,11,20],[12,52,11,31],[12,53,11,32],[13,2,12,0],[13,6,12,4,"bitmapper"],[13,15,12,13],[13,18,12,16,"require"],[13,25,12,23],[13,26,12,23,"_dependencyMap"],[13,40,12,23],[13,58,12,37],[13,59,12,38],[14,2,13,0],[14,6,13,4,"formatNormaliser"],[14,22,13,20],[14,25,13,23,"require"],[14,32,13,30],[14,33,13,30,"_dependencyMap"],[14,47,13,30],[14,73,13,52],[14,74,13,53],[15,2,15,0,"module"],[15,8,15,6],[15,9,15,7,"exports"],[15,16,15,14],[15,19,15,17],[15,29,15,27,"buffer"],[15,35,15,33],[15,37,15,35,"options"],[15,44,15,42],[15,46,15,44],[16,4,16,2],[16,8,16,6],[16,9,16,7,"hasSyncZlib"],[16,20,16,18],[16,22,16,20],[17,6,17,4],[17,12,17,10],[17,16,17,14,"Error"],[17,21,17,19],[17,22,18,6],[17,115,19,4],[17,116,19,5],[18,4,20,2],[19,4,22,2],[19,8,22,6,"err"],[19,11,22,9],[20,4,23,2],[20,13,23,11,"handleError"],[20,24,23,22,"handleError"],[20,25,23,23,"_err_"],[20,30,23,28],[20,32,23,30],[21,6,24,4,"err"],[21,9,24,7],[21,12,24,10,"_err_"],[21,17,24,15],[22,4,25,2],[23,4,27,2],[23,8,27,6,"metaData"],[23,16,27,14],[24,4,28,2],[24,13,28,11,"handleMetaData"],[24,27,28,25,"handleMetaData"],[24,28,28,26,"_metaData_"],[24,38,28,36],[24,40,28,38],[25,6,29,4,"metaData"],[25,14,29,12],[25,17,29,15,"_metaData_"],[25,27,29,25],[26,4,30,2],[27,4,32,2],[27,13,32,11,"handleTransColor"],[27,29,32,27,"handleTransColor"],[27,30,32,28,"transColor"],[27,40,32,38],[27,42,32,40],[28,6,33,4,"metaData"],[28,14,33,12],[28,15,33,13,"transColor"],[28,25,33,23],[28,28,33,26,"transColor"],[28,38,33,36],[29,4,34,2],[30,4,36,2],[30,13,36,11,"handlePalette"],[30,26,36,24,"handlePalette"],[30,27,36,25,"palette"],[30,34,36,32],[30,36,36,34],[31,6,37,4,"metaData"],[31,14,37,12],[31,15,37,13,"palette"],[31,22,37,20],[31,25,37,23,"palette"],[31,32,37,30],[32,4,38,2],[33,4,40,2],[33,13,40,11,"handleSimpleTransparency"],[33,37,40,35,"handleSimpleTransparency"],[33,38,40,35],[33,40,40,38],[34,6,41,4,"metaData"],[34,14,41,12],[34,15,41,13,"alpha"],[34,20,41,18],[34,23,41,21],[34,27,41,25],[35,4,42,2],[36,4,44,2],[36,8,44,6,"gamma"],[36,13,44,11],[37,4,45,2],[37,13,45,11,"handleGamma"],[37,24,45,22,"handleGamma"],[37,25,45,23,"_gamma_"],[37,32,45,30],[37,34,45,32],[38,6,46,4,"gamma"],[38,11,46,9],[38,14,46,12,"_gamma_"],[38,21,46,19],[39,4,47,2],[40,4,49,2],[40,8,49,6,"inflateDataList"],[40,23,49,21],[40,26,49,24],[40,28,49,26],[41,4,50,2],[41,13,50,11,"handleInflateData"],[41,30,50,28,"handleInflateData"],[41,31,50,29,"inflatedData"],[41,43,50,41],[41,45,50,43],[42,6,51,4,"inflateDataList"],[42,21,51,19],[42,22,51,20,"push"],[42,26,51,24],[42,27,51,25,"inflatedData"],[42,39,51,37],[42,40,51,38],[43,4,52,2],[44,4,54,2],[44,8,54,6,"reader"],[44,14,54,12],[44,17,54,15],[44,21,54,19,"SyncReader"],[44,31,54,29],[44,32,54,30,"buffer"],[44,38,54,36],[44,39,54,37],[45,4,56,2],[45,8,56,6,"parser"],[45,14,56,12],[45,17,56,15],[45,21,56,19,"Parser"],[45,27,56,25],[45,28,56,26,"options"],[45,35,56,33],[45,37,56,35],[46,6,57,4,"read"],[46,10,57,8],[46,12,57,10,"reader"],[46,18,57,16],[46,19,57,17,"read"],[46,23,57,21],[46,24,57,22,"bind"],[46,28,57,26],[46,29,57,27,"reader"],[46,35,57,33],[46,36,57,34],[47,6,58,4,"error"],[47,11,58,9],[47,13,58,11,"handleError"],[47,24,58,22],[48,6,59,4,"metadata"],[48,14,59,12],[48,16,59,14,"handleMetaData"],[48,30,59,28],[49,6,60,4,"gamma"],[49,11,60,9],[49,13,60,11,"handleGamma"],[49,24,60,22],[50,6,61,4,"palette"],[50,13,61,11],[50,15,61,13,"handlePalette"],[50,28,61,26],[51,6,62,4,"transColor"],[51,16,62,14],[51,18,62,16,"handleTransColor"],[51,34,62,32],[52,6,63,4,"inflateData"],[52,17,63,15],[52,19,63,17,"handleInflateData"],[52,36,63,34],[53,6,64,4,"simpleTransparency"],[53,24,64,22],[53,26,64,24,"handleSimpleTransparency"],[54,4,65,2],[54,5,65,3],[54,6,65,4],[55,4,67,2,"parser"],[55,10,67,8],[55,11,67,9,"start"],[55,16,67,14],[55,17,67,15],[55,18,67,16],[56,4,68,2,"reader"],[56,10,68,8],[56,11,68,9,"process"],[56,18,68,16],[56,19,68,17],[56,20,68,18],[57,4,70,2],[57,8,70,6,"err"],[57,11,70,9],[57,13,70,11],[58,6,71,4],[58,12,71,10,"err"],[58,15,71,13],[59,4,72,2],[61,4,74,2],[62,4,75,2],[62,8,75,6,"inflateData"],[62,19,75,17],[62,22,75,20,"Buffer"],[62,28,75,26],[62,29,75,27,"concat"],[62,35,75,33],[62,36,75,34,"inflateDataList"],[62,51,75,49],[62,52,75,50],[63,4,76,2,"inflateDataList"],[63,19,76,17],[63,20,76,18,"length"],[63,26,76,24],[63,29,76,27],[63,30,76,28],[64,4,78,2],[64,8,78,6,"inflatedData"],[64,20,78,18],[65,4,79,2],[65,8,79,6,"metaData"],[65,16,79,14],[65,17,79,15,"interlace"],[65,26,79,24],[65,28,79,26],[66,6,80,4,"inflatedData"],[66,18,80,16],[66,21,80,19,"zlib"],[66,25,80,23],[66,26,80,24,"inflateSync"],[66,37,80,35],[66,38,80,36,"inflateData"],[66,49,80,47],[66,50,80,48],[67,4,81,2],[67,5,81,3],[67,11,81,9],[68,6,82,4],[68,10,82,8,"rowSize"],[68,17,82,15],[68,20,83,6],[68,21,83,8,"metaData"],[68,29,83,16],[68,30,83,17,"width"],[68,35,83,22],[68,38,83,25,"metaData"],[68,46,83,33],[68,47,83,34,"bpp"],[68,50,83,37],[68,53,83,40,"metaData"],[68,61,83,48],[68,62,83,49,"depth"],[68,67,83,54],[68,70,83,57],[68,71,83,58],[68,75,83,63],[68,76,83,64],[68,80,83,68],[68,81,83,69],[69,6,84,4],[69,10,84,8,"imageSize"],[69,19,84,17],[69,22,84,20,"rowSize"],[69,29,84,27],[69,32,84,30,"metaData"],[69,40,84,38],[69,41,84,39,"height"],[69,47,84,45],[70,6,85,4,"inflatedData"],[70,18,85,16],[70,21,85,19,"inflateSync"],[70,32,85,30],[70,33,85,31,"inflateData"],[70,44,85,42],[70,46,85,44],[71,8,86,6,"chunkSize"],[71,17,86,15],[71,19,86,17,"imageSize"],[71,28,86,26],[72,8,87,6,"maxLength"],[72,17,87,15],[72,19,87,17,"imageSize"],[73,6,88,4],[73,7,88,5],[73,8,88,6],[74,4,89,2],[75,4,90,2,"inflateData"],[75,15,90,13],[75,18,90,16],[75,22,90,20],[76,4,92,2],[76,8,92,6],[76,9,92,7,"inflatedData"],[76,21,92,19],[76,25,92,23],[76,26,92,24,"inflatedData"],[76,38,92,36],[76,39,92,37,"length"],[76,45,92,43],[76,47,92,45],[77,6,93,4],[77,12,93,10],[77,16,93,14,"Error"],[77,21,93,19],[77,22,93,20],[77,63,93,61],[77,64,93,62],[78,4,94,2],[79,4,96,2],[79,8,96,6,"unfilteredData"],[79,22,96,20],[79,25,96,23,"FilterSync"],[79,35,96,33],[79,36,96,34,"process"],[79,43,96,41],[79,44,96,42,"inflatedData"],[79,56,96,54],[79,58,96,56,"metaData"],[79,66,96,64],[79,67,96,65],[80,4,97,2,"inflateData"],[80,15,97,13],[80,18,97,16],[80,22,97,20],[81,4,99,2],[81,8,99,6,"bitmapData"],[81,18,99,16],[81,21,99,19,"bitmapper"],[81,30,99,28],[81,31,99,29,"dataToBitMap"],[81,43,99,41],[81,44,99,42,"unfilteredData"],[81,58,99,56],[81,60,99,58,"metaData"],[81,68,99,66],[81,69,99,67],[82,4,100,2,"unfilteredData"],[82,18,100,16],[82,21,100,19],[82,25,100,23],[83,4,102,2],[83,8,102,6,"normalisedBitmapData"],[83,28,102,26],[83,31,102,29,"formatNormaliser"],[83,47,102,45],[83,48,102,46,"bitmapData"],[83,58,102,56],[83,60,102,58,"metaData"],[83,68,102,66],[83,69,102,67],[84,4,104,2,"metaData"],[84,12,104,10],[84,13,104,11,"data"],[84,17,104,15],[84,20,104,18,"normalisedBitmapData"],[84,40,104,38],[85,4,105,2,"metaData"],[85,12,105,10],[85,13,105,11,"gamma"],[85,18,105,16],[85,21,105,19,"gamma"],[85,26,105,24],[85,30,105,28],[85,31,105,29],[86,4,107,2],[86,11,107,9,"metaData"],[86,19,107,17],[87,2,108,0],[87,3,108,1],[88,0,108,2],[88,3]],"functionMap":{"names":["<global>","module.exports","handleError","handleMetaData","handleTransColor","handlePalette","handleSimpleTransparency","handleGamma","handleInflateData"],"mappings":"AAA;iBCc;ECQ;GDE;EEG;GFE;EGE;GHE;EIE;GJE;EKE;GLE;EMG;GNE;EOG;GPE;CDwD"},"hasCjsExports":true},"type":"js/module"}]}