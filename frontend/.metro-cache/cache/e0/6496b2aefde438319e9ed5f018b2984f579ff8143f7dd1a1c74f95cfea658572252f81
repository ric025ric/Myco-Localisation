{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _default = (matrix, size) => {\n    const cellSize = size / matrix.length;\n    let path = '';\n    matrix.forEach((row, i) => {\n      let needDraw = false;\n      row.forEach((column, j) => {\n        if (column) {\n          if (!needDraw) {\n            path += `M${cellSize * j} ${cellSize / 2 + cellSize * i} `;\n            needDraw = true;\n          }\n          if (needDraw && j === matrix.length - 1) {\n            path += `L${cellSize * (j + 1)} ${cellSize / 2 + cellSize * i} `;\n          }\n        } else {\n          if (needDraw) {\n            path += `L${cellSize * j} ${cellSize / 2 + cellSize * i} `;\n            needDraw = false;\n          }\n        }\n      });\n    });\n    return {\n      cellSize,\n      path\n    };\n  };\n});","lineCount":40,"map":[[7,2,1,0,"Object"],[7,8,1,0],[7,9,1,0,"defineProperty"],[7,23,1,0],[7,24,1,0,"exports"],[7,31,1,0],[8,4,1,0,"enumerable"],[8,14,1,0],[9,4,1,0,"get"],[9,7,1,0],[9,18,1,0,"get"],[9,19,1,0],[10,6,1,0],[10,13,1,0,"_default"],[10,21,1,0],[11,4,1,0],[12,2,1,0],[13,2,1,0],[13,6,1,0,"_default"],[13,14,1,0],[13,17,1,15,"_default"],[13,18,1,16,"matrix"],[13,24,1,22],[13,26,1,24,"size"],[13,30,1,28],[13,35,1,33],[14,4,2,2],[14,10,2,8,"cellSize"],[14,18,2,16],[14,21,2,19,"size"],[14,25,2,23],[14,28,2,26,"matrix"],[14,34,2,32],[14,35,2,33,"length"],[14,41,2,39],[15,4,3,2],[15,8,3,6,"path"],[15,12,3,10],[15,15,3,13],[15,17,3,15],[16,4,4,2,"matrix"],[16,10,4,8],[16,11,4,9,"forEach"],[16,18,4,16],[16,19,4,17],[16,20,4,18,"row"],[16,23,4,21],[16,25,4,23,"i"],[16,26,4,24],[16,31,4,29],[17,6,5,4],[17,10,5,8,"needDraw"],[17,18,5,16],[17,21,5,19],[17,26,5,24],[18,6,6,4,"row"],[18,9,6,7],[18,10,6,8,"forEach"],[18,17,6,15],[18,18,6,16],[18,19,6,17,"column"],[18,25,6,23],[18,27,6,25,"j"],[18,28,6,26],[18,33,6,31],[19,8,7,6],[19,12,7,10,"column"],[19,18,7,16],[19,20,7,18],[20,10,8,8],[20,14,8,12],[20,15,8,13,"needDraw"],[20,23,8,21],[20,25,8,23],[21,12,9,10,"path"],[21,16,9,14],[21,20,9,18],[21,24,9,22,"cellSize"],[21,32,9,30],[21,35,9,33,"j"],[21,36,9,34],[21,40,9,38,"cellSize"],[21,48,9,46],[21,51,9,49],[21,52,9,50],[21,55,9,53,"cellSize"],[21,63,9,61],[21,66,9,64,"i"],[21,67,9,65],[21,70,9,68],[22,12,10,10,"needDraw"],[22,20,10,18],[22,23,10,21],[22,27,10,25],[23,10,11,8],[24,10,12,8],[24,14,12,12,"needDraw"],[24,22,12,20],[24,26,12,24,"j"],[24,27,12,25],[24,32,12,30,"matrix"],[24,38,12,36],[24,39,12,37,"length"],[24,45,12,43],[24,48,12,46],[24,49,12,47],[24,51,12,49],[25,12,13,10,"path"],[25,16,13,14],[25,20,13,18],[25,24,13,22,"cellSize"],[25,32,13,30],[25,36,13,34,"j"],[25,37,13,35],[25,40,13,38],[25,41,13,39],[25,42,13,40],[25,46,13,44,"cellSize"],[25,54,13,52],[25,57,13,55],[25,58,13,56],[25,61,13,59,"cellSize"],[25,69,13,67],[25,72,13,70,"i"],[25,73,13,71],[25,76,13,74],[26,10,14,8],[27,8,15,6],[27,9,15,7],[27,15,15,13],[28,10,16,8],[28,14,16,12,"needDraw"],[28,22,16,20],[28,24,16,22],[29,12,17,10,"path"],[29,16,17,14],[29,20,17,18],[29,24,17,22,"cellSize"],[29,32,17,30],[29,35,17,33,"j"],[29,36,17,34],[29,40,17,38,"cellSize"],[29,48,17,46],[29,51,17,49],[29,52,17,50],[29,55,17,53,"cellSize"],[29,63,17,61],[29,66,17,64,"i"],[29,67,17,65],[29,70,17,68],[30,12,18,10,"needDraw"],[30,20,18,18],[30,23,18,21],[30,28,18,26],[31,10,19,8],[32,8,20,6],[33,6,21,4],[33,7,21,5],[33,8,21,6],[34,4,22,2],[34,5,22,3],[34,6,22,4],[35,4,23,2],[35,11,23,9],[36,6,24,4,"cellSize"],[36,14,24,12],[37,6,25,4,"path"],[38,4,26,2],[38,5,26,3],[39,2,27,0],[39,3,27,1],[40,0,27,1],[40,3]],"functionMap":{"names":["<global>","default","matrix.forEach$argument_0","row.forEach$argument_0"],"mappings":"AAA,eC;iBCG;gBCE;KDe;GDC;CDK"},"hasCjsExports":false},"type":"js/module"}]}