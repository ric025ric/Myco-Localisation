{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useUnmountFlag\", {\n    enumerable: true,\n    get: function () {\n      return useUnmountFlag;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  /**\n   * Hook that provides a way to track component unmounting state.\n   * This hook is particularly useful for preventing state updates or side effects\n   * after a component has unmounted, helping to avoid memory leaks and race conditions.\n   *\n   * @returns A ref containing a boolean flag that indicates whether the component is unmounted\n   *         (true) or mounted (false)\n   */\n  const useUnmountFlag = () => {\n    // Create a ref to store the unmount state\n    // Using ref ensures the value persists between renders without causing re-renders\n    const isUnmounted = (0, _react.useRef)(false);\n    // Use layoutEffect to set up cleanup on unmount\n    // This ensures the flag is set before any other cleanup effects run\n    (0, _react.useLayoutEffect)(() => {\n      isUnmounted.current = false;\n      // Cleanup function that runs when the component unmounts\n      return () => {\n        isUnmounted.current = true;\n      };\n    }, []);\n    return isUnmounted;\n  };\n});","lineCount":37,"map":[[7,2,10,0,"Object"],[7,8,10,0],[7,9,10,0,"defineProperty"],[7,23,10,0],[7,24,10,0,"exports"],[7,31,10,0],[8,4,10,0,"enumerable"],[8,14,10,0],[9,4,10,0,"get"],[9,7,10,0],[9,18,10,0,"get"],[9,19,10,0],[10,6,10,0],[10,13,10,0,"useUnmountFlag"],[10,27,10,0],[11,4,10,0],[12,2,10,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,2,10,7],[22,8,10,13,"useUnmountFlag"],[22,22,10,27],[22,25,10,30,"useUnmountFlag"],[22,26,10,30],[22,31,10,36],[23,4,11,4],[24,4,12,4],[25,4,13,4],[25,10,13,10,"isUnmounted"],[25,21,13,21],[25,24,13,24],[25,28,13,24,"useRef"],[25,34,13,30],[25,35,13,30,"useRef"],[25,41,13,30],[25,43,13,31],[25,48,13,36],[25,49,13,37],[26,4,14,4],[27,4,15,4],[28,4,16,4],[28,8,16,4,"useLayoutEffect"],[28,14,16,19],[28,15,16,19,"useLayoutEffect"],[28,30,16,19],[28,32,16,20],[28,38,16,26],[29,6,17,8,"isUnmounted"],[29,17,17,19],[29,18,17,20,"current"],[29,25,17,27],[29,28,17,30],[29,33,17,35],[30,6,18,8],[31,6,19,8],[31,13,19,15],[31,19,19,21],[32,8,20,12,"isUnmounted"],[32,19,20,23],[32,20,20,24,"current"],[32,27,20,31],[32,30,20,34],[32,34,20,38],[33,6,21,8],[33,7,21,9],[34,4,22,4],[34,5,22,5],[34,7,22,7],[34,9,22,9],[34,10,22,10],[35,4,23,4],[35,11,23,11,"isUnmounted"],[35,22,23,22],[36,2,24,0],[36,3,24,1],[37,0,24,2],[37,3]],"functionMap":{"names":["<global>","useUnmountFlag","useLayoutEffect$argument_0","<anonymous>"],"mappings":"AAA;8BCS;oBCM;eCG;SDE;KDC;CDE"},"hasCjsExports":false},"type":"js/module"}]}