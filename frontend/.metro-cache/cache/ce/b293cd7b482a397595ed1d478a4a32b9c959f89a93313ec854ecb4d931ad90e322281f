{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":85,"index":85}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/I18nManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YXFxy1JKR54teS+Ykb7Z7cVZrH8=","exportNames":["*"],"imports":1}},{"name":"../utils/adjustOffsetForRTL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":65,"index":195}}],"key":"gFxd7dSVSzyOKUPtU0ivmRRba9s=","exportNames":["*"],"imports":1}},{"name":"../../native/config/PlatformHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":196},"end":{"line":4,"column":68,"index":264}}],"key":"VAeUL6D5iY8QXYEBY5o7Ew2wCF4=","exportNames":["*"],"imports":1}},{"name":"../../errors/WarningMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":265},"end":{"line":5,"column":63,"index":328}}],"key":"p+HaK13YPlWydH8N4KkuSIQ9AD0=","exportNames":["*"],"imports":1}},{"name":"./useUnmountFlag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":50,"index":379}}],"key":"LXLbqK8JtplOqn+vbyoibyvOisM=","exportNames":["*"],"imports":1}},{"name":"./useUnmountAwareCallbacks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":380},"end":{"line":7,"column":68,"index":448}}],"key":"3BUUYvw+CD+nwK2jZFzshln47Y4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useRecyclerViewController = useRecyclerViewController;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeWebDistExportsI18nManager = require(_dependencyMap[1], \"react-native-web/dist/exports/I18nManager\");\n  var I18nManager = _interopDefault(_reactNativeWebDistExportsI18nManager);\n  var _utilsAdjustOffsetForRTL = require(_dependencyMap[2], \"../utils/adjustOffsetForRTL\");\n  var _nativeConfigPlatformHelper = require(_dependencyMap[3], \"../../native/config/PlatformHelper\");\n  var _errorsWarningMessages = require(_dependencyMap[4], \"../../errors/WarningMessages\");\n  var _useUnmountFlag = require(_dependencyMap[5], \"./useUnmountFlag\");\n  var _useUnmountAwareCallbacks = require(_dependencyMap[6], \"./useUnmountAwareCallbacks\");\n  /**\n   * Comprehensive hook that manages RecyclerView scrolling behavior and provides\n   * imperative methods for controlling the RecyclerView.\n   *\n   * This hook combines content offset management and scroll handling functionality:\n   * 1. Provides imperative methods for scrolling and measurement\n   * 2. Handles initial scroll position when the list first loads\n   * 3. Maintains visible content position during updates\n   * 4. Manages scroll anchors for chat-like applications\n   *\n   * @param recyclerViewManager - The RecyclerViewManager instance that handles core functionality\n   * @param ref - The ref to expose the imperative methods\n   * @param scrollViewRef - Reference to the scrollable container component\n   * @param scrollAnchorRef - Reference to the scroll anchor component\n   * @param props - The RecyclerViewProps containing configuration\n   */\n  function useRecyclerViewController(recyclerViewManager, ref, scrollViewRef, scrollAnchorRef) {\n    const isUnmounted = (0, _useUnmountFlag.useUnmountFlag)();\n    const [_, setRenderId] = (0, _react.useState)(0);\n    const pauseOffsetCorrection = (0, _react.useRef)(false);\n    const initialScrollCompletedRef = (0, _react.useRef)(false);\n    const lastDataLengthRef = (0, _react.useRef)(recyclerViewManager.getDataLength());\n    const {\n      setTimeout\n    } = (0, _useUnmountAwareCallbacks.useUnmountAwareTimeout)();\n    // Track the first visible item for maintaining scroll position\n    const firstVisibleItemKey = (0, _react.useRef)(undefined);\n    const firstVisibleItemLayout = (0, _react.useRef)(undefined);\n    // Queue to store callbacks that should be executed after scroll offset updates\n    const pendingScrollCallbacks = (0, _react.useRef)([]);\n    // Handle initial scroll position when the list first loads\n    //   useOnLoad(recyclerViewManager, () => {\n    //   });\n    /**\n     * Updates the scroll offset and calls the provided callback\n     * after the update has been applied and the component has re-rendered.\n     *\n     * @param offset - The new scroll offset to apply\n     * @param callback - Optional callback to execute after the update is applied\n     */\n    const updateScrollOffsetWithCallback = (0, _react.useCallback)((offset, callback) => {\n      // Attempt to update the scroll offset in the RecyclerViewManager\n      // This returns undefined if no update is needed\n      if (recyclerViewManager.updateScrollOffset(offset) !== undefined) {\n        // It will be executed after the next render\n        pendingScrollCallbacks.current.push(callback);\n        // Trigger a re-render to apply the scroll offset update\n        setRenderId(prev => prev + 1);\n      } else {\n        // No update needed, execute callback immediately\n        callback();\n      }\n    }, [recyclerViewManager]);\n    const computeFirstVisibleIndexForOffsetCorrection = (0, _react.useCallback)(() => {\n      if (recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.hasStableDataKeys() && recyclerViewManager.getDataLength() > 0 && recyclerViewManager.shouldMaintainVisibleContentPosition()) {\n        // Update the tracked first visible item\n        const firstVisibleIndex = Math.max(0, recyclerViewManager.computeVisibleIndices().startIndex);\n        if (firstVisibleIndex !== undefined && firstVisibleIndex >= 0) {\n          firstVisibleItemKey.current = recyclerViewManager.getDataKey(firstVisibleIndex);\n          firstVisibleItemLayout.current = Object.assign({}, recyclerViewManager.getLayout(firstVisibleIndex));\n        }\n      }\n    }, [recyclerViewManager]);\n    /**\n     * Maintains the visible content position when the list updates.\n     * This is particularly useful for chat applications where we want to keep\n     * the user's current view position when new messages are added.\n     */\n    const applyOffsetCorrection = (0, _react.useCallback)(() => {\n      var _a, _b, _c;\n      const {\n        horizontal,\n        data\n      } = recyclerViewManager.props;\n      // Execute all pending callbacks from previous scroll offset updates\n      // This ensures any scroll operations that were waiting for render are completed\n      const callbacks = pendingScrollCallbacks.current;\n      pendingScrollCallbacks.current = [];\n      callbacks.forEach(callback => callback());\n      const currentDataLength = recyclerViewManager.getDataLength();\n      if (recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.hasStableDataKeys() && currentDataLength > 0 && recyclerViewManager.shouldMaintainVisibleContentPosition()) {\n        const hasDataChanged = currentDataLength !== lastDataLengthRef.current;\n        // If we have a tracked first visible item, maintain its position\n        if (firstVisibleItemKey.current) {\n          const currentIndexOfFirstVisibleItem = (_a = recyclerViewManager.getEngagedIndices().findValue(index => recyclerViewManager.getDataKey(index) === firstVisibleItemKey.current)) !== null && _a !== void 0 ? _a : hasDataChanged ? data === null || data === void 0 ? void 0 : data.findIndex((item, index) => recyclerViewManager.getDataKey(index) === firstVisibleItemKey.current) : undefined;\n          if (currentIndexOfFirstVisibleItem !== undefined && currentIndexOfFirstVisibleItem >= 0) {\n            // Calculate the difference in position and apply the offset\n            const diff = horizontal ? recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem).x - firstVisibleItemLayout.current.x : recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem).y - firstVisibleItemLayout.current.y;\n            firstVisibleItemLayout.current = Object.assign({}, recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem));\n            if (diff !== 0 && !pauseOffsetCorrection.current && !recyclerViewManager.animationOptimizationsEnabled) {\n              // console.log(\"diff\", diff, firstVisibleItemKey.current);\n              if (_nativeConfigPlatformHelper.PlatformConfig.supportsOffsetCorrection) {\n                // console.log(\"scrollBy\", diff);\n                (_b = scrollAnchorRef.current) === null || _b === void 0 ? void 0 : _b.scrollBy(diff);\n              } else {\n                const scrollToParams = horizontal ? {\n                  x: recyclerViewManager.getAbsoluteLastScrollOffset() + diff,\n                  animated: false\n                } : {\n                  y: recyclerViewManager.getAbsoluteLastScrollOffset() + diff,\n                  animated: false\n                };\n                (_c = scrollViewRef.current) === null || _c === void 0 ? void 0 : _c.scrollTo(scrollToParams);\n              }\n              if (hasDataChanged) {\n                updateScrollOffsetWithCallback(recyclerViewManager.getAbsoluteLastScrollOffset() + diff, () => {});\n                recyclerViewManager.ignoreScrollEvents = true;\n                setTimeout(() => {\n                  recyclerViewManager.ignoreScrollEvents = false;\n                }, 100);\n              }\n            }\n          }\n        }\n        computeFirstVisibleIndexForOffsetCorrection();\n      }\n      lastDataLengthRef.current = recyclerViewManager.getDataLength();\n    }, [recyclerViewManager, scrollAnchorRef, scrollViewRef, setTimeout, updateScrollOffsetWithCallback, computeFirstVisibleIndexForOffsetCorrection]);\n    const handlerMethods = (0, _react.useMemo)(() => {\n      return {\n        get props() {\n          return recyclerViewManager.props;\n        },\n        /**\n         * Scrolls the list to a specific offset position.\n         * Handles RTL layouts and first item offset adjustments.\n         */\n        scrollToOffset: ({\n          offset,\n          animated,\n          skipFirstItemOffset = true\n        }) => {\n          const {\n            horizontal\n          } = recyclerViewManager.props;\n          if (scrollViewRef.current) {\n            // Adjust offset for RTL layouts in horizontal mode\n            if (I18nManager.default.isRTL && horizontal) {\n              // eslint-disable-next-line no-param-reassign\n              offset = (0, _utilsAdjustOffsetForRTL.adjustOffsetForRTL)(offset, recyclerViewManager.getChildContainerDimensions().width, recyclerViewManager.getWindowSize().width) + (skipFirstItemOffset ? recyclerViewManager.firstItemOffset : -recyclerViewManager.firstItemOffset);\n            }\n            // Calculate the final offset including first item offset if needed\n            const adjustedOffset = offset + (skipFirstItemOffset ? 0 : recyclerViewManager.firstItemOffset);\n            const scrollTo = horizontal ? {\n              x: adjustedOffset,\n              y: 0\n            } : {\n              x: 0,\n              y: adjustedOffset\n            };\n            scrollViewRef.current.scrollTo(Object.assign({}, scrollTo, {\n              animated\n            }));\n          }\n        },\n        clearLayoutCacheOnUpdate: () => {\n          recyclerViewManager.markLayoutManagerDirty();\n        },\n        // Expose native scroll view methods\n        flashScrollIndicators: () => {\n          scrollViewRef.current.flashScrollIndicators();\n        },\n        getNativeScrollRef: () => {\n          return scrollViewRef.current;\n        },\n        getScrollResponder: () => {\n          return scrollViewRef.current.getScrollResponder();\n        },\n        getScrollableNode: () => {\n          return scrollViewRef.current.getScrollableNode();\n        },\n        /**\n         * Scrolls to the end of the list.\n         */\n        scrollToEnd: async ({\n          animated\n        } = {}) => {\n          const {\n            data\n          } = recyclerViewManager.props;\n          if (data && data.length > 0) {\n            const lastIndex = data.length - 1;\n            if (!recyclerViewManager.getEngagedIndices().includes(lastIndex)) {\n              await handlerMethods.scrollToIndex({\n                index: lastIndex,\n                animated\n              });\n            }\n          }\n          setTimeout(() => {\n            var _a;\n            (_a = scrollViewRef.current) === null || _a === void 0 ? void 0 : _a.scrollToEnd({\n              animated\n            });\n          }, 0);\n        },\n        /**\n         * Scrolls to the beginning of the list.\n         */\n        scrollToTop: ({\n          animated\n        } = {}) => {\n          handlerMethods.scrollToOffset({\n            offset: 0,\n            animated\n          });\n        },\n        /**\n         * Scrolls to a specific index in the list.\n         * Supports viewPosition and viewOffset for precise positioning.\n         * Returns a Promise that resolves when the scroll is complete.\n         */\n        scrollToIndex: ({\n          index,\n          animated,\n          viewPosition,\n          viewOffset\n        }) => {\n          return new Promise(resolve => {\n            const {\n              horizontal\n            } = recyclerViewManager.props;\n            if (scrollViewRef.current && index >= 0 && index < recyclerViewManager.getDataLength()) {\n              // Pause the scroll offset adjustments\n              pauseOffsetCorrection.current = true;\n              recyclerViewManager.setOffsetProjectionEnabled(false);\n              const getFinalOffset = () => {\n                const layout = recyclerViewManager.getLayout(index);\n                const offset = horizontal ? layout.x : layout.y;\n                let finalOffset = offset;\n                // take viewPosition etc into account\n                if (viewPosition !== undefined || viewOffset !== undefined) {\n                  const containerSize = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n                  const itemSize = horizontal ? layout.width : layout.height;\n                  if (viewPosition !== undefined) {\n                    // viewPosition: 0 = top, 0.5 = center, 1 = bottom\n                    finalOffset = offset - (containerSize - itemSize) * viewPosition;\n                  }\n                  if (viewOffset !== undefined) {\n                    finalOffset += viewOffset;\n                  }\n                }\n                return finalOffset + recyclerViewManager.firstItemOffset;\n              };\n              const lastAbsoluteScrollOffset = recyclerViewManager.getAbsoluteLastScrollOffset();\n              const bufferForScroll = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n              const bufferForCompute = bufferForScroll * 2;\n              const getStartScrollOffset = () => {\n                let lastScrollOffset = lastAbsoluteScrollOffset;\n                const finalOffset = getFinalOffset();\n                if (finalOffset > lastScrollOffset) {\n                  lastScrollOffset = Math.max(finalOffset - bufferForCompute, lastScrollOffset);\n                  recyclerViewManager.setScrollDirection(\"forward\");\n                } else {\n                  lastScrollOffset = Math.min(finalOffset + bufferForCompute, lastScrollOffset);\n                  recyclerViewManager.setScrollDirection(\"backward\");\n                }\n                return lastScrollOffset;\n              };\n              let initialTargetOffset = getFinalOffset();\n              let initialStartScrollOffset = getStartScrollOffset();\n              let finalOffset = initialTargetOffset;\n              let startScrollOffset = initialStartScrollOffset;\n              const steps = 5;\n              /**\n               * Recursively performs the scroll animation steps.\n               * This function replaces the async/await loop with callback-based execution.\n               *\n               * @param currentStep - The current step in the animation (0 to steps-1)\n               */\n              const performScrollStep = currentStep => {\n                // Check if component is unmounted or we've completed all steps\n                if (isUnmounted.current) {\n                  resolve();\n                  return;\n                } else if (currentStep >= steps) {\n                  // All steps completed, perform final scroll\n                  finishScrollToIndex();\n                  return;\n                }\n                // Calculate the offset for this step\n                // For animated scrolls: interpolate from finalOffset to startScrollOffset\n                // For non-animated: interpolate from startScrollOffset to finalOffset\n                const nextOffset = animated ? finalOffset + (startScrollOffset - finalOffset) * (currentStep / (steps - 1)) : startScrollOffset + (finalOffset - startScrollOffset) * (currentStep / (steps - 1));\n                // Update scroll offset with a callback to continue to the next step\n                updateScrollOffsetWithCallback(nextOffset, () => {\n                  // Check if the index is still valid after the update\n                  if (index >= recyclerViewManager.getDataLength()) {\n                    // Index out of bounds, scroll to end instead\n                    handlerMethods.scrollToEnd({\n                      animated\n                    });\n                    resolve(); // Resolve the promise as we're done\n                    return;\n                  }\n                  // Check if the target position has changed significantly\n                  const newFinalOffset = getFinalOffset();\n                  if (newFinalOffset < initialTargetOffset && newFinalOffset < initialStartScrollOffset || newFinalOffset > initialTargetOffset && newFinalOffset > initialStartScrollOffset) {\n                    // Target has moved, recalculate and restart from beginning\n                    finalOffset = newFinalOffset;\n                    startScrollOffset = getStartScrollOffset();\n                    initialTargetOffset = newFinalOffset;\n                    initialStartScrollOffset = startScrollOffset;\n                    performScrollStep(0); // Restart from step 0\n                  } else {\n                    // Continue to next step\n                    performScrollStep(currentStep + 1);\n                  }\n                });\n              };\n              /**\n               * Completes the scroll to index operation by performing the final scroll\n               * and re-enabling offset correction after a delay.\n               */\n              const finishScrollToIndex = () => {\n                finalOffset = getFinalOffset();\n                const maxOffset = recyclerViewManager.getMaxScrollOffset();\n                if (finalOffset > maxOffset) {\n                  finalOffset = maxOffset;\n                }\n                if (animated) {\n                  // For animated scrolls, first jump to the start position\n                  // We don't need to add firstItemOffset here as it's already added\n                  handlerMethods.scrollToOffset({\n                    offset: startScrollOffset,\n                    animated: false,\n                    skipFirstItemOffset: true\n                  });\n                }\n                // Perform the final scroll to the target position\n                handlerMethods.scrollToOffset({\n                  offset: finalOffset,\n                  animated,\n                  skipFirstItemOffset: true\n                });\n                // Re-enable offset correction after a delay\n                // Longer delay for animated scrolls to allow animation to complete\n                setTimeout(() => {\n                  pauseOffsetCorrection.current = false;\n                  recyclerViewManager.setOffsetProjectionEnabled(true);\n                  resolve(); // Resolve the promise after re-enabling corrections\n                }, animated ? 300 : 200);\n              };\n              // Start the scroll animation process\n              performScrollStep(0);\n            } else {\n              // Invalid parameters, resolve immediately\n              resolve();\n            }\n          });\n        },\n        /**\n         * Scrolls to a specific item in the list.\n         * Finds the item's index and uses scrollToIndex internally.\n         */\n        scrollToItem: ({\n          item,\n          animated,\n          viewPosition,\n          viewOffset\n        }) => {\n          const {\n            data\n          } = recyclerViewManager.props;\n          if (scrollViewRef.current && data) {\n            // Find the index of the item in the data array\n            const index = data.findIndex(dataItem => dataItem === item);\n            if (index >= 0) {\n              handlerMethods.scrollToIndex({\n                index,\n                animated,\n                viewPosition,\n                viewOffset\n              });\n            }\n          }\n        },\n        // Utility methods for measuring header height / top padding\n        getFirstItemOffset: () => {\n          return recyclerViewManager.firstItemOffset;\n        },\n        getWindowSize: () => {\n          return recyclerViewManager.getWindowSize();\n        },\n        getLayout: index => {\n          return recyclerViewManager.tryGetLayout(index);\n        },\n        getAbsoluteLastScrollOffset: () => {\n          return recyclerViewManager.getAbsoluteLastScrollOffset();\n        },\n        getChildContainerDimensions: () => {\n          return recyclerViewManager.getChildContainerDimensions();\n        },\n        recordInteraction: () => {\n          recyclerViewManager.recordInteraction();\n        },\n        computeVisibleIndices: () => {\n          return recyclerViewManager.computeVisibleIndices();\n        },\n        getFirstVisibleIndex: () => {\n          return recyclerViewManager.computeVisibleIndices().startIndex;\n        },\n        recomputeViewableItems: () => {\n          recyclerViewManager.recomputeViewableItems();\n        },\n        /**\n         * Disables item recycling in preparation for layout animations.\n         */\n        prepareForLayoutAnimationRender: () => {\n          if (!recyclerViewManager.props.keyExtractor) {\n            console.warn(_errorsWarningMessages.WarningMessages.keyExtractorNotDefinedForAnimation);\n          }\n          recyclerViewManager.animationOptimizationsEnabled = true;\n        }\n      };\n    }, [recyclerViewManager, scrollViewRef, setTimeout, isUnmounted, updateScrollOffsetWithCallback]);\n    const applyInitialScrollIndex = (0, _react.useCallback)(() => {\n      var _a, _b, _c;\n      const {\n        horizontal,\n        data,\n        initialScrollIndexParams\n      } = recyclerViewManager.props;\n      const initialScrollIndex = (_a = recyclerViewManager.getInitialScrollIndex()) !== null && _a !== void 0 ? _a : -1;\n      const dataLength = (_b = data === null || data === void 0 ? void 0 : data.length) !== null && _b !== void 0 ? _b : 0;\n      if (initialScrollIndex >= 0 && initialScrollIndex < dataLength && !initialScrollCompletedRef.current && recyclerViewManager.getIsFirstLayoutComplete()) {\n        // Use setTimeout to ensure that we keep trying to scroll on first few renders\n        setTimeout(() => {\n          initialScrollCompletedRef.current = true;\n          pauseOffsetCorrection.current = false;\n        }, 100);\n        pauseOffsetCorrection.current = true;\n        const additionalOffset = (_c = initialScrollIndexParams === null || initialScrollIndexParams === void 0 ? void 0 : initialScrollIndexParams.viewOffset) !== null && _c !== void 0 ? _c : 0;\n        const offset = horizontal ? recyclerViewManager.getLayout(initialScrollIndex).x + additionalOffset : recyclerViewManager.getLayout(initialScrollIndex).y + additionalOffset;\n        handlerMethods.scrollToOffset({\n          offset,\n          animated: false,\n          skipFirstItemOffset: false\n        });\n        setTimeout(() => {\n          handlerMethods.scrollToOffset({\n            offset,\n            animated: false,\n            skipFirstItemOffset: false\n          });\n        }, 0);\n      }\n    }, [handlerMethods, recyclerViewManager, setTimeout]);\n    // Expose imperative methods through the ref\n    (0, _react.useImperativeHandle)(ref, () => {\n      const imperativeApi = Object.assign({}, scrollViewRef.current, handlerMethods);\n      // Without this the props getter from handlerMethods is evaluated during spread and\n      // future updates to props are not reflected in the ref\n      Object.defineProperty(imperativeApi, \"props\", {\n        get() {\n          return recyclerViewManager.props;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      return imperativeApi;\n    }, [handlerMethods, scrollViewRef, recyclerViewManager]);\n    return {\n      applyOffsetCorrection,\n      computeFirstVisibleIndexForOffsetCorrection,\n      applyInitialScrollIndex,\n      handlerMethods\n    };\n  }\n});","lineCount":490,"map":[[12,2,24,0,"exports"],[12,9,24,0],[12,10,24,0,"useRecyclerViewController"],[12,35,24,0],[12,38,24,0,"useRecyclerViewController"],[12,63,24,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,1,85],[14,6,1,85,"_reactNativeWebDistExportsI18nManager"],[14,43,1,85],[14,46,1,85,"require"],[14,53,1,85],[14,54,1,85,"_dependencyMap"],[14,68,1,85],[15,2,1,85],[15,6,1,85,"I18nManager"],[15,17,1,85],[15,20,1,85,"_interopDefault"],[15,35,1,85],[15,36,1,85,"_reactNativeWebDistExportsI18nManager"],[15,73,1,85],[16,2,3,0],[16,6,3,0,"_utilsAdjustOffsetForRTL"],[16,30,3,0],[16,33,3,0,"require"],[16,40,3,0],[16,41,3,0,"_dependencyMap"],[16,55,3,0],[17,2,4,0],[17,6,4,0,"_nativeConfigPlatformHelper"],[17,33,4,0],[17,36,4,0,"require"],[17,43,4,0],[17,44,4,0,"_dependencyMap"],[17,58,4,0],[18,2,5,0],[18,6,5,0,"_errorsWarningMessages"],[18,28,5,0],[18,31,5,0,"require"],[18,38,5,0],[18,39,5,0,"_dependencyMap"],[18,53,5,0],[19,2,6,0],[19,6,6,0,"_useUnmountFlag"],[19,21,6,0],[19,24,6,0,"require"],[19,31,6,0],[19,32,6,0,"_dependencyMap"],[19,46,6,0],[20,2,7,0],[20,6,7,0,"_useUnmountAwareCallbacks"],[20,31,7,0],[20,34,7,0,"require"],[20,41,7,0],[20,42,7,0,"_dependencyMap"],[20,56,7,0],[21,2,8,0],[22,0,9,0],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,0,13,0],[27,0,14,0],[28,0,15,0],[29,0,16,0],[30,0,17,0],[31,0,18,0],[32,0,19,0],[33,0,20,0],[34,0,21,0],[35,0,22,0],[36,0,23,0],[37,2,24,7],[37,11,24,16,"useRecyclerViewController"],[37,36,24,41,"useRecyclerViewController"],[37,37,24,42,"recyclerViewManager"],[37,56,24,61],[37,58,24,63,"ref"],[37,61,24,66],[37,63,24,68,"scrollViewRef"],[37,76,24,81],[37,78,24,83,"scrollAnchorRef"],[37,93,24,98],[37,95,24,100],[38,4,25,4],[38,10,25,10,"isUnmounted"],[38,21,25,21],[38,24,25,24],[38,28,25,24,"useUnmountFlag"],[38,43,25,38],[38,44,25,38,"useUnmountFlag"],[38,58,25,38],[38,60,25,39],[38,61,25,40],[39,4,26,4],[39,10,26,10],[39,11,26,11,"_"],[39,12,26,12],[39,14,26,14,"setRenderId"],[39,25,26,25],[39,26,26,26],[39,29,26,29],[39,33,26,29,"useState"],[39,39,26,37],[39,40,26,37,"useState"],[39,48,26,37],[39,50,26,38],[39,51,26,39],[39,52,26,40],[40,4,27,4],[40,10,27,10,"pauseOffsetCorrection"],[40,31,27,31],[40,34,27,34],[40,38,27,34,"useRef"],[40,44,27,40],[40,45,27,40,"useRef"],[40,51,27,40],[40,53,27,41],[40,58,27,46],[40,59,27,47],[41,4,28,4],[41,10,28,10,"initialScrollCompletedRef"],[41,35,28,35],[41,38,28,38],[41,42,28,38,"useRef"],[41,48,28,44],[41,49,28,44,"useRef"],[41,55,28,44],[41,57,28,45],[41,62,28,50],[41,63,28,51],[42,4,29,4],[42,10,29,10,"lastDataLengthRef"],[42,27,29,27],[42,30,29,30],[42,34,29,30,"useRef"],[42,40,29,36],[42,41,29,36,"useRef"],[42,47,29,36],[42,49,29,37,"recyclerViewManager"],[42,68,29,56],[42,69,29,57,"getDataLength"],[42,82,29,70],[42,83,29,71],[42,84,29,72],[42,85,29,73],[43,4,30,4],[43,10,30,10],[44,6,30,12,"setTimeout"],[45,4,30,23],[45,5,30,24],[45,8,30,27],[45,12,30,27,"useUnmountAwareTimeout"],[45,37,30,49],[45,38,30,49,"useUnmountAwareTimeout"],[45,60,30,49],[45,62,30,50],[45,63,30,51],[46,4,31,4],[47,4,32,4],[47,10,32,10,"firstVisibleItemKey"],[47,29,32,29],[47,32,32,32],[47,36,32,32,"useRef"],[47,42,32,38],[47,43,32,38,"useRef"],[47,49,32,38],[47,51,32,39,"undefined"],[47,60,32,48],[47,61,32,49],[48,4,33,4],[48,10,33,10,"firstVisibleItemLayout"],[48,32,33,32],[48,35,33,35],[48,39,33,35,"useRef"],[48,45,33,41],[48,46,33,41,"useRef"],[48,52,33,41],[48,54,33,42,"undefined"],[48,63,33,51],[48,64,33,52],[49,4,34,4],[50,4,35,4],[50,10,35,10,"pendingScrollCallbacks"],[50,32,35,32],[50,35,35,35],[50,39,35,35,"useRef"],[50,45,35,41],[50,46,35,41,"useRef"],[50,52,35,41],[50,54,35,42],[50,56,35,44],[50,57,35,45],[51,4,36,4],[52,4,37,4],[53,4,38,4],[54,4,39,4],[55,0,40,0],[56,0,41,0],[57,0,42,0],[58,0,43,0],[59,0,44,0],[60,0,45,0],[61,4,46,4],[61,10,46,10,"updateScrollOffsetWithCallback"],[61,40,46,40],[61,43,46,43],[61,47,46,43,"useCallback"],[61,53,46,54],[61,54,46,54,"useCallback"],[61,65,46,54],[61,67,46,55],[61,68,46,56,"offset"],[61,74,46,62],[61,76,46,64,"callback"],[61,84,46,72],[61,89,46,77],[62,6,47,8],[63,6,48,8],[64,6,49,8],[64,10,49,12,"recyclerViewManager"],[64,29,49,31],[64,30,49,32,"updateScrollOffset"],[64,48,49,50],[64,49,49,51,"offset"],[64,55,49,57],[64,56,49,58],[64,61,49,63,"undefined"],[64,70,49,72],[64,72,49,74],[65,8,50,12],[66,8,51,12,"pendingScrollCallbacks"],[66,30,51,34],[66,31,51,35,"current"],[66,38,51,42],[66,39,51,43,"push"],[66,43,51,47],[66,44,51,48,"callback"],[66,52,51,56],[66,53,51,57],[67,8,52,12],[68,8,53,12,"setRenderId"],[68,19,53,23],[68,20,53,25,"prev"],[68,24,53,29],[68,28,53,34,"prev"],[68,32,53,38],[68,35,53,41],[68,36,53,42],[68,37,53,43],[69,6,54,8],[69,7,54,9],[69,13,55,13],[70,8,56,12],[71,8,57,12,"callback"],[71,16,57,20],[71,17,57,21],[71,18,57,22],[72,6,58,8],[73,4,59,4],[73,5,59,5],[73,7,59,7],[73,8,59,8,"recyclerViewManager"],[73,27,59,27],[73,28,59,28],[73,29,59,29],[74,4,60,4],[74,10,60,10,"computeFirstVisibleIndexForOffsetCorrection"],[74,53,60,53],[74,56,60,56],[74,60,60,56,"useCallback"],[74,66,60,67],[74,67,60,67,"useCallback"],[74,78,60,67],[74,80,60,68],[74,86,60,74],[75,6,61,8],[75,10,61,12,"recyclerViewManager"],[75,29,61,31],[75,30,61,32,"getIsFirstLayoutComplete"],[75,54,61,56],[75,55,61,57],[75,56,61,58],[75,60,62,12,"recyclerViewManager"],[75,79,62,31],[75,80,62,32,"hasStableDataKeys"],[75,97,62,49],[75,98,62,50],[75,99,62,51],[75,103,63,12,"recyclerViewManager"],[75,122,63,31],[75,123,63,32,"getDataLength"],[75,136,63,45],[75,137,63,46],[75,138,63,47],[75,141,63,50],[75,142,63,51],[75,146,64,12,"recyclerViewManager"],[75,165,64,31],[75,166,64,32,"shouldMaintainVisibleContentPosition"],[75,202,64,68],[75,203,64,69],[75,204,64,70],[75,206,64,72],[76,8,65,12],[77,8,66,12],[77,14,66,18,"firstVisibleIndex"],[77,31,66,35],[77,34,66,38,"Math"],[77,38,66,42],[77,39,66,43,"max"],[77,42,66,46],[77,43,66,47],[77,44,66,48],[77,46,66,50,"recyclerViewManager"],[77,65,66,69],[77,66,66,70,"computeVisibleIndices"],[77,87,66,91],[77,88,66,92],[77,89,66,93],[77,90,66,94,"startIndex"],[77,100,66,104],[77,101,66,105],[78,8,67,12],[78,12,67,16,"firstVisibleIndex"],[78,29,67,33],[78,34,67,38,"undefined"],[78,43,67,47],[78,47,67,51,"firstVisibleIndex"],[78,64,67,68],[78,68,67,72],[78,69,67,73],[78,71,67,75],[79,10,68,16,"firstVisibleItemKey"],[79,29,68,35],[79,30,68,36,"current"],[79,37,68,43],[79,40,69,20,"recyclerViewManager"],[79,59,69,39],[79,60,69,40,"getDataKey"],[79,70,69,50],[79,71,69,51,"firstVisibleIndex"],[79,88,69,68],[79,89,69,69],[80,10,70,16,"firstVisibleItemLayout"],[80,32,70,38],[80,33,70,39,"current"],[80,40,70,46],[80,43,70,46,"Object"],[80,49,70,46],[80,50,70,46,"assign"],[80,56,70,46],[80,61,71,23,"recyclerViewManager"],[80,80,71,42],[80,81,71,43,"getLayout"],[80,90,71,52],[80,91,71,53,"firstVisibleIndex"],[80,108,71,70],[80,109,71,71],[80,110,72,17],[81,8,73,12],[82,6,74,8],[83,4,75,4],[83,5,75,5],[83,7,75,7],[83,8,75,8,"recyclerViewManager"],[83,27,75,27],[83,28,75,28],[83,29,75,29],[84,4,76,4],[85,0,77,0],[86,0,78,0],[87,0,79,0],[88,0,80,0],[89,4,81,4],[89,10,81,10,"applyOffsetCorrection"],[89,31,81,31],[89,34,81,34],[89,38,81,34,"useCallback"],[89,44,81,45],[89,45,81,45,"useCallback"],[89,56,81,45],[89,58,81,46],[89,64,81,52],[90,6,82,8],[90,10,82,12,"_a"],[90,12,82,14],[90,14,82,16,"_b"],[90,16,82,18],[90,18,82,20,"_c"],[90,20,82,22],[91,6,83,8],[91,12,83,14],[92,8,83,16,"horizontal"],[92,18,83,26],[93,8,83,28,"data"],[94,6,83,33],[94,7,83,34],[94,10,83,37,"recyclerViewManager"],[94,29,83,56],[94,30,83,57,"props"],[94,35,83,62],[95,6,84,8],[96,6,85,8],[97,6,86,8],[97,12,86,14,"callbacks"],[97,21,86,23],[97,24,86,26,"pendingScrollCallbacks"],[97,46,86,48],[97,47,86,49,"current"],[97,54,86,56],[98,6,87,8,"pendingScrollCallbacks"],[98,28,87,30],[98,29,87,31,"current"],[98,36,87,38],[98,39,87,41],[98,41,87,43],[99,6,88,8,"callbacks"],[99,15,88,17],[99,16,88,18,"forEach"],[99,23,88,25],[99,24,88,27,"callback"],[99,32,88,35],[99,36,88,40,"callback"],[99,44,88,48],[99,45,88,49],[99,46,88,50],[99,47,88,51],[100,6,89,8],[100,12,89,14,"currentDataLength"],[100,29,89,31],[100,32,89,34,"recyclerViewManager"],[100,51,89,53],[100,52,89,54,"getDataLength"],[100,65,89,67],[100,66,89,68],[100,67,89,69],[101,6,90,8],[101,10,90,12,"recyclerViewManager"],[101,29,90,31],[101,30,90,32,"getIsFirstLayoutComplete"],[101,54,90,56],[101,55,90,57],[101,56,90,58],[101,60,91,12,"recyclerViewManager"],[101,79,91,31],[101,80,91,32,"hasStableDataKeys"],[101,97,91,49],[101,98,91,50],[101,99,91,51],[101,103,92,12,"currentDataLength"],[101,120,92,29],[101,123,92,32],[101,124,92,33],[101,128,93,12,"recyclerViewManager"],[101,147,93,31],[101,148,93,32,"shouldMaintainVisibleContentPosition"],[101,184,93,68],[101,185,93,69],[101,186,93,70],[101,188,93,72],[102,8,94,12],[102,14,94,18,"hasDataChanged"],[102,28,94,32],[102,31,94,35,"currentDataLength"],[102,48,94,52],[102,53,94,57,"lastDataLengthRef"],[102,70,94,74],[102,71,94,75,"current"],[102,78,94,82],[103,8,95,12],[104,8,96,12],[104,12,96,16,"firstVisibleItemKey"],[104,31,96,35],[104,32,96,36,"current"],[104,39,96,43],[104,41,96,45],[105,10,97,16],[105,16,97,22,"currentIndexOfFirstVisibleItem"],[105,46,97,52],[105,49,97,55],[105,50,97,56,"_a"],[105,52,97,58],[105,55,97,61,"recyclerViewManager"],[105,74,97,80],[105,75,98,21,"getEngagedIndices"],[105,92,98,38],[105,93,98,39],[105,94,98,40],[105,95,99,21,"findValue"],[105,104,99,30],[105,105,99,32,"index"],[105,110,99,37],[105,114,99,42,"recyclerViewManager"],[105,133,99,61],[105,134,99,62,"getDataKey"],[105,144,99,72],[105,145,99,73,"index"],[105,150,99,78],[105,151,99,79],[105,156,100,20,"firstVisibleItemKey"],[105,175,100,39],[105,176,100,40,"current"],[105,183,100,47],[105,184,100,48],[105,190,100,54],[105,194,100,58],[105,198,100,62,"_a"],[105,200,100,64],[105,205,100,69],[105,210,100,74],[105,211,100,75],[105,214,100,78,"_a"],[105,216,100,80],[105,219,100,84,"hasDataChanged"],[105,233,100,98],[105,236,101,22,"data"],[105,240,101,26],[105,245,101,31],[105,249,101,35],[105,253,101,39,"data"],[105,257,101,43],[105,262,101,48],[105,267,101,53],[105,268,101,54],[105,271,101,57],[105,276,101,62],[105,277,101,63],[105,280,101,66,"data"],[105,284,101,70],[105,285,101,71,"findIndex"],[105,294,101,80],[105,295,101,81],[105,296,101,82,"item"],[105,300,101,86],[105,302,101,88,"index"],[105,307,101,93],[105,312,101,98,"recyclerViewManager"],[105,331,101,117],[105,332,101,118,"getDataKey"],[105,342,101,128],[105,343,101,129,"index"],[105,348,101,134],[105,349,101,135],[105,354,102,24,"firstVisibleItemKey"],[105,373,102,43],[105,374,102,44,"current"],[105,381,102,51],[105,382,102,52],[105,385,103,22,"undefined"],[105,394,103,32],[106,10,104,16],[106,14,104,20,"currentIndexOfFirstVisibleItem"],[106,44,104,50],[106,49,104,55,"undefined"],[106,58,104,64],[106,62,105,20,"currentIndexOfFirstVisibleItem"],[106,92,105,50],[106,96,105,54],[106,97,105,55],[106,99,105,57],[107,12,106,20],[108,12,107,20],[108,18,107,26,"diff"],[108,22,107,30],[108,25,107,33,"horizontal"],[108,35,107,43],[108,38,108,26,"recyclerViewManager"],[108,57,108,45],[108,58,108,46,"getLayout"],[108,67,108,55],[108,68,108,56,"currentIndexOfFirstVisibleItem"],[108,98,108,86],[108,99,108,87],[108,100,108,88,"x"],[108,101,108,89],[108,104,109,28,"firstVisibleItemLayout"],[108,126,109,50],[108,127,109,51,"current"],[108,134,109,58],[108,135,109,59,"x"],[108,136,109,60],[108,139,110,26,"recyclerViewManager"],[108,158,110,45],[108,159,110,46,"getLayout"],[108,168,110,55],[108,169,110,56,"currentIndexOfFirstVisibleItem"],[108,199,110,86],[108,200,110,87],[108,201,110,88,"y"],[108,202,110,89],[108,205,111,28,"firstVisibleItemLayout"],[108,227,111,50],[108,228,111,51,"current"],[108,235,111,58],[108,236,111,59,"y"],[108,237,111,60],[109,12,112,20,"firstVisibleItemLayout"],[109,34,112,42],[109,35,112,43,"current"],[109,42,112,50],[109,45,112,50,"Object"],[109,51,112,50],[109,52,112,50,"assign"],[109,58,112,50],[109,63,113,27,"recyclerViewManager"],[109,82,113,46],[109,83,113,47,"getLayout"],[109,92,113,56],[109,93,113,57,"currentIndexOfFirstVisibleItem"],[109,123,113,87],[109,124,113,88],[109,125,114,21],[110,12,115,20],[110,16,115,24,"diff"],[110,20,115,28],[110,25,115,33],[110,26,115,34],[110,30,116,24],[110,31,116,25,"pauseOffsetCorrection"],[110,52,116,46],[110,53,116,47,"current"],[110,60,116,54],[110,64,117,24],[110,65,117,25,"recyclerViewManager"],[110,84,117,44],[110,85,117,45,"animationOptimizationsEnabled"],[110,114,117,74],[110,116,117,76],[111,14,118,24],[112,14,119,24],[112,18,119,28,"PlatformConfig"],[112,45,119,42],[112,46,119,42,"PlatformConfig"],[112,60,119,42],[112,61,119,43,"supportsOffsetCorrection"],[112,85,119,67],[112,87,119,69],[113,16,120,28],[114,16,121,28],[114,17,121,29,"_b"],[114,19,121,31],[114,22,121,34,"scrollAnchorRef"],[114,37,121,49],[114,38,121,50,"current"],[114,45,121,57],[114,51,121,63],[114,55,121,67],[114,59,121,71,"_b"],[114,61,121,73],[114,66,121,78],[114,71,121,83],[114,72,121,84],[114,75,121,87],[114,80,121,92],[114,81,121,93],[114,84,121,96,"_b"],[114,86,121,98],[114,87,121,99,"scrollBy"],[114,95,121,107],[114,96,121,108,"diff"],[114,100,121,112],[114,101,121,113],[115,14,122,24],[115,15,122,25],[115,21,123,29],[116,16,124,28],[116,22,124,34,"scrollToParams"],[116,36,124,48],[116,39,124,51,"horizontal"],[116,49,124,61],[116,52,125,34],[117,18,126,36,"x"],[117,19,126,37],[117,21,126,39,"recyclerViewManager"],[117,40,126,58],[117,41,126,59,"getAbsoluteLastScrollOffset"],[117,68,126,86],[117,69,126,87],[117,70,126,88],[117,73,126,91,"diff"],[117,77,126,95],[118,18,127,36,"animated"],[118,26,127,44],[118,28,127,46],[119,16,128,32],[119,17,128,33],[119,20,129,34],[120,18,130,36,"y"],[120,19,130,37],[120,21,130,39,"recyclerViewManager"],[120,40,130,58],[120,41,130,59,"getAbsoluteLastScrollOffset"],[120,68,130,86],[120,69,130,87],[120,70,130,88],[120,73,130,91,"diff"],[120,77,130,95],[121,18,131,36,"animated"],[121,26,131,44],[121,28,131,46],[122,16,132,32],[122,17,132,33],[123,16,133,28],[123,17,133,29,"_c"],[123,19,133,31],[123,22,133,34,"scrollViewRef"],[123,35,133,47],[123,36,133,48,"current"],[123,43,133,55],[123,49,133,61],[123,53,133,65],[123,57,133,69,"_c"],[123,59,133,71],[123,64,133,76],[123,69,133,81],[123,70,133,82],[123,73,133,85],[123,78,133,90],[123,79,133,91],[123,82,133,94,"_c"],[123,84,133,96],[123,85,133,97,"scrollTo"],[123,93,133,105],[123,94,133,106,"scrollToParams"],[123,108,133,120],[123,109,133,121],[124,14,134,24],[125,14,135,24],[125,18,135,28,"hasDataChanged"],[125,32,135,42],[125,34,135,44],[126,16,136,28,"updateScrollOffsetWithCallback"],[126,46,136,58],[126,47,136,59,"recyclerViewManager"],[126,66,136,78],[126,67,136,79,"getAbsoluteLastScrollOffset"],[126,94,136,106],[126,95,136,107],[126,96,136,108],[126,99,136,111,"diff"],[126,103,136,115],[126,105,136,117],[126,111,136,123],[126,112,136,125],[126,113,136,126],[126,114,136,127],[127,16,137,28,"recyclerViewManager"],[127,35,137,47],[127,36,137,48,"ignoreScrollEvents"],[127,54,137,66],[127,57,137,69],[127,61,137,73],[128,16,138,28,"setTimeout"],[128,26,138,38],[128,27,138,39],[128,33,138,45],[129,18,139,32,"recyclerViewManager"],[129,37,139,51],[129,38,139,52,"ignoreScrollEvents"],[129,56,139,70],[129,59,139,73],[129,64,139,78],[130,16,140,28],[130,17,140,29],[130,19,140,31],[130,22,140,34],[130,23,140,35],[131,14,141,24],[132,12,142,20],[133,10,143,16],[134,8,144,12],[135,8,145,12,"computeFirstVisibleIndexForOffsetCorrection"],[135,51,145,55],[135,52,145,56],[135,53,145,57],[136,6,146,8],[137,6,147,8,"lastDataLengthRef"],[137,23,147,25],[137,24,147,26,"current"],[137,31,147,33],[137,34,147,36,"recyclerViewManager"],[137,53,147,55],[137,54,147,56,"getDataLength"],[137,67,147,69],[137,68,147,70],[137,69,147,71],[138,4,148,4],[138,5,148,5],[138,7,148,7],[138,8,149,8,"recyclerViewManager"],[138,27,149,27],[138,29,150,8,"scrollAnchorRef"],[138,44,150,23],[138,46,151,8,"scrollViewRef"],[138,59,151,21],[138,61,152,8,"setTimeout"],[138,71,152,18],[138,73,153,8,"updateScrollOffsetWithCallback"],[138,103,153,38],[138,105,154,8,"computeFirstVisibleIndexForOffsetCorrection"],[138,148,154,51],[138,149,155,5],[138,150,155,6],[139,4,156,4],[139,10,156,10,"handlerMethods"],[139,24,156,24],[139,27,156,27],[139,31,156,27,"useMemo"],[139,37,156,34],[139,38,156,34,"useMemo"],[139,45,156,34],[139,47,156,35],[139,53,156,41],[140,6,157,8],[140,13,157,15],[141,8,158,12],[141,12,158,16,"props"],[141,17,158,21,"props"],[141,18,158,21],[141,20,158,24],[142,10,159,16],[142,17,159,23,"recyclerViewManager"],[142,36,159,42],[142,37,159,43,"props"],[142,42,159,48],[143,8,160,12],[143,9,160,13],[144,8,161,12],[145,0,162,0],[146,0,163,0],[147,0,164,0],[148,8,165,12,"scrollToOffset"],[148,22,165,26],[148,24,165,28,"scrollToOffset"],[148,25,165,29],[149,10,165,31,"offset"],[149,16,165,37],[150,10,165,39,"animated"],[150,18,165,47],[151,10,165,49,"skipFirstItemOffset"],[151,29,165,68],[151,32,165,71],[152,8,165,77],[152,9,165,78],[152,14,165,83],[153,10,166,16],[153,16,166,22],[154,12,166,24,"horizontal"],[155,10,166,35],[155,11,166,36],[155,14,166,39,"recyclerViewManager"],[155,33,166,58],[155,34,166,59,"props"],[155,39,166,64],[156,10,167,16],[156,14,167,20,"scrollViewRef"],[156,27,167,33],[156,28,167,34,"current"],[156,35,167,41],[156,37,167,43],[157,12,168,20],[158,12,169,20],[158,16,169,24,"I18nManager"],[158,27,169,35],[158,28,169,35,"default"],[158,35,169,35],[158,36,169,36,"isRTL"],[158,41,169,41],[158,45,169,45,"horizontal"],[158,55,169,55],[158,57,169,57],[159,14,170,24],[160,14,171,24,"offset"],[160,20,171,30],[160,23,172,28],[160,27,172,28,"adjustOffsetForRTL"],[160,51,172,46],[160,52,172,46,"adjustOffsetForRTL"],[160,70,172,46],[160,72,172,47,"offset"],[160,78,172,53],[160,80,172,55,"recyclerViewManager"],[160,99,172,74],[160,100,172,75,"getChildContainerDimensions"],[160,127,172,102],[160,128,172,103],[160,129,172,104],[160,130,172,105,"width"],[160,135,172,110],[160,137,172,112,"recyclerViewManager"],[160,156,172,131],[160,157,172,132,"getWindowSize"],[160,170,172,145],[160,171,172,146],[160,172,172,147],[160,173,172,148,"width"],[160,178,172,153],[160,179,172,154],[160,183,173,33,"skipFirstItemOffset"],[160,202,173,52],[160,205,174,38,"recyclerViewManager"],[160,224,174,57],[160,225,174,58,"firstItemOffset"],[160,240,174,73],[160,243,175,38],[160,244,175,39,"recyclerViewManager"],[160,263,175,58],[160,264,175,59,"firstItemOffset"],[160,279,175,74],[160,280,175,75],[161,12,176,20],[162,12,177,20],[163,12,178,20],[163,18,178,26,"adjustedOffset"],[163,32,178,40],[163,35,178,43,"offset"],[163,41,178,49],[163,45,179,25,"skipFirstItemOffset"],[163,64,179,44],[163,67,179,47],[163,68,179,48],[163,71,179,51,"recyclerViewManager"],[163,90,179,70],[163,91,179,71,"firstItemOffset"],[163,106,179,86],[163,107,179,87],[164,12,180,20],[164,18,180,26,"scrollTo"],[164,26,180,34],[164,29,180,37,"horizontal"],[164,39,180,47],[164,42,181,26],[165,14,181,28,"x"],[165,15,181,29],[165,17,181,31,"adjustedOffset"],[165,31,181,45],[166,14,181,47,"y"],[166,15,181,48],[166,17,181,50],[167,12,181,52],[167,13,181,53],[167,16,182,26],[168,14,182,28,"x"],[168,15,182,29],[168,17,182,31],[168,18,182,32],[169,14,182,34,"y"],[169,15,182,35],[169,17,182,37,"adjustedOffset"],[170,12,182,52],[170,13,182,53],[171,12,183,20,"scrollViewRef"],[171,25,183,33],[171,26,183,34,"current"],[171,33,183,41],[171,34,183,42,"scrollTo"],[171,42,183,50],[171,43,183,50,"Object"],[171,49,183,50],[171,50,183,50,"assign"],[171,56,183,50],[171,61,184,27,"scrollTo"],[171,69,184,35],[172,14,185,24,"animated"],[173,12,185,32],[173,14,186,21],[173,15,186,22],[174,10,187,16],[175,8,188,12],[175,9,188,13],[176,8,189,12,"clearLayoutCacheOnUpdate"],[176,32,189,36],[176,34,189,38,"clearLayoutCacheOnUpdate"],[176,35,189,38],[176,40,189,44],[177,10,190,16,"recyclerViewManager"],[177,29,190,35],[177,30,190,36,"markLayoutManagerDirty"],[177,52,190,58],[177,53,190,59],[177,54,190,60],[178,8,191,12],[178,9,191,13],[179,8,192,12],[180,8,193,12,"flashScrollIndicators"],[180,29,193,33],[180,31,193,35,"flashScrollIndicators"],[180,32,193,35],[180,37,193,41],[181,10,194,16,"scrollViewRef"],[181,23,194,29],[181,24,194,30,"current"],[181,31,194,37],[181,32,194,38,"flashScrollIndicators"],[181,53,194,59],[181,54,194,60],[181,55,194,61],[182,8,195,12],[182,9,195,13],[183,8,196,12,"getNativeScrollRef"],[183,26,196,30],[183,28,196,32,"getNativeScrollRef"],[183,29,196,32],[183,34,196,38],[184,10,197,16],[184,17,197,23,"scrollViewRef"],[184,30,197,36],[184,31,197,37,"current"],[184,38,197,44],[185,8,198,12],[185,9,198,13],[186,8,199,12,"getScrollResponder"],[186,26,199,30],[186,28,199,32,"getScrollResponder"],[186,29,199,32],[186,34,199,38],[187,10,200,16],[187,17,200,23,"scrollViewRef"],[187,30,200,36],[187,31,200,37,"current"],[187,38,200,44],[187,39,200,45,"getScrollResponder"],[187,57,200,63],[187,58,200,64],[187,59,200,65],[188,8,201,12],[188,9,201,13],[189,8,202,12,"getScrollableNode"],[189,25,202,29],[189,27,202,31,"getScrollableNode"],[189,28,202,31],[189,33,202,37],[190,10,203,16],[190,17,203,23,"scrollViewRef"],[190,30,203,36],[190,31,203,37,"current"],[190,38,203,44],[190,39,203,45,"getScrollableNode"],[190,56,203,62],[190,57,203,63],[190,58,203,64],[191,8,204,12],[191,9,204,13],[192,8,205,12],[193,0,206,0],[194,0,207,0],[195,8,208,12,"scrollToEnd"],[195,19,208,23],[195,21,208,25],[195,27,208,25,"scrollToEnd"],[195,28,208,32],[196,10,208,34,"animated"],[197,8,208,43],[197,9,208,44],[197,12,208,47],[197,13,208,48],[197,14,208,49],[197,19,208,54],[198,10,209,16],[198,16,209,22],[199,12,209,24,"data"],[200,10,209,29],[200,11,209,30],[200,14,209,33,"recyclerViewManager"],[200,33,209,52],[200,34,209,53,"props"],[200,39,209,58],[201,10,210,16],[201,14,210,20,"data"],[201,18,210,24],[201,22,210,28,"data"],[201,26,210,32],[201,27,210,33,"length"],[201,33,210,39],[201,36,210,42],[201,37,210,43],[201,39,210,45],[202,12,211,20],[202,18,211,26,"lastIndex"],[202,27,211,35],[202,30,211,38,"data"],[202,34,211,42],[202,35,211,43,"length"],[202,41,211,49],[202,44,211,52],[202,45,211,53],[203,12,212,20],[203,16,212,24],[203,17,212,25,"recyclerViewManager"],[203,36,212,44],[203,37,212,45,"getEngagedIndices"],[203,54,212,62],[203,55,212,63],[203,56,212,64],[203,57,212,65,"includes"],[203,65,212,73],[203,66,212,74,"lastIndex"],[203,75,212,83],[203,76,212,84],[203,78,212,86],[204,14,213,24],[204,20,213,30,"handlerMethods"],[204,34,213,44],[204,35,213,45,"scrollToIndex"],[204,48,213,58],[204,49,213,59],[205,16,214,28,"index"],[205,21,214,33],[205,23,214,35,"lastIndex"],[205,32,214,44],[206,16,215,28,"animated"],[207,14,216,24],[207,15,216,25],[207,16,216,26],[208,12,217,20],[209,10,218,16],[210,10,219,16,"setTimeout"],[210,20,219,26],[210,21,219,27],[210,27,219,33],[211,12,220,20],[211,16,220,24,"_a"],[211,18,220,26],[212,12,221,20],[212,13,221,21,"_a"],[212,15,221,23],[212,18,221,26,"scrollViewRef"],[212,31,221,39],[212,32,221,40,"current"],[212,39,221,47],[212,45,221,53],[212,49,221,57],[212,53,221,61,"_a"],[212,55,221,63],[212,60,221,68],[212,65,221,73],[212,66,221,74],[212,69,221,77],[212,74,221,82],[212,75,221,83],[212,78,221,86,"_a"],[212,80,221,88],[212,81,221,89,"scrollToEnd"],[212,92,221,100],[212,93,221,101],[213,14,221,103,"animated"],[214,12,221,112],[214,13,221,113],[214,14,221,114],[215,10,222,16],[215,11,222,17],[215,13,222,19],[215,14,222,20],[215,15,222,21],[216,8,223,12],[216,9,223,13],[217,8,224,12],[218,0,225,0],[219,0,226,0],[220,8,227,12,"scrollToTop"],[220,19,227,23],[220,21,227,25,"scrollToTop"],[220,22,227,26],[221,10,227,28,"animated"],[222,8,227,37],[222,9,227,38],[222,12,227,41],[222,13,227,42],[222,14,227,43],[222,19,227,48],[223,10,228,16,"handlerMethods"],[223,24,228,30],[223,25,228,31,"scrollToOffset"],[223,39,228,45],[223,40,228,46],[224,12,229,20,"offset"],[224,18,229,26],[224,20,229,28],[224,21,229,29],[225,12,230,20,"animated"],[226,10,231,16],[226,11,231,17],[226,12,231,18],[227,8,232,12],[227,9,232,13],[228,8,233,12],[229,0,234,0],[230,0,235,0],[231,0,236,0],[232,0,237,0],[233,8,238,12,"scrollToIndex"],[233,21,238,25],[233,23,238,27,"scrollToIndex"],[233,24,238,28],[234,10,238,30,"index"],[234,15,238,35],[235,10,238,37,"animated"],[235,18,238,45],[236,10,238,47,"viewPosition"],[236,22,238,59],[237,10,238,61,"viewOffset"],[238,8,238,73],[238,9,238,74],[238,14,238,79],[239,10,239,16],[239,17,239,23],[239,21,239,27,"Promise"],[239,28,239,34],[239,29,239,36,"resolve"],[239,36,239,43],[239,40,239,48],[240,12,240,20],[240,18,240,26],[241,14,240,28,"horizontal"],[242,12,240,39],[242,13,240,40],[242,16,240,43,"recyclerViewManager"],[242,35,240,62],[242,36,240,63,"props"],[242,41,240,68],[243,12,241,20],[243,16,241,24,"scrollViewRef"],[243,29,241,37],[243,30,241,38,"current"],[243,37,241,45],[243,41,242,24,"index"],[243,46,242,29],[243,50,242,33],[243,51,242,34],[243,55,243,24,"index"],[243,60,243,29],[243,63,243,32,"recyclerViewManager"],[243,82,243,51],[243,83,243,52,"getDataLength"],[243,96,243,65],[243,97,243,66],[243,98,243,67],[243,100,243,69],[244,14,244,24],[245,14,245,24,"pauseOffsetCorrection"],[245,35,245,45],[245,36,245,46,"current"],[245,43,245,53],[245,46,245,56],[245,50,245,60],[246,14,246,24,"recyclerViewManager"],[246,33,246,43],[246,34,246,44,"setOffsetProjectionEnabled"],[246,60,246,70],[246,61,246,71],[246,66,246,76],[246,67,246,77],[247,14,247,24],[247,20,247,30,"getFinalOffset"],[247,34,247,44],[247,37,247,47,"getFinalOffset"],[247,38,247,47],[247,43,247,53],[248,16,248,28],[248,22,248,34,"layout"],[248,28,248,40],[248,31,248,43,"recyclerViewManager"],[248,50,248,62],[248,51,248,63,"getLayout"],[248,60,248,72],[248,61,248,73,"index"],[248,66,248,78],[248,67,248,79],[249,16,249,28],[249,22,249,34,"offset"],[249,28,249,40],[249,31,249,43,"horizontal"],[249,41,249,53],[249,44,249,56,"layout"],[249,50,249,62],[249,51,249,63,"x"],[249,52,249,64],[249,55,249,67,"layout"],[249,61,249,73],[249,62,249,74,"y"],[249,63,249,75],[250,16,250,28],[250,20,250,32,"finalOffset"],[250,31,250,43],[250,34,250,46,"offset"],[250,40,250,52],[251,16,251,28],[252,16,252,28],[252,20,252,32,"viewPosition"],[252,32,252,44],[252,37,252,49,"undefined"],[252,46,252,58],[252,50,252,62,"viewOffset"],[252,60,252,72],[252,65,252,77,"undefined"],[252,74,252,86],[252,76,252,88],[253,18,253,32],[253,24,253,38,"containerSize"],[253,37,253,51],[253,40,253,54,"horizontal"],[253,50,253,64],[253,53,254,38,"recyclerViewManager"],[253,72,254,57],[253,73,254,58,"getWindowSize"],[253,86,254,71],[253,87,254,72],[253,88,254,73],[253,89,254,74,"width"],[253,94,254,79],[253,97,255,38,"recyclerViewManager"],[253,116,255,57],[253,117,255,58,"getWindowSize"],[253,130,255,71],[253,131,255,72],[253,132,255,73],[253,133,255,74,"height"],[253,139,255,80],[254,18,256,32],[254,24,256,38,"itemSize"],[254,32,256,46],[254,35,256,49,"horizontal"],[254,45,256,59],[254,48,256,62,"layout"],[254,54,256,68],[254,55,256,69,"width"],[254,60,256,74],[254,63,256,77,"layout"],[254,69,256,83],[254,70,256,84,"height"],[254,76,256,90],[255,18,257,32],[255,22,257,36,"viewPosition"],[255,34,257,48],[255,39,257,53,"undefined"],[255,48,257,62],[255,50,257,64],[256,20,258,36],[257,20,259,36,"finalOffset"],[257,31,259,47],[257,34,260,40,"offset"],[257,40,260,46],[257,43,260,49],[257,44,260,50,"containerSize"],[257,57,260,63],[257,60,260,66,"itemSize"],[257,68,260,74],[257,72,260,78,"viewPosition"],[257,84,260,90],[258,18,261,32],[259,18,262,32],[259,22,262,36,"viewOffset"],[259,32,262,46],[259,37,262,51,"undefined"],[259,46,262,60],[259,48,262,62],[260,20,263,36,"finalOffset"],[260,31,263,47],[260,35,263,51,"viewOffset"],[260,45,263,61],[261,18,264,32],[262,16,265,28],[263,16,266,28],[263,23,266,35,"finalOffset"],[263,34,266,46],[263,37,266,49,"recyclerViewManager"],[263,56,266,68],[263,57,266,69,"firstItemOffset"],[263,72,266,84],[264,14,267,24],[264,15,267,25],[265,14,268,24],[265,20,268,30,"lastAbsoluteScrollOffset"],[265,44,268,54],[265,47,268,57,"recyclerViewManager"],[265,66,268,76],[265,67,268,77,"getAbsoluteLastScrollOffset"],[265,94,268,104],[265,95,268,105],[265,96,268,106],[266,14,269,24],[266,20,269,30,"bufferForScroll"],[266,35,269,45],[266,38,269,48,"horizontal"],[266,48,269,58],[266,51,270,30,"recyclerViewManager"],[266,70,270,49],[266,71,270,50,"getWindowSize"],[266,84,270,63],[266,85,270,64],[266,86,270,65],[266,87,270,66,"width"],[266,92,270,71],[266,95,271,30,"recyclerViewManager"],[266,114,271,49],[266,115,271,50,"getWindowSize"],[266,128,271,63],[266,129,271,64],[266,130,271,65],[266,131,271,66,"height"],[266,137,271,72],[267,14,272,24],[267,20,272,30,"bufferForCompute"],[267,36,272,46],[267,39,272,49,"bufferForScroll"],[267,54,272,64],[267,57,272,67],[267,58,272,68],[268,14,273,24],[268,20,273,30,"getStartScrollOffset"],[268,40,273,50],[268,43,273,53,"getStartScrollOffset"],[268,44,273,53],[268,49,273,59],[269,16,274,28],[269,20,274,32,"lastScrollOffset"],[269,36,274,48],[269,39,274,51,"lastAbsoluteScrollOffset"],[269,63,274,75],[270,16,275,28],[270,22,275,34,"finalOffset"],[270,33,275,45],[270,36,275,48,"getFinalOffset"],[270,50,275,62],[270,51,275,63],[270,52,275,64],[271,16,276,28],[271,20,276,32,"finalOffset"],[271,31,276,43],[271,34,276,46,"lastScrollOffset"],[271,50,276,62],[271,52,276,64],[272,18,277,32,"lastScrollOffset"],[272,34,277,48],[272,37,277,51,"Math"],[272,41,277,55],[272,42,277,56,"max"],[272,45,277,59],[272,46,277,60,"finalOffset"],[272,57,277,71],[272,60,277,74,"bufferForCompute"],[272,76,277,90],[272,78,277,92,"lastScrollOffset"],[272,94,277,108],[272,95,277,109],[273,18,278,32,"recyclerViewManager"],[273,37,278,51],[273,38,278,52,"setScrollDirection"],[273,56,278,70],[273,57,278,71],[273,66,278,80],[273,67,278,81],[274,16,279,28],[274,17,279,29],[274,23,280,33],[275,18,281,32,"lastScrollOffset"],[275,34,281,48],[275,37,281,51,"Math"],[275,41,281,55],[275,42,281,56,"min"],[275,45,281,59],[275,46,281,60,"finalOffset"],[275,57,281,71],[275,60,281,74,"bufferForCompute"],[275,76,281,90],[275,78,281,92,"lastScrollOffset"],[275,94,281,108],[275,95,281,109],[276,18,282,32,"recyclerViewManager"],[276,37,282,51],[276,38,282,52,"setScrollDirection"],[276,56,282,70],[276,57,282,71],[276,67,282,81],[276,68,282,82],[277,16,283,28],[278,16,284,28],[278,23,284,35,"lastScrollOffset"],[278,39,284,51],[279,14,285,24],[279,15,285,25],[280,14,286,24],[280,18,286,28,"initialTargetOffset"],[280,37,286,47],[280,40,286,50,"getFinalOffset"],[280,54,286,64],[280,55,286,65],[280,56,286,66],[281,14,287,24],[281,18,287,28,"initialStartScrollOffset"],[281,42,287,52],[281,45,287,55,"getStartScrollOffset"],[281,65,287,75],[281,66,287,76],[281,67,287,77],[282,14,288,24],[282,18,288,28,"finalOffset"],[282,29,288,39],[282,32,288,42,"initialTargetOffset"],[282,51,288,61],[283,14,289,24],[283,18,289,28,"startScrollOffset"],[283,35,289,45],[283,38,289,48,"initialStartScrollOffset"],[283,62,289,72],[284,14,290,24],[284,20,290,30,"steps"],[284,25,290,35],[284,28,290,38],[284,29,290,39],[285,14,291,24],[286,0,292,0],[287,0,293,0],[288,0,294,0],[289,0,295,0],[290,0,296,0],[291,14,297,24],[291,20,297,30,"performScrollStep"],[291,37,297,47],[291,40,297,51,"currentStep"],[291,51,297,62],[291,55,297,67],[292,16,298,28],[293,16,299,28],[293,20,299,32,"isUnmounted"],[293,31,299,43],[293,32,299,44,"current"],[293,39,299,51],[293,41,299,53],[294,18,300,32,"resolve"],[294,25,300,39],[294,26,300,40],[294,27,300,41],[295,18,301,32],[296,16,302,28],[296,17,302,29],[296,23,303,33],[296,27,303,37,"currentStep"],[296,38,303,48],[296,42,303,52,"steps"],[296,47,303,57],[296,49,303,59],[297,18,304,32],[298,18,305,32,"finishScrollToIndex"],[298,37,305,51],[298,38,305,52],[298,39,305,53],[299,18,306,32],[300,16,307,28],[301,16,308,28],[302,16,309,28],[303,16,310,28],[304,16,311,28],[304,22,311,34,"nextOffset"],[304,32,311,44],[304,35,311,47,"animated"],[304,43,311,55],[304,46,312,34,"finalOffset"],[304,57,312,45],[304,60,313,36],[304,61,313,37,"startScrollOffset"],[304,78,313,54],[304,81,313,57,"finalOffset"],[304,92,313,68],[304,97,314,41,"currentStep"],[304,108,314,52],[304,112,314,56,"steps"],[304,117,314,61],[304,120,314,64],[304,121,314,65],[304,122,314,66],[304,123,314,67],[304,126,315,34,"startScrollOffset"],[304,143,315,51],[304,146,316,36],[304,147,316,37,"finalOffset"],[304,158,316,48],[304,161,316,51,"startScrollOffset"],[304,178,316,68],[304,183,317,41,"currentStep"],[304,194,317,52],[304,198,317,56,"steps"],[304,203,317,61],[304,206,317,64],[304,207,317,65],[304,208,317,66],[304,209,317,67],[305,16,318,28],[306,16,319,28,"updateScrollOffsetWithCallback"],[306,46,319,58],[306,47,319,59,"nextOffset"],[306,57,319,69],[306,59,319,71],[306,65,319,77],[307,18,320,32],[308,18,321,32],[308,22,321,36,"index"],[308,27,321,41],[308,31,321,45,"recyclerViewManager"],[308,50,321,64],[308,51,321,65,"getDataLength"],[308,64,321,78],[308,65,321,79],[308,66,321,80],[308,68,321,82],[309,20,322,36],[310,20,323,36,"handlerMethods"],[310,34,323,50],[310,35,323,51,"scrollToEnd"],[310,46,323,62],[310,47,323,63],[311,22,323,65,"animated"],[312,20,323,74],[312,21,323,75],[312,22,323,76],[313,20,324,36,"resolve"],[313,27,324,43],[313,28,324,44],[313,29,324,45],[313,30,324,46],[313,31,324,47],[314,20,325,36],[315,18,326,32],[316,18,327,32],[317,18,328,32],[317,24,328,38,"newFinalOffset"],[317,38,328,52],[317,41,328,55,"getFinalOffset"],[317,55,328,69],[317,56,328,70],[317,57,328,71],[318,18,329,32],[318,22,329,37,"newFinalOffset"],[318,36,329,51],[318,39,329,54,"initialTargetOffset"],[318,58,329,73],[318,62,330,36,"newFinalOffset"],[318,76,330,50],[318,79,330,53,"initialStartScrollOffset"],[318,103,330,77],[318,107,331,37,"newFinalOffset"],[318,121,331,51],[318,124,331,54,"initialTargetOffset"],[318,143,331,73],[318,147,332,40,"newFinalOffset"],[318,161,332,54],[318,164,332,57,"initialStartScrollOffset"],[318,188,332,82],[318,190,332,84],[319,20,333,36],[320,20,334,36,"finalOffset"],[320,31,334,47],[320,34,334,50,"newFinalOffset"],[320,48,334,64],[321,20,335,36,"startScrollOffset"],[321,37,335,53],[321,40,335,56,"getStartScrollOffset"],[321,60,335,76],[321,61,335,77],[321,62,335,78],[322,20,336,36,"initialTargetOffset"],[322,39,336,55],[322,42,336,58,"newFinalOffset"],[322,56,336,72],[323,20,337,36,"initialStartScrollOffset"],[323,44,337,60],[323,47,337,63,"startScrollOffset"],[323,64,337,80],[324,20,338,36,"performScrollStep"],[324,37,338,53],[324,38,338,54],[324,39,338,55],[324,40,338,56],[324,41,338,57],[324,42,338,58],[325,18,339,32],[325,19,339,33],[325,25,340,37],[326,20,341,36],[327,20,342,36,"performScrollStep"],[327,37,342,53],[327,38,342,54,"currentStep"],[327,49,342,65],[327,52,342,68],[327,53,342,69],[327,54,342,70],[328,18,343,32],[329,16,344,28],[329,17,344,29],[329,18,344,30],[330,14,345,24],[330,15,345,25],[331,14,346,24],[332,0,347,0],[333,0,348,0],[334,0,349,0],[335,14,350,24],[335,20,350,30,"finishScrollToIndex"],[335,39,350,49],[335,42,350,52,"finishScrollToIndex"],[335,43,350,52],[335,48,350,58],[336,16,351,28,"finalOffset"],[336,27,351,39],[336,30,351,42,"getFinalOffset"],[336,44,351,56],[336,45,351,57],[336,46,351,58],[337,16,352,28],[337,22,352,34,"maxOffset"],[337,31,352,43],[337,34,352,46,"recyclerViewManager"],[337,53,352,65],[337,54,352,66,"getMaxScrollOffset"],[337,72,352,84],[337,73,352,85],[337,74,352,86],[338,16,353,28],[338,20,353,32,"finalOffset"],[338,31,353,43],[338,34,353,46,"maxOffset"],[338,43,353,55],[338,45,353,57],[339,18,354,32,"finalOffset"],[339,29,354,43],[339,32,354,46,"maxOffset"],[339,41,354,55],[340,16,355,28],[341,16,356,28],[341,20,356,32,"animated"],[341,28,356,40],[341,30,356,42],[342,18,357,32],[343,18,358,32],[344,18,359,32,"handlerMethods"],[344,32,359,46],[344,33,359,47,"scrollToOffset"],[344,47,359,61],[344,48,359,62],[345,20,360,36,"offset"],[345,26,360,42],[345,28,360,44,"startScrollOffset"],[345,45,360,61],[346,20,361,36,"animated"],[346,28,361,44],[346,30,361,46],[346,35,361,51],[347,20,362,36,"skipFirstItemOffset"],[347,39,362,55],[347,41,362,57],[348,18,363,32],[348,19,363,33],[348,20,363,34],[349,16,364,28],[350,16,365,28],[351,16,366,28,"handlerMethods"],[351,30,366,42],[351,31,366,43,"scrollToOffset"],[351,45,366,57],[351,46,366,58],[352,18,367,32,"offset"],[352,24,367,38],[352,26,367,40,"finalOffset"],[352,37,367,51],[353,18,368,32,"animated"],[353,26,368,40],[354,18,369,32,"skipFirstItemOffset"],[354,37,369,51],[354,39,369,53],[355,16,370,28],[355,17,370,29],[355,18,370,30],[356,16,371,28],[357,16,372,28],[358,16,373,28,"setTimeout"],[358,26,373,38],[358,27,373,39],[358,33,373,45],[359,18,374,32,"pauseOffsetCorrection"],[359,39,374,53],[359,40,374,54,"current"],[359,47,374,61],[359,50,374,64],[359,55,374,69],[360,18,375,32,"recyclerViewManager"],[360,37,375,51],[360,38,375,52,"setOffsetProjectionEnabled"],[360,64,375,78],[360,65,375,79],[360,69,375,83],[360,70,375,84],[361,18,376,32,"resolve"],[361,25,376,39],[361,26,376,40],[361,27,376,41],[361,28,376,42],[361,29,376,43],[362,16,377,28],[362,17,377,29],[362,19,377,31,"animated"],[362,27,377,39],[362,30,377,42],[362,33,377,45],[362,36,377,48],[362,39,377,51],[362,40,377,52],[363,14,378,24],[363,15,378,25],[364,14,379,24],[365,14,380,24,"performScrollStep"],[365,31,380,41],[365,32,380,42],[365,33,380,43],[365,34,380,44],[366,12,381,20],[366,13,381,21],[366,19,382,25],[367,14,383,24],[368,14,384,24,"resolve"],[368,21,384,31],[368,22,384,32],[368,23,384,33],[369,12,385,20],[370,10,386,16],[370,11,386,17],[370,12,386,18],[371,8,387,12],[371,9,387,13],[372,8,388,12],[373,0,389,0],[374,0,390,0],[375,0,391,0],[376,8,392,12,"scrollToItem"],[376,20,392,24],[376,22,392,26,"scrollToItem"],[376,23,392,27],[377,10,392,29,"item"],[377,14,392,33],[378,10,392,35,"animated"],[378,18,392,43],[379,10,392,45,"viewPosition"],[379,22,392,57],[380,10,392,59,"viewOffset"],[381,8,392,71],[381,9,392,72],[381,14,392,77],[382,10,393,16],[382,16,393,22],[383,12,393,24,"data"],[384,10,393,29],[384,11,393,30],[384,14,393,33,"recyclerViewManager"],[384,33,393,52],[384,34,393,53,"props"],[384,39,393,58],[385,10,394,16],[385,14,394,20,"scrollViewRef"],[385,27,394,33],[385,28,394,34,"current"],[385,35,394,41],[385,39,394,45,"data"],[385,43,394,49],[385,45,394,51],[386,12,395,20],[387,12,396,20],[387,18,396,26,"index"],[387,23,396,31],[387,26,396,34,"data"],[387,30,396,38],[387,31,396,39,"findIndex"],[387,40,396,48],[387,41,396,50,"dataItem"],[387,49,396,58],[387,53,396,63,"dataItem"],[387,61,396,71],[387,66,396,76,"item"],[387,70,396,80],[387,71,396,81],[388,12,397,20],[388,16,397,24,"index"],[388,21,397,29],[388,25,397,33],[388,26,397,34],[388,28,397,36],[389,14,398,24,"handlerMethods"],[389,28,398,38],[389,29,398,39,"scrollToIndex"],[389,42,398,52],[389,43,398,53],[390,16,399,28,"index"],[390,21,399,33],[391,16,400,28,"animated"],[391,24,400,36],[392,16,401,28,"viewPosition"],[392,28,401,40],[393,16,402,28,"viewOffset"],[394,14,403,24],[394,15,403,25],[394,16,403,26],[395,12,404,20],[396,10,405,16],[397,8,406,12],[397,9,406,13],[398,8,407,12],[399,8,408,12,"getFirstItemOffset"],[399,26,408,30],[399,28,408,32,"getFirstItemOffset"],[399,29,408,32],[399,34,408,38],[400,10,409,16],[400,17,409,23,"recyclerViewManager"],[400,36,409,42],[400,37,409,43,"firstItemOffset"],[400,52,409,58],[401,8,410,12],[401,9,410,13],[402,8,411,12,"getWindowSize"],[402,21,411,25],[402,23,411,27,"getWindowSize"],[402,24,411,27],[402,29,411,33],[403,10,412,16],[403,17,412,23,"recyclerViewManager"],[403,36,412,42],[403,37,412,43,"getWindowSize"],[403,50,412,56],[403,51,412,57],[403,52,412,58],[404,8,413,12],[404,9,413,13],[405,8,414,12,"getLayout"],[405,17,414,21],[405,19,414,24,"index"],[405,24,414,29],[405,28,414,34],[406,10,415,16],[406,17,415,23,"recyclerViewManager"],[406,36,415,42],[406,37,415,43,"tryGetLayout"],[406,49,415,55],[406,50,415,56,"index"],[406,55,415,61],[406,56,415,62],[407,8,416,12],[407,9,416,13],[408,8,417,12,"getAbsoluteLastScrollOffset"],[408,35,417,39],[408,37,417,41,"getAbsoluteLastScrollOffset"],[408,38,417,41],[408,43,417,47],[409,10,418,16],[409,17,418,23,"recyclerViewManager"],[409,36,418,42],[409,37,418,43,"getAbsoluteLastScrollOffset"],[409,64,418,70],[409,65,418,71],[409,66,418,72],[410,8,419,12],[410,9,419,13],[411,8,420,12,"getChildContainerDimensions"],[411,35,420,39],[411,37,420,41,"getChildContainerDimensions"],[411,38,420,41],[411,43,420,47],[412,10,421,16],[412,17,421,23,"recyclerViewManager"],[412,36,421,42],[412,37,421,43,"getChildContainerDimensions"],[412,64,421,70],[412,65,421,71],[412,66,421,72],[413,8,422,12],[413,9,422,13],[414,8,423,12,"recordInteraction"],[414,25,423,29],[414,27,423,31,"recordInteraction"],[414,28,423,31],[414,33,423,37],[415,10,424,16,"recyclerViewManager"],[415,29,424,35],[415,30,424,36,"recordInteraction"],[415,47,424,53],[415,48,424,54],[415,49,424,55],[416,8,425,12],[416,9,425,13],[417,8,426,12,"computeVisibleIndices"],[417,29,426,33],[417,31,426,35,"computeVisibleIndices"],[417,32,426,35],[417,37,426,41],[418,10,427,16],[418,17,427,23,"recyclerViewManager"],[418,36,427,42],[418,37,427,43,"computeVisibleIndices"],[418,58,427,64],[418,59,427,65],[418,60,427,66],[419,8,428,12],[419,9,428,13],[420,8,429,12,"getFirstVisibleIndex"],[420,28,429,32],[420,30,429,34,"getFirstVisibleIndex"],[420,31,429,34],[420,36,429,40],[421,10,430,16],[421,17,430,23,"recyclerViewManager"],[421,36,430,42],[421,37,430,43,"computeVisibleIndices"],[421,58,430,64],[421,59,430,65],[421,60,430,66],[421,61,430,67,"startIndex"],[421,71,430,77],[422,8,431,12],[422,9,431,13],[423,8,432,12,"recomputeViewableItems"],[423,30,432,34],[423,32,432,36,"recomputeViewableItems"],[423,33,432,36],[423,38,432,42],[424,10,433,16,"recyclerViewManager"],[424,29,433,35],[424,30,433,36,"recomputeViewableItems"],[424,52,433,58],[424,53,433,59],[424,54,433,60],[425,8,434,12],[425,9,434,13],[426,8,435,12],[427,0,436,0],[428,0,437,0],[429,8,438,12,"prepareForLayoutAnimationRender"],[429,39,438,43],[429,41,438,45,"prepareForLayoutAnimationRender"],[429,42,438,45],[429,47,438,51],[430,10,439,16],[430,14,439,20],[430,15,439,21,"recyclerViewManager"],[430,34,439,40],[430,35,439,41,"props"],[430,40,439,46],[430,41,439,47,"keyExtractor"],[430,53,439,59],[430,55,439,61],[431,12,440,20,"console"],[431,19,440,27],[431,20,440,28,"warn"],[431,24,440,32],[431,25,440,33,"WarningMessages"],[431,47,440,48],[431,48,440,48,"WarningMessages"],[431,63,440,48],[431,64,440,49,"keyExtractorNotDefinedForAnimation"],[431,98,440,83],[431,99,440,84],[432,10,441,16],[433,10,442,16,"recyclerViewManager"],[433,29,442,35],[433,30,442,36,"animationOptimizationsEnabled"],[433,59,442,65],[433,62,442,68],[433,66,442,72],[434,8,443,12],[435,6,444,8],[435,7,444,9],[436,4,445,4],[436,5,445,5],[436,7,445,7],[436,8,446,8,"recyclerViewManager"],[436,27,446,27],[436,29,447,8,"scrollViewRef"],[436,42,447,21],[436,44,448,8,"setTimeout"],[436,54,448,18],[436,56,449,8,"isUnmounted"],[436,67,449,19],[436,69,450,8,"updateScrollOffsetWithCallback"],[436,99,450,38],[436,100,451,5],[436,101,451,6],[437,4,452,4],[437,10,452,10,"applyInitialScrollIndex"],[437,33,452,33],[437,36,452,36],[437,40,452,36,"useCallback"],[437,46,452,47],[437,47,452,47,"useCallback"],[437,58,452,47],[437,60,452,48],[437,66,452,54],[438,6,453,8],[438,10,453,12,"_a"],[438,12,453,14],[438,14,453,16,"_b"],[438,16,453,18],[438,18,453,20,"_c"],[438,20,453,22],[439,6,454,8],[439,12,454,14],[440,8,454,16,"horizontal"],[440,18,454,26],[441,8,454,28,"data"],[441,12,454,32],[442,8,454,34,"initialScrollIndexParams"],[443,6,454,59],[443,7,454,60],[443,10,454,63,"recyclerViewManager"],[443,29,454,82],[443,30,454,83,"props"],[443,35,454,88],[444,6,455,8],[444,12,455,14,"initialScrollIndex"],[444,30,455,32],[444,33,455,35],[444,34,455,36,"_a"],[444,36,455,38],[444,39,455,41,"recyclerViewManager"],[444,58,455,60],[444,59,455,61,"getInitialScrollIndex"],[444,80,455,82],[444,81,455,83],[444,82,455,84],[444,88,455,90],[444,92,455,94],[444,96,455,98,"_a"],[444,98,455,100],[444,103,455,105],[444,108,455,110],[444,109,455,111],[444,112,455,114,"_a"],[444,114,455,116],[444,117,455,119],[444,118,455,120],[444,119,455,121],[445,6,456,8],[445,12,456,14,"dataLength"],[445,22,456,24],[445,25,456,27],[445,26,456,28,"_b"],[445,28,456,30],[445,31,456,33,"data"],[445,35,456,37],[445,40,456,42],[445,44,456,46],[445,48,456,50,"data"],[445,52,456,54],[445,57,456,59],[445,62,456,64],[445,63,456,65],[445,66,456,68],[445,71,456,73],[445,72,456,74],[445,75,456,77,"data"],[445,79,456,81],[445,80,456,82,"length"],[445,86,456,88],[445,92,456,94],[445,96,456,98],[445,100,456,102,"_b"],[445,102,456,104],[445,107,456,109],[445,112,456,114],[445,113,456,115],[445,116,456,118,"_b"],[445,118,456,120],[445,121,456,123],[445,122,456,124],[446,6,457,8],[446,10,457,12,"initialScrollIndex"],[446,28,457,30],[446,32,457,34],[446,33,457,35],[446,37,458,12,"initialScrollIndex"],[446,55,458,30],[446,58,458,33,"dataLength"],[446,68,458,43],[446,72,459,12],[446,73,459,13,"initialScrollCompletedRef"],[446,98,459,38],[446,99,459,39,"current"],[446,106,459,46],[446,110,460,12,"recyclerViewManager"],[446,129,460,31],[446,130,460,32,"getIsFirstLayoutComplete"],[446,154,460,56],[446,155,460,57],[446,156,460,58],[446,158,460,60],[447,8,461,12],[448,8,462,12,"setTimeout"],[448,18,462,22],[448,19,462,23],[448,25,462,29],[449,10,463,16,"initialScrollCompletedRef"],[449,35,463,41],[449,36,463,42,"current"],[449,43,463,49],[449,46,463,52],[449,50,463,56],[450,10,464,16,"pauseOffsetCorrection"],[450,31,464,37],[450,32,464,38,"current"],[450,39,464,45],[450,42,464,48],[450,47,464,53],[451,8,465,12],[451,9,465,13],[451,11,465,15],[451,14,465,18],[451,15,465,19],[452,8,466,12,"pauseOffsetCorrection"],[452,29,466,33],[452,30,466,34,"current"],[452,37,466,41],[452,40,466,44],[452,44,466,48],[453,8,467,12],[453,14,467,18,"additionalOffset"],[453,30,467,34],[453,33,467,37],[453,34,467,38,"_c"],[453,36,467,40],[453,39,467,43,"initialScrollIndexParams"],[453,63,467,67],[453,68,467,72],[453,72,467,76],[453,76,467,80,"initialScrollIndexParams"],[453,100,467,104],[453,105,467,109],[453,110,467,114],[453,111,467,115],[453,114,467,118],[453,119,467,123],[453,120,467,124],[453,123,467,127,"initialScrollIndexParams"],[453,147,467,151],[453,148,467,152,"viewOffset"],[453,158,467,162],[453,164,467,168],[453,168,467,172],[453,172,467,176,"_c"],[453,174,467,178],[453,179,467,183],[453,184,467,188],[453,185,467,189],[453,188,467,192,"_c"],[453,190,467,194],[453,193,467,197],[453,194,467,198],[454,8,468,12],[454,14,468,18,"offset"],[454,20,468,24],[454,23,468,27,"horizontal"],[454,33,468,37],[454,36,469,18,"recyclerViewManager"],[454,55,469,37],[454,56,469,38,"getLayout"],[454,65,469,47],[454,66,469,48,"initialScrollIndex"],[454,84,469,66],[454,85,469,67],[454,86,469,68,"x"],[454,87,469,69],[454,90,469,72,"additionalOffset"],[454,106,469,88],[454,109,470,18,"recyclerViewManager"],[454,128,470,37],[454,129,470,38,"getLayout"],[454,138,470,47],[454,139,470,48,"initialScrollIndex"],[454,157,470,66],[454,158,470,67],[454,159,470,68,"y"],[454,160,470,69],[454,163,471,20,"additionalOffset"],[454,179,471,36],[455,8,472,12,"handlerMethods"],[455,22,472,26],[455,23,472,27,"scrollToOffset"],[455,37,472,41],[455,38,472,42],[456,10,473,16,"offset"],[456,16,473,22],[457,10,474,16,"animated"],[457,18,474,24],[457,20,474,26],[457,25,474,31],[458,10,475,16,"skipFirstItemOffset"],[458,29,475,35],[458,31,475,37],[459,8,476,12],[459,9,476,13],[459,10,476,14],[460,8,477,12,"setTimeout"],[460,18,477,22],[460,19,477,23],[460,25,477,29],[461,10,478,16,"handlerMethods"],[461,24,478,30],[461,25,478,31,"scrollToOffset"],[461,39,478,45],[461,40,478,46],[462,12,479,20,"offset"],[462,18,479,26],[463,12,480,20,"animated"],[463,20,480,28],[463,22,480,30],[463,27,480,35],[464,12,481,20,"skipFirstItemOffset"],[464,31,481,39],[464,33,481,41],[465,10,482,16],[465,11,482,17],[465,12,482,18],[466,8,483,12],[466,9,483,13],[466,11,483,15],[466,12,483,16],[466,13,483,17],[467,6,484,8],[468,4,485,4],[468,5,485,5],[468,7,485,7],[468,8,485,8,"handlerMethods"],[468,22,485,22],[468,24,485,24,"recyclerViewManager"],[468,43,485,43],[468,45,485,45,"setTimeout"],[468,55,485,55],[468,56,485,56],[468,57,485,57],[469,4,486,4],[470,4,487,4],[470,8,487,4,"useImperativeHandle"],[470,14,487,23],[470,15,487,23,"useImperativeHandle"],[470,34,487,23],[470,36,487,24,"ref"],[470,39,487,27],[470,41,487,29],[470,47,487,35],[471,6,488,8],[471,12,488,14,"imperativeApi"],[471,25,488,27],[471,28,488,27,"Object"],[471,34,488,27],[471,35,488,27,"assign"],[471,41,488,27],[471,46,488,35,"scrollViewRef"],[471,59,488,48],[471,60,488,49,"current"],[471,67,488,56],[471,69,488,61,"handlerMethods"],[471,83,488,75],[471,84,488,77],[472,6,489,8],[473,6,490,8],[474,6,491,8,"Object"],[474,12,491,14],[474,13,491,15,"defineProperty"],[474,27,491,29],[474,28,491,30,"imperativeApi"],[474,41,491,43],[474,43,491,45],[474,50,491,52],[474,52,491,54],[475,8,492,12,"get"],[475,11,492,15,"get"],[475,12,492,15],[475,14,492,18],[476,10,493,16],[476,17,493,23,"recyclerViewManager"],[476,36,493,42],[476,37,493,43,"props"],[476,42,493,48],[477,8,494,12],[477,9,494,13],[478,8,495,12,"enumerable"],[478,18,495,22],[478,20,495,24],[478,24,495,28],[479,8,496,12,"configurable"],[479,20,496,24],[479,22,496,26],[480,6,497,8],[480,7,497,9],[480,8,497,10],[481,6,498,8],[481,13,498,15,"imperativeApi"],[481,26,498,28],[482,4,499,4],[482,5,499,5],[482,7,499,7],[482,8,499,8,"handlerMethods"],[482,22,499,22],[482,24,499,24,"scrollViewRef"],[482,37,499,37],[482,39,499,39,"recyclerViewManager"],[482,58,499,58],[482,59,499,59],[482,60,499,60],[483,4,500,4],[483,11,500,11],[484,6,501,8,"applyOffsetCorrection"],[484,27,501,29],[485,6,502,8,"computeFirstVisibleIndexForOffsetCorrection"],[485,49,502,51],[486,6,503,8,"applyInitialScrollIndex"],[486,29,503,31],[487,6,504,8,"handlerMethods"],[488,4,505,4],[488,5,505,5],[489,2,506,0],[490,0,506,1],[490,3]],"functionMap":{"names":["<global>","useRecyclerViewController","updateScrollOffsetWithCallback","setRenderId$argument_0","computeFirstVisibleIndexForOffsetCorrection","applyOffsetCorrection","callbacks.forEach$argument_0","recyclerViewManager.getEngagedIndices.findValue$argument_0","data.findIndex$argument_0","updateScrollOffsetWithCallback$argument_1","setTimeout$argument_0","useMemo$argument_0","get__props","scrollToOffset","clearLayoutCacheOnUpdate","flashScrollIndicators","getNativeScrollRef","getScrollResponder","getScrollableNode","scrollToEnd","scrollToTop","scrollToIndex","Promise$argument_0","getFinalOffset","getStartScrollOffset","performScrollStep","finishScrollToIndex","scrollToItem","getFirstItemOffset","getWindowSize","getLayout","getAbsoluteLastScrollOffset","getChildContainerDimensions","recordInteraction","computeVisibleIndices","getFirstVisibleIndex","recomputeViewableItems","prepareForLayoutAnimationRender","applyInitialScrollIndex","useImperativeHandle$argument_1","Object.defineProperty$argument_2.get"],"mappings":"AAA;OCuB;uDCsB;wBCO,kBD;KDM;oEGC;KHe;8CIM;0BCO,wBD;+BEW;+CFC;iFGC;mDHC;qHIkC,SJ;uCKE;6BLE;KJQ;mCUQ;YCE;aDE;4BEK;aFuB;sCGC;aHE;mCIE;aJE;gCKC;aLE;gCMC;aNE;+BOC;aPE;yBQI;2BTW;iBSG;aRC;yBSI;aTK;2BUM;mCCC;+CCQ;yBDoB;qDEM;yBFY;kDGY;uEhBsB;6BgByB;yBHC;oDIK;uChBuB;6BgBI;yBJC;iBDQ;aVC;0BgBK;iDnBI,+BmB;ahBU;gCiBE;ajBE;2BkBC;alBE;uBmBC;anBE;yCoBC;apBE;yCqBC;arBE;+BsBC;atBE;mCuBC;avBE;kCwBC;axBE;oCyBC;azBE;6C0BI;a1BK;KVE;gDqCO;uB5BU;a4BG;uB5BY;a4BM;KrCE;6BsCE;YCK;aDE;KtCK;CDO"},"hasCjsExports":false},"type":"js/module"}]}