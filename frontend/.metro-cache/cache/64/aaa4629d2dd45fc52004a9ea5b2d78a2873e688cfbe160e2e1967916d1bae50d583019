{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../errors/ErrorMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":66},"end":{"line":2,"column":56,"index":122}}],"key":"APtQ1ObkEMvvpKEHNjwmitGcEgw=","exportNames":["*"],"imports":1}},{"name":"./AutoScrollHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":123},"end":{"line":3,"column":61,"index":184}}],"key":"8b2Un17cKJbKjGV1aP0f1Eq0sdY=","exportNames":["*"],"imports":1}},{"name":"./JSFPSMonitor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":185},"end":{"line":4,"column":46,"index":231}}],"key":"16UxQEN3nxR/Q7ECgVw5SabPs0g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useBenchmark = useBenchmark;\n  exports.getFormattedString = getFormattedString;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _errorsErrorMessages = require(_dependencyMap[1], \"../errors/ErrorMessages\");\n  var _AutoScrollHelper = require(_dependencyMap[2], \"./AutoScrollHelper\");\n  var _JSFPSMonitor = require(_dependencyMap[3], \"./JSFPSMonitor\");\n  /**\n   * Runs the benchmark on FlashList.\n   * Response object has a formatted string that can be printed to the console or shown as an alert.\n   * Result is posted to the callback method passed to the hook.\n   */\n  function useBenchmark(flashListRef, callback, params = {}) {\n    const [isBenchmarkRunning, setIsBenchmarkRunning] = (0, _react.useState)(false);\n    const cancellableRef = (0, _react.useRef)(null);\n    const startBenchmark = (0, _react.useCallback)(() => {\n      var _a;\n      if (isBenchmarkRunning) {\n        return;\n      }\n      const cancellable = new _AutoScrollHelper.Cancellable();\n      cancellableRef.current = cancellable;\n      const suggestions = [];\n      if (flashListRef.current) {\n        if (!(Number((_a = flashListRef.current.props.data) === null || _a === void 0 ? void 0 : _a.length) > 0)) {\n          throw new Error(_errorsErrorMessages.ErrorMessages.dataEmptyCannotRunBenchmark);\n        }\n      }\n      setIsBenchmarkRunning(true);\n      const runBenchmark = async () => {\n        const jsFPSMonitor = new _JSFPSMonitor.JSFPSMonitor();\n        jsFPSMonitor.startTracking();\n        for (let i = 0; i < (params.repeatCount || 1); i++) {\n          await runScrollBenchmark(flashListRef, cancellable, params.speedMultiplier || 1);\n        }\n        const jsProfilerResponse = jsFPSMonitor.stopAndGetData();\n        if (jsProfilerResponse.averageFPS < 35) {\n          suggestions.push(`Your average JS FPS is low. This can indicate that your components are doing too much work. Try to optimize your components and reduce re-renders if any`);\n        }\n        computeSuggestions(flashListRef, suggestions);\n        const result = generateResult(jsProfilerResponse, suggestions, cancellable);\n        if (!cancellable.isCancelled()) {\n          result.formattedString = getFormattedString(result);\n        }\n        callback(result);\n        setIsBenchmarkRunning(false);\n      };\n      runBenchmark();\n    }, [callback, flashListRef, isBenchmarkRunning, params.repeatCount, params.speedMultiplier]);\n    (0, _react.useEffect)(() => {\n      if (params.startManually) {\n        return;\n      }\n      const cancelTimeout = setTimeout(() => {\n        startBenchmark();\n      }, params.startDelayInMs || 3000);\n      return () => {\n        clearTimeout(cancelTimeout);\n        if (cancellableRef.current) {\n          cancellableRef.current.cancel();\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return {\n      startBenchmark,\n      isBenchmarkRunning\n    };\n  }\n  function getFormattedString(res) {\n    var _a, _b, _c;\n    return `Results:\\n\\n` + `JS FPS: Avg: ${(_a = res.js) === null || _a === void 0 ? void 0 : _a.averageFPS} | Min: ${(_b = res.js) === null || _b === void 0 ? void 0 : _b.minFPS} | Max: ${(_c = res.js) === null || _c === void 0 ? void 0 : _c.maxFPS}\\n\\n` + `${res.suggestions.length > 0 ? `Suggestions:\\n\\n${res.suggestions.map((value, index) => `${index + 1}. ${value}`).join(\"\\n\")}` : ``}`;\n  }\n  function generateResult(jsProfilerResponse, suggestions, cancellable) {\n    return {\n      js: jsProfilerResponse,\n      suggestions,\n      interrupted: cancellable.isCancelled()\n    };\n  }\n  /**\n   * Scrolls to the end of the list and then back to the top\n   */\n  async function runScrollBenchmark(flashListRef, cancellable, scrollSpeedMultiplier) {\n    if (flashListRef.current) {\n      const horizontal = flashListRef.current.props.horizontal;\n      const rv = flashListRef.current;\n      if (rv) {\n        const rvSize = rv.getWindowSize();\n        const rvContentSize = rv.getChildContainerDimensions();\n        const fromX = 0;\n        const fromY = 0;\n        const toX = rvContentSize.width - rvSize.width;\n        const toY = rvContentSize.height - rvSize.height;\n        const scrollNow = (x, y) => {\n          var _a;\n          (_a = flashListRef.current) === null || _a === void 0 ? void 0 : _a.scrollToOffset({\n            offset: horizontal ? x : y,\n            animated: false\n          });\n        };\n        await (0, _AutoScrollHelper.autoScroll)(scrollNow, fromX, fromY, toX, toY, scrollSpeedMultiplier, cancellable);\n        await (0, _AutoScrollHelper.autoScroll)(scrollNow, toX, toY, fromX, fromY, scrollSpeedMultiplier, cancellable);\n      }\n    }\n  }\n  function computeSuggestions(flashListRef, suggestions) {\n    if (flashListRef.current) {\n      if (flashListRef.current.props.data.length < 200) {\n        suggestions.push(`Data count is low. Try to increase it to a large number (e.g 200) using the 'useDataMultiplier' hook.`);\n      }\n    }\n  }\n});","lineCount":119,"map":[[7,2,10,0,"exports"],[7,9,10,0],[7,10,10,0,"useBenchmark"],[7,22,10,0],[7,25,10,0,"useBenchmark"],[7,37,10,0],[8,2,70,0,"exports"],[8,9,70,0],[8,10,70,0,"getFormattedString"],[8,28,70,0],[8,31,70,0,"getFormattedString"],[8,49,70,0],[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,2,0],[10,6,2,0,"_errorsErrorMessages"],[10,26,2,0],[10,29,2,0,"require"],[10,36,2,0],[10,37,2,0,"_dependencyMap"],[10,51,2,0],[11,2,3,0],[11,6,3,0,"_AutoScrollHelper"],[11,23,3,0],[11,26,3,0,"require"],[11,33,3,0],[11,34,3,0,"_dependencyMap"],[11,48,3,0],[12,2,4,0],[12,6,4,0,"_JSFPSMonitor"],[12,19,4,0],[12,22,4,0,"require"],[12,29,4,0],[12,30,4,0,"_dependencyMap"],[12,44,4,0],[13,2,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,2,10,7],[18,11,10,16,"useBenchmark"],[18,23,10,28,"useBenchmark"],[18,24,10,29,"flashListRef"],[18,36,10,41],[18,38,10,43,"callback"],[18,46,10,51],[18,48,10,53,"params"],[18,54,10,59],[18,57,10,62],[18,58,10,63],[18,59,10,64],[18,61,10,66],[19,4,11,4],[19,10,11,10],[19,11,11,11,"isBenchmarkRunning"],[19,29,11,29],[19,31,11,31,"setIsBenchmarkRunning"],[19,52,11,52],[19,53,11,53],[19,56,11,56],[19,60,11,56,"useState"],[19,66,11,64],[19,67,11,64,"useState"],[19,75,11,64],[19,77,11,65],[19,82,11,70],[19,83,11,71],[20,4,12,4],[20,10,12,10,"cancellableRef"],[20,24,12,24],[20,27,12,27],[20,31,12,27,"useRef"],[20,37,12,33],[20,38,12,33,"useRef"],[20,44,12,33],[20,46,12,34],[20,50,12,38],[20,51,12,39],[21,4,13,4],[21,10,13,10,"startBenchmark"],[21,24,13,24],[21,27,13,27],[21,31,13,27,"useCallback"],[21,37,13,38],[21,38,13,38,"useCallback"],[21,49,13,38],[21,51,13,39],[21,57,13,45],[22,6,14,8],[22,10,14,12,"_a"],[22,12,14,14],[23,6,15,8],[23,10,15,12,"isBenchmarkRunning"],[23,28,15,30],[23,30,15,32],[24,8,16,12],[25,6,17,8],[26,6,18,8],[26,12,18,14,"cancellable"],[26,23,18,25],[26,26,18,28],[26,30,18,32,"Cancellable"],[26,47,18,43],[26,48,18,43,"Cancellable"],[26,59,18,43],[26,60,18,44],[26,61,18,45],[27,6,19,8,"cancellableRef"],[27,20,19,22],[27,21,19,23,"current"],[27,28,19,30],[27,31,19,33,"cancellable"],[27,42,19,44],[28,6,20,8],[28,12,20,14,"suggestions"],[28,23,20,25],[28,26,20,28],[28,28,20,30],[29,6,21,8],[29,10,21,12,"flashListRef"],[29,22,21,24],[29,23,21,25,"current"],[29,30,21,32],[29,32,21,34],[30,8,22,12],[30,12,22,16],[30,14,22,18,"Number"],[30,20,22,24],[30,21,22,25],[30,22,22,26,"_a"],[30,24,22,28],[30,27,22,31,"flashListRef"],[30,39,22,43],[30,40,22,44,"current"],[30,47,22,51],[30,48,22,52,"props"],[30,53,22,57],[30,54,22,58,"data"],[30,58,22,62],[30,64,22,68],[30,68,22,72],[30,72,22,76,"_a"],[30,74,22,78],[30,79,22,83],[30,84,22,88],[30,85,22,89],[30,88,22,92],[30,93,22,97],[30,94,22,98],[30,97,22,101,"_a"],[30,99,22,103],[30,100,22,104,"length"],[30,106,22,110],[30,107,22,111],[30,110,22,114],[30,111,22,115],[30,112,22,116],[30,114,22,118],[31,10,23,16],[31,16,23,22],[31,20,23,26,"Error"],[31,25,23,31],[31,26,23,32,"ErrorMessages"],[31,46,23,45],[31,47,23,45,"ErrorMessages"],[31,60,23,45],[31,61,23,46,"dataEmptyCannotRunBenchmark"],[31,88,23,73],[31,89,23,74],[32,8,24,12],[33,6,25,8],[34,6,26,8,"setIsBenchmarkRunning"],[34,27,26,29],[34,28,26,30],[34,32,26,34],[34,33,26,35],[35,6,27,8],[35,12,27,14,"runBenchmark"],[35,24,27,26],[35,27,27,29],[35,33,27,29,"runBenchmark"],[35,34,27,29],[35,39,27,41],[36,8,28,12],[36,14,28,18,"jsFPSMonitor"],[36,26,28,30],[36,29,28,33],[36,33,28,37,"JSFPSMonitor"],[36,46,28,49],[36,47,28,49,"JSFPSMonitor"],[36,59,28,49],[36,60,28,50],[36,61,28,51],[37,8,29,12,"jsFPSMonitor"],[37,20,29,24],[37,21,29,25,"startTracking"],[37,34,29,38],[37,35,29,39],[37,36,29,40],[38,8,30,12],[38,13,30,17],[38,17,30,21,"i"],[38,18,30,22],[38,21,30,25],[38,22,30,26],[38,24,30,28,"i"],[38,25,30,29],[38,29,30,33,"params"],[38,35,30,39],[38,36,30,40,"repeatCount"],[38,47,30,51],[38,51,30,55],[38,52,30,56],[38,53,30,57],[38,55,30,59,"i"],[38,56,30,60],[38,58,30,62],[38,60,30,64],[39,10,31,16],[39,16,31,22,"runScrollBenchmark"],[39,34,31,40],[39,35,31,41,"flashListRef"],[39,47,31,53],[39,49,31,55,"cancellable"],[39,60,31,66],[39,62,31,68,"params"],[39,68,31,74],[39,69,31,75,"speedMultiplier"],[39,84,31,90],[39,88,31,94],[39,89,31,95],[39,90,31,96],[40,8,32,12],[41,8,33,12],[41,14,33,18,"jsProfilerResponse"],[41,32,33,36],[41,35,33,39,"jsFPSMonitor"],[41,47,33,51],[41,48,33,52,"stopAndGetData"],[41,62,33,66],[41,63,33,67],[41,64,33,68],[42,8,34,12],[42,12,34,16,"jsProfilerResponse"],[42,30,34,34],[42,31,34,35,"averageFPS"],[42,41,34,45],[42,44,34,48],[42,46,34,50],[42,48,34,52],[43,10,35,16,"suggestions"],[43,21,35,27],[43,22,35,28,"push"],[43,26,35,32],[43,27,35,33],[43,181,35,187],[43,182,35,188],[44,8,36,12],[45,8,37,12,"computeSuggestions"],[45,26,37,30],[45,27,37,31,"flashListRef"],[45,39,37,43],[45,41,37,45,"suggestions"],[45,52,37,56],[45,53,37,57],[46,8,38,12],[46,14,38,18,"result"],[46,20,38,24],[46,23,38,27,"generateResult"],[46,37,38,41],[46,38,38,42,"jsProfilerResponse"],[46,56,38,60],[46,58,38,62,"suggestions"],[46,69,38,73],[46,71,38,75,"cancellable"],[46,82,38,86],[46,83,38,87],[47,8,39,12],[47,12,39,16],[47,13,39,17,"cancellable"],[47,24,39,28],[47,25,39,29,"isCancelled"],[47,36,39,40],[47,37,39,41],[47,38,39,42],[47,40,39,44],[48,10,40,16,"result"],[48,16,40,22],[48,17,40,23,"formattedString"],[48,32,40,38],[48,35,40,41,"getFormattedString"],[48,53,40,59],[48,54,40,60,"result"],[48,60,40,66],[48,61,40,67],[49,8,41,12],[50,8,42,12,"callback"],[50,16,42,20],[50,17,42,21,"result"],[50,23,42,27],[50,24,42,28],[51,8,43,12,"setIsBenchmarkRunning"],[51,29,43,33],[51,30,43,34],[51,35,43,39],[51,36,43,40],[52,6,44,8],[52,7,44,9],[53,6,45,8,"runBenchmark"],[53,18,45,20],[53,19,45,21],[53,20,45,22],[54,4,46,4],[54,5,46,5],[54,7,46,7],[54,8,47,8,"callback"],[54,16,47,16],[54,18,48,8,"flashListRef"],[54,30,48,20],[54,32,49,8,"isBenchmarkRunning"],[54,50,49,26],[54,52,50,8,"params"],[54,58,50,14],[54,59,50,15,"repeatCount"],[54,70,50,26],[54,72,51,8,"params"],[54,78,51,14],[54,79,51,15,"speedMultiplier"],[54,94,51,30],[54,95,52,5],[54,96,52,6],[55,4,53,4],[55,8,53,4,"useEffect"],[55,14,53,13],[55,15,53,13,"useEffect"],[55,24,53,13],[55,26,53,14],[55,32,53,20],[56,6,54,8],[56,10,54,12,"params"],[56,16,54,18],[56,17,54,19,"startManually"],[56,30,54,32],[56,32,54,34],[57,8,55,12],[58,6,56,8],[59,6,57,8],[59,12,57,14,"cancelTimeout"],[59,25,57,27],[59,28,57,30,"setTimeout"],[59,38,57,40],[59,39,57,41],[59,45,57,47],[60,8,58,12,"startBenchmark"],[60,22,58,26],[60,23,58,27],[60,24,58,28],[61,6,59,8],[61,7,59,9],[61,9,59,11,"params"],[61,15,59,17],[61,16,59,18,"startDelayInMs"],[61,30,59,32],[61,34,59,36],[61,38,59,40],[61,39,59,41],[62,6,60,8],[62,13,60,15],[62,19,60,21],[63,8,61,12,"clearTimeout"],[63,20,61,24],[63,21,61,25,"cancelTimeout"],[63,34,61,38],[63,35,61,39],[64,8,62,12],[64,12,62,16,"cancellableRef"],[64,26,62,30],[64,27,62,31,"current"],[64,34,62,38],[64,36,62,40],[65,10,63,16,"cancellableRef"],[65,24,63,30],[65,25,63,31,"current"],[65,32,63,38],[65,33,63,39,"cancel"],[65,39,63,45],[65,40,63,46],[65,41,63,47],[66,8,64,12],[67,6,65,8],[67,7,65,9],[68,6,66,8],[69,4,67,4],[69,5,67,5],[69,7,67,7],[69,9,67,9],[69,10,67,10],[70,4,68,4],[70,11,68,11],[71,6,68,13,"startBenchmark"],[71,20,68,27],[72,6,68,29,"isBenchmarkRunning"],[73,4,68,48],[73,5,68,49],[74,2,69,0],[75,2,70,7],[75,11,70,16,"getFormattedString"],[75,29,70,34,"getFormattedString"],[75,30,70,35,"res"],[75,33,70,38],[75,35,70,40],[76,4,71,4],[76,8,71,8,"_a"],[76,10,71,10],[76,12,71,12,"_b"],[76,14,71,14],[76,16,71,16,"_c"],[76,18,71,18],[77,4,72,4],[77,11,72,12],[77,25,72,26],[77,28,73,8],[77,44,73,24],[77,45,73,25,"_a"],[77,47,73,27],[77,50,73,30,"res"],[77,53,73,33],[77,54,73,34,"js"],[77,56,73,36],[77,62,73,42],[77,66,73,46],[77,70,73,50,"_a"],[77,72,73,52],[77,77,73,57],[77,82,73,62],[77,83,73,63],[77,86,73,66],[77,91,73,71],[77,92,73,72],[77,95,73,75,"_a"],[77,97,73,77],[77,98,73,78,"averageFPS"],[77,108,73,88],[77,119,73,99],[77,120,73,100,"_b"],[77,122,73,102],[77,125,73,105,"res"],[77,128,73,108],[77,129,73,109,"js"],[77,131,73,111],[77,137,73,117],[77,141,73,121],[77,145,73,125,"_b"],[77,147,73,127],[77,152,73,132],[77,157,73,137],[77,158,73,138],[77,161,73,141],[77,166,73,146],[77,167,73,147],[77,170,73,150,"_b"],[77,172,73,152],[77,173,73,153,"minFPS"],[77,179,73,159],[77,190,73,170],[77,191,73,171,"_c"],[77,193,73,173],[77,196,73,176,"res"],[77,199,73,179],[77,200,73,180,"js"],[77,202,73,182],[77,208,73,188],[77,212,73,192],[77,216,73,196,"_c"],[77,218,73,198],[77,223,73,203],[77,228,73,208],[77,229,73,209],[77,232,73,212],[77,237,73,217],[77,238,73,218],[77,241,73,221,"_c"],[77,243,73,223],[77,244,73,224,"maxFPS"],[77,250,73,230],[77,256,73,236],[77,259,74,8],[77,262,74,11,"res"],[77,265,74,14],[77,266,74,15,"suggestions"],[77,277,74,26],[77,278,74,27,"length"],[77,284,74,33],[77,287,74,36],[77,288,74,37],[77,291,75,14],[77,310,75,33,"res"],[77,313,75,36],[77,314,75,37,"suggestions"],[77,325,75,48],[77,326,76,17,"map"],[77,329,76,20],[77,330,76,21],[77,331,76,22,"value"],[77,336,76,27],[77,338,76,29,"index"],[77,343,76,34],[77,348,76,39],[77,351,76,42,"index"],[77,356,76,47],[77,359,76,50],[77,360,76,51],[77,365,76,56,"value"],[77,370,76,61],[77,372,76,63],[77,373,76,64],[77,374,77,17,"join"],[77,378,77,21],[77,379,77,22],[77,383,77,26],[77,384,77,27],[77,386,77,29],[77,389,78,14],[77,391,78,16],[77,393,78,18],[78,2,79,0],[79,2,80,0],[79,11,80,9,"generateResult"],[79,25,80,23,"generateResult"],[79,26,80,24,"jsProfilerResponse"],[79,44,80,42],[79,46,80,44,"suggestions"],[79,57,80,55],[79,59,80,57,"cancellable"],[79,70,80,68],[79,72,80,70],[80,4,81,4],[80,11,81,11],[81,6,82,8,"js"],[81,8,82,10],[81,10,82,12,"jsProfilerResponse"],[81,28,82,30],[82,6,83,8,"suggestions"],[82,17,83,19],[83,6,84,8,"interrupted"],[83,17,84,19],[83,19,84,21,"cancellable"],[83,30,84,32],[83,31,84,33,"isCancelled"],[83,42,84,44],[83,43,84,45],[84,4,85,4],[84,5,85,5],[85,2,86,0],[86,2,87,0],[87,0,88,0],[88,0,89,0],[89,2,90,0],[89,17,90,15,"runScrollBenchmark"],[89,35,90,33,"runScrollBenchmark"],[89,36,90,34,"flashListRef"],[89,48,90,46],[89,50,90,48,"cancellable"],[89,61,90,59],[89,63,90,61,"scrollSpeedMultiplier"],[89,84,90,82],[89,86,90,84],[90,4,91,4],[90,8,91,8,"flashListRef"],[90,20,91,20],[90,21,91,21,"current"],[90,28,91,28],[90,30,91,30],[91,6,92,8],[91,12,92,14,"horizontal"],[91,22,92,24],[91,25,92,27,"flashListRef"],[91,37,92,39],[91,38,92,40,"current"],[91,45,92,47],[91,46,92,48,"props"],[91,51,92,53],[91,52,92,54,"horizontal"],[91,62,92,64],[92,6,93,8],[92,12,93,14,"rv"],[92,14,93,16],[92,17,93,19,"flashListRef"],[92,29,93,31],[92,30,93,32,"current"],[92,37,93,39],[93,6,94,8],[93,10,94,12,"rv"],[93,12,94,14],[93,14,94,16],[94,8,95,12],[94,14,95,18,"rvSize"],[94,20,95,24],[94,23,95,27,"rv"],[94,25,95,29],[94,26,95,30,"getWindowSize"],[94,39,95,43],[94,40,95,44],[94,41,95,45],[95,8,96,12],[95,14,96,18,"rvContentSize"],[95,27,96,31],[95,30,96,34,"rv"],[95,32,96,36],[95,33,96,37,"getChildContainerDimensions"],[95,60,96,64],[95,61,96,65],[95,62,96,66],[96,8,97,12],[96,14,97,18,"fromX"],[96,19,97,23],[96,22,97,26],[96,23,97,27],[97,8,98,12],[97,14,98,18,"fromY"],[97,19,98,23],[97,22,98,26],[97,23,98,27],[98,8,99,12],[98,14,99,18,"toX"],[98,17,99,21],[98,20,99,24,"rvContentSize"],[98,33,99,37],[98,34,99,38,"width"],[98,39,99,43],[98,42,99,46,"rvSize"],[98,48,99,52],[98,49,99,53,"width"],[98,54,99,58],[99,8,100,12],[99,14,100,18,"toY"],[99,17,100,21],[99,20,100,24,"rvContentSize"],[99,33,100,37],[99,34,100,38,"height"],[99,40,100,44],[99,43,100,47,"rvSize"],[99,49,100,53],[99,50,100,54,"height"],[99,56,100,60],[100,8,101,12],[100,14,101,18,"scrollNow"],[100,23,101,27],[100,26,101,30,"scrollNow"],[100,27,101,31,"x"],[100,28,101,32],[100,30,101,34,"y"],[100,31,101,35],[100,36,101,40],[101,10,102,16],[101,14,102,20,"_a"],[101,16,102,22],[102,10,103,16],[102,11,103,17,"_a"],[102,13,103,19],[102,16,103,22,"flashListRef"],[102,28,103,34],[102,29,103,35,"current"],[102,36,103,42],[102,42,103,48],[102,46,103,52],[102,50,103,56,"_a"],[102,52,103,58],[102,57,103,63],[102,62,103,68],[102,63,103,69],[102,66,103,72],[102,71,103,77],[102,72,103,78],[102,75,103,81,"_a"],[102,77,103,83],[102,78,103,84,"scrollToOffset"],[102,92,103,98],[102,93,103,99],[103,12,104,20,"offset"],[103,18,104,26],[103,20,104,28,"horizontal"],[103,30,104,38],[103,33,104,41,"x"],[103,34,104,42],[103,37,104,45,"y"],[103,38,104,46],[104,12,105,20,"animated"],[104,20,105,28],[104,22,105,30],[105,10,106,16],[105,11,106,17],[105,12,106,18],[106,8,107,12],[106,9,107,13],[107,8,108,12],[107,14,108,18],[107,18,108,18,"autoScroll"],[107,35,108,28],[107,36,108,28,"autoScroll"],[107,46,108,28],[107,48,108,29,"scrollNow"],[107,57,108,38],[107,59,108,40,"fromX"],[107,64,108,45],[107,66,108,47,"fromY"],[107,71,108,52],[107,73,108,54,"toX"],[107,76,108,57],[107,78,108,59,"toY"],[107,81,108,62],[107,83,108,64,"scrollSpeedMultiplier"],[107,104,108,85],[107,106,108,87,"cancellable"],[107,117,108,98],[107,118,108,99],[108,8,109,12],[108,14,109,18],[108,18,109,18,"autoScroll"],[108,35,109,28],[108,36,109,28,"autoScroll"],[108,46,109,28],[108,48,109,29,"scrollNow"],[108,57,109,38],[108,59,109,40,"toX"],[108,62,109,43],[108,64,109,45,"toY"],[108,67,109,48],[108,69,109,50,"fromX"],[108,74,109,55],[108,76,109,57,"fromY"],[108,81,109,62],[108,83,109,64,"scrollSpeedMultiplier"],[108,104,109,85],[108,106,109,87,"cancellable"],[108,117,109,98],[108,118,109,99],[109,6,110,8],[110,4,111,4],[111,2,112,0],[112,2,113,0],[112,11,113,9,"computeSuggestions"],[112,29,113,27,"computeSuggestions"],[112,30,113,28,"flashListRef"],[112,42,113,40],[112,44,113,42,"suggestions"],[112,55,113,53],[112,57,113,55],[113,4,114,4],[113,8,114,8,"flashListRef"],[113,20,114,20],[113,21,114,21,"current"],[113,28,114,28],[113,30,114,30],[114,6,115,8],[114,10,115,12,"flashListRef"],[114,22,115,24],[114,23,115,25,"current"],[114,30,115,32],[114,31,115,33,"props"],[114,36,115,38],[114,37,115,39,"data"],[114,41,115,43],[114,42,115,44,"length"],[114,48,115,50],[114,51,115,53],[114,54,115,56],[114,56,115,58],[115,8,116,12,"suggestions"],[115,19,116,23],[115,20,116,24,"push"],[115,24,116,28],[115,25,116,29],[115,128,116,132],[115,129,116,133],[116,6,117,8],[117,4,118,4],[118,2,119,0],[119,0,119,1],[119,3]],"functionMap":{"names":["<global>","useBenchmark","startBenchmark","runBenchmark","useEffect$argument_0","setTimeout$argument_0","<anonymous>","getFormattedString","res.suggestions.map$argument_0","generateResult","runScrollBenchmark","scrollNow","computeSuggestions"],"mappings":"AAA;OCS;uCCG;6BCc;SDiB;KDE;cGO;yCCI;SDE;eEC;SFK;KHE;CDE;OOC;qBCM,0CD;CPG;ASC;CTM;AUI;8BCW;aDM;CVK;AYC;CZM"},"hasCjsExports":false},"type":"js/module"}]}