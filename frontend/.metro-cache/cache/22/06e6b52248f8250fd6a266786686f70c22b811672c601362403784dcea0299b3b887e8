{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":300},"end":{"line":8,"column":52,"index":335}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":353},"end":{"line":9,"column":32,"index":369}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./NativeTabsTriggerTabBar","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":34,"index":405},"end":{"line":10,"column":70,"index":441}}],"key":"WVwnFVa4tbZlC8q45AzhMA62QpY=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":459},"end":{"line":11,"column":34,"index":477}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../../link/preview/PreviewRouteContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":30,"index":509},"end":{"line":12,"column":79,"index":558}}],"key":"RjOiGG3bmFq3DQhcV/pBDiHQb00=","exportNames":["*"],"imports":1}},{"name":"../../views/useSafeLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":30,"index":590},"end":{"line":13,"column":72,"index":632}}],"key":"+Bqbcz5xwcnBwCK/TVf05V4tLZ8=","exportNames":["*"],"imports":1}},{"name":"../common/elements","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":653},"end":{"line":14,"column":48,"index":682}}],"key":"1RFkZDeCNqyJBPS3jQJ086fMimI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeTabTrigger = void 0;\n  exports.convertTabPropsToOptions = convertTabPropsToOptions;\n  exports.appendIconOptions = appendIconOptions;\n  exports.isNativeTabTrigger = isNativeTabTrigger;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = require(_dependencyMap[1], \"react\");\n  const NativeTabsTriggerTabBar_1 = require(_dependencyMap[2], \"./NativeTabsTriggerTabBar\");\n  const utils_1 = require(_dependencyMap[3], \"./utils\");\n  const PreviewRouteContext_1 = require(_dependencyMap[4], \"../../link/preview/PreviewRouteContext\");\n  const useSafeLayoutEffect_1 = require(_dependencyMap[5], \"../../views/useSafeLayoutEffect\");\n  const elements_1 = require(_dependencyMap[6], \"../common/elements\");\n  /**\n   * The component used to customize the native tab options both in the _layout file and from the tab screen.\n   *\n   * When used in the _layout file, you need to provide a `name` prop.\n   * When used in the tab screen, the `name` prop takes no effect.\n   *\n   * @example\n   * ```tsx\n   * // In _layout file\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function Layout() {\n   *   return (\n   *     <NativeTabs>\n   *       <NativeTabs.Trigger name=\"home\" />\n   *       <NativeTabs.Trigger name=\"settings\" />\n   *     </NativeTabs>\n   *   );\n   * }\n   * ```\n   *\n   * @example\n   * ```tsx\n   * // In a tab screen\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function HomeScreen() {\n   *   return (\n   *     <View>\n   *       <NativeTabs.Trigger>\n   *         <Label>Home</Label>\n   *       </NativeTabs.Trigger>\n   *       <Text>This is home screen!</Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * > **Note:** You can use the alias `NativeTabs.Trigger` for this component.\n   */\n  function NativeTabTriggerImpl(props) {\n    const route = (0, native_1.useRoute)();\n    const navigation = (0, native_1.useNavigation)();\n    const isFocused = navigation.isFocused();\n    const isInPreview = (0, PreviewRouteContext_1.useIsPreview)();\n    (0, useSafeLayoutEffect_1.useSafeLayoutEffect)(() => {\n      // This will cause the tab to update only when it is focused.\n      // As long as all tabs are loaded at the start, we don't need this check.\n      // It is here to ensure similar behavior to stack\n      if (isFocused && !isInPreview) {\n        if (navigation.getState()?.type !== 'tab') {\n          throw new Error(`Trigger component can only be used in the tab screen. Current route: ${route.name}`);\n        }\n        const options = convertTabPropsToOptions(props, true);\n        navigation.setOptions(options);\n      }\n    }, [isFocused, props, isInPreview]);\n    return null;\n  }\n  exports.NativeTabTrigger = Object.assign(NativeTabTriggerImpl, {\n    TabBar: NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar\n  });\n  function convertTabPropsToOptions({\n    options,\n    hidden,\n    children,\n    role,\n    disablePopToTop,\n    disableScrollToTop\n  }, isDynamic = false) {\n    const initialOptions = isDynamic ? {\n      ...options\n    } : {\n      ...options,\n      hidden: !!hidden,\n      specialEffects: {\n        repeatedTabSelection: {\n          popToRoot: !disablePopToTop,\n          scrollToTop: !disableScrollToTop\n        }\n      },\n      role: role ?? options?.role\n    };\n    const allowedChildren = (0, utils_1.filterAllowedChildrenElements)(children, [elements_1.Badge, elements_1.Label, elements_1.Icon, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar]);\n    return allowedChildren.reduce((acc, child) => {\n      if ((0, utils_1.isChildOfType)(child, elements_1.Badge)) {\n        appendBadgeOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Label)) {\n        appendLabelOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Icon)) {\n        appendIconOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar)) {\n        appendTabBarOptions(acc, child.props);\n      }\n      return acc;\n    }, {\n      ...initialOptions\n    });\n  }\n  function appendBadgeOptions(options, props) {\n    if (props.children) {\n      options.badgeValue = String(props.children);\n      options.selectedBadgeBackgroundColor = props.selectedBackgroundColor;\n    } else if (!props.hidden) {\n      // If no value is provided, we set it to a space to show the badge\n      // Otherwise, the `react-native-screens` will interpret it as a hidden badge\n      // https://github.com/software-mansion/react-native-screens/blob/b4358fd95dd0736fc54df6bb97f210dc89edf24c/ios/bottom-tabs/RNSBottomTabsScreenComponentView.mm#L172\n      options.badgeValue = ' ';\n    }\n  }\n  function appendLabelOptions(options, props) {\n    if (props.hidden) {\n      options.title = '';\n    } else {\n      options.title = props.children;\n      options.selectedLabelStyle = props.selectedStyle;\n    }\n  }\n  function appendIconOptions(options, props) {\n    if ('src' in props && props.src) {\n      const icon = convertIconSrcToIconOption(props);\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('sf' in props && false) {\n      if (typeof props.sf === 'string') {\n        options.icon = props.sf ? {\n          sf: props.sf\n        } : undefined;\n        options.selectedIcon = undefined;\n      } else if (props.sf) {\n        options.icon = props.sf.default ? {\n          sf: props.sf.default\n        } : undefined;\n        options.selectedIcon = props.sf.selected ? {\n          sf: props.sf.selected\n        } : undefined;\n      }\n    } else if ('androidSrc' in props && false) {\n      const icon = convertIconSrcToIconOption({\n        src: props.androidSrc\n      });\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('drawable' in props && false) {\n      options.icon = {\n        drawable: props.drawable\n      };\n      options.selectedIcon = undefined;\n    }\n    options.selectedIconColor = props.selectedColor;\n  }\n  function convertIconSrcToIconOption(icon) {\n    if (icon && icon.src) {\n      const {\n        defaultIcon,\n        selected\n      } = typeof icon.src === 'object' && 'selected' in icon.src ? {\n        defaultIcon: icon.src.default,\n        selected: icon.src.selected\n      } : {\n        defaultIcon: icon.src\n      };\n      const options = {};\n      options.icon = convertSrcOrComponentToSrc(defaultIcon);\n      options.selectedIcon = convertSrcOrComponentToSrc(selected);\n      return options;\n    }\n    return undefined;\n  }\n  function convertSrcOrComponentToSrc(src) {\n    if (src) {\n      if ((0, react_1.isValidElement)(src)) {\n        if (src.type === elements_1.VectorIcon) {\n          const props = src.props;\n          return {\n            src: props.family.getImageSource(props.name, 24, 'white')\n          };\n        } else {\n          console.warn('Only VectorIcon is supported as a React element in Icon.src');\n        }\n      } else {\n        return {\n          src\n        };\n      }\n    }\n    return undefined;\n  }\n  function appendTabBarOptions(options, props) {\n    const {\n      backgroundColor,\n      blurEffect,\n      iconColor,\n      disableTransparentOnScrollEdge,\n      badgeBackgroundColor,\n      badgeTextColor,\n      indicatorColor,\n      labelStyle,\n      shadowColor\n    } = props;\n    if (backgroundColor) {\n      options.backgroundColor = backgroundColor;\n    }\n    // We need better native integration of this on Android\n    // Simulating from JS side creates ugly transitions\n    if (true) {\n      if (blurEffect) {\n        options.blurEffect = blurEffect;\n      }\n      if (shadowColor) {\n        options.shadowColor = shadowColor;\n      }\n      if (iconColor) {\n        options.iconColor = iconColor;\n      }\n      if (disableTransparentOnScrollEdge !== undefined) {\n        options.disableTransparentOnScrollEdge = disableTransparentOnScrollEdge;\n      }\n      if (badgeBackgroundColor) {\n        options.badgeBackgroundColor = badgeBackgroundColor;\n      }\n      if (badgeTextColor) {\n        options.badgeTextColor = badgeTextColor;\n      }\n      if (indicatorColor) {\n        options.indicatorColor = indicatorColor;\n      }\n      if (labelStyle) {\n        options.labelStyle = labelStyle;\n      }\n    }\n  }\n  function isNativeTabTrigger(child, contextKey) {\n    if ((0, react_1.isValidElement)(child) && child && child.type === exports.NativeTabTrigger) {\n      if (typeof child.props === 'object' && child.props && 'name' in child.props && !child.props.name) {\n        throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (['component', 'getComponent'].some(key => child.props && typeof child.props === 'object' && key in child.props)) {\n          throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`component\\` or \\`getComponent\\` prop when used as a child of a Layout Route`);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n});","lineCount":265,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"NativeTabTrigger"],[8,26,4,24],[8,29,4,27],[8,34,4,32],[8,35,4,33],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"convertTabPropsToOptions"],[9,34,5,32],[9,37,5,35,"convertTabPropsToOptions"],[9,61,5,59],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"appendIconOptions"],[10,27,6,25],[10,30,6,28,"appendIconOptions"],[10,47,6,45],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"isNativeTabTrigger"],[11,28,7,26],[11,31,7,29,"isNativeTabTrigger"],[11,49,7,47],[12,2,8,0],[12,8,8,6,"native_1"],[12,16,8,14],[12,19,8,17,"require"],[12,26,8,24],[12,27,8,24,"_dependencyMap"],[12,41,8,24],[12,72,8,51],[12,73,8,52],[13,2,9,0],[13,8,9,6,"react_1"],[13,15,9,13],[13,18,9,16,"require"],[13,25,9,23],[13,26,9,23,"_dependencyMap"],[13,40,9,23],[13,52,9,31],[13,53,9,32],[14,2,10,0],[14,8,10,6,"NativeTabsTriggerTabBar_1"],[14,33,10,31],[14,36,10,34,"require"],[14,43,10,41],[14,44,10,41,"_dependencyMap"],[14,58,10,41],[14,90,10,69],[14,91,10,70],[15,2,11,0],[15,8,11,6,"utils_1"],[15,15,11,13],[15,18,11,16,"require"],[15,25,11,23],[15,26,11,23,"_dependencyMap"],[15,40,11,23],[15,54,11,33],[15,55,11,34],[16,2,12,0],[16,8,12,6,"PreviewRouteContext_1"],[16,29,12,27],[16,32,12,30,"require"],[16,39,12,37],[16,40,12,37,"_dependencyMap"],[16,54,12,37],[16,99,12,78],[16,100,12,79],[17,2,13,0],[17,8,13,6,"useSafeLayoutEffect_1"],[17,29,13,27],[17,32,13,30,"require"],[17,39,13,37],[17,40,13,37,"_dependencyMap"],[17,54,13,37],[17,92,13,71],[17,93,13,72],[18,2,14,0],[18,8,14,6,"elements_1"],[18,18,14,16],[18,21,14,19,"require"],[18,28,14,26],[18,29,14,26,"_dependencyMap"],[18,43,14,26],[18,68,14,47],[18,69,14,48],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,2,55,0],[59,11,55,9,"NativeTabTriggerImpl"],[59,31,55,29,"NativeTabTriggerImpl"],[59,32,55,30,"props"],[59,37,55,35],[59,39,55,37],[60,4,56,4],[60,10,56,10,"route"],[60,15,56,15],[60,18,56,18],[60,19,56,19],[60,20,56,20],[60,22,56,22,"native_1"],[60,30,56,30],[60,31,56,31,"useRoute"],[60,39,56,39],[60,41,56,41],[60,42,56,42],[61,4,57,4],[61,10,57,10,"navigation"],[61,20,57,20],[61,23,57,23],[61,24,57,24],[61,25,57,25],[61,27,57,27,"native_1"],[61,35,57,35],[61,36,57,36,"useNavigation"],[61,49,57,49],[61,51,57,51],[61,52,57,52],[62,4,58,4],[62,10,58,10,"isFocused"],[62,19,58,19],[62,22,58,22,"navigation"],[62,32,58,32],[62,33,58,33,"isFocused"],[62,42,58,42],[62,43,58,43],[62,44,58,44],[63,4,59,4],[63,10,59,10,"isInPreview"],[63,21,59,21],[63,24,59,24],[63,25,59,25],[63,26,59,26],[63,28,59,28,"PreviewRouteContext_1"],[63,49,59,49],[63,50,59,50,"useIsPreview"],[63,62,59,62],[63,64,59,64],[63,65,59,65],[64,4,60,4],[64,5,60,5],[64,6,60,6],[64,8,60,8,"useSafeLayoutEffect_1"],[64,29,60,29],[64,30,60,30,"useSafeLayoutEffect"],[64,49,60,49],[64,51,60,51],[64,57,60,57],[65,6,61,8],[66,6,62,8],[67,6,63,8],[68,6,64,8],[68,10,64,12,"isFocused"],[68,19,64,21],[68,23,64,25],[68,24,64,26,"isInPreview"],[68,35,64,37],[68,37,64,39],[69,8,65,12],[69,12,65,16,"navigation"],[69,22,65,26],[69,23,65,27,"getState"],[69,31,65,35],[69,32,65,36],[69,33,65,37],[69,35,65,39,"type"],[69,39,65,43],[69,44,65,48],[69,49,65,53],[69,51,65,55],[70,10,66,16],[70,16,66,22],[70,20,66,26,"Error"],[70,25,66,31],[70,26,66,32],[70,98,66,104,"route"],[70,103,66,109],[70,104,66,110,"name"],[70,108,66,114],[70,110,66,116],[70,111,66,117],[71,8,67,12],[72,8,68,12],[72,14,68,18,"options"],[72,21,68,25],[72,24,68,28,"convertTabPropsToOptions"],[72,48,68,52],[72,49,68,53,"props"],[72,54,68,58],[72,56,68,60],[72,60,68,64],[72,61,68,65],[73,8,69,12,"navigation"],[73,18,69,22],[73,19,69,23,"setOptions"],[73,29,69,33],[73,30,69,34,"options"],[73,37,69,41],[73,38,69,42],[74,6,70,8],[75,4,71,4],[75,5,71,5],[75,7,71,7],[75,8,71,8,"isFocused"],[75,17,71,17],[75,19,71,19,"props"],[75,24,71,24],[75,26,71,26,"isInPreview"],[75,37,71,37],[75,38,71,38],[75,39,71,39],[76,4,72,4],[76,11,72,11],[76,15,72,15],[77,2,73,0],[78,2,74,0,"exports"],[78,9,74,7],[78,10,74,8,"NativeTabTrigger"],[78,26,74,24],[78,29,74,27,"Object"],[78,35,74,33],[78,36,74,34,"assign"],[78,42,74,40],[78,43,74,41,"NativeTabTriggerImpl"],[78,63,74,61],[78,65,74,63],[79,4,75,4,"TabBar"],[79,10,75,10],[79,12,75,12,"NativeTabsTriggerTabBar_1"],[79,37,75,37],[79,38,75,38,"NativeTabsTriggerTabBar"],[80,2,76,0],[80,3,76,1],[80,4,76,2],[81,2,77,0],[81,11,77,9,"convertTabPropsToOptions"],[81,35,77,33,"convertTabPropsToOptions"],[81,36,77,34],[82,4,77,36,"options"],[82,11,77,43],[83,4,77,45,"hidden"],[83,10,77,51],[84,4,77,53,"children"],[84,12,77,61],[85,4,77,63,"role"],[85,8,77,67],[86,4,77,69,"disablePopToTop"],[86,19,77,84],[87,4,77,86,"disableScrollToTop"],[88,2,77,105],[88,3,77,106],[88,5,77,108,"isDynamic"],[88,14,77,117],[88,17,77,120],[88,22,77,125],[88,24,77,127],[89,4,78,4],[89,10,78,10,"initialOptions"],[89,24,78,24],[89,27,78,27,"isDynamic"],[89,36,78,36],[89,39,79,10],[90,6,79,12],[90,9,79,15,"options"],[91,4,79,23],[91,5,79,24],[91,8,80,10],[92,6,81,12],[92,9,81,15,"options"],[92,16,81,22],[93,6,82,12,"hidden"],[93,12,82,18],[93,14,82,20],[93,15,82,21],[93,16,82,22,"hidden"],[93,22,82,28],[94,6,83,12,"specialEffects"],[94,20,83,26],[94,22,83,28],[95,8,84,16,"repeatedTabSelection"],[95,28,84,36],[95,30,84,38],[96,10,85,20,"popToRoot"],[96,19,85,29],[96,21,85,31],[96,22,85,32,"disablePopToTop"],[96,37,85,47],[97,10,86,20,"scrollToTop"],[97,21,86,31],[97,23,86,33],[97,24,86,34,"disableScrollToTop"],[98,8,87,16],[99,6,88,12],[99,7,88,13],[100,6,89,12,"role"],[100,10,89,16],[100,12,89,18,"role"],[100,16,89,22],[100,20,89,26,"options"],[100,27,89,33],[100,29,89,35,"role"],[101,4,90,8],[101,5,90,9],[102,4,91,4],[102,10,91,10,"allowedChildren"],[102,25,91,25],[102,28,91,28],[102,29,91,29],[102,30,91,30],[102,32,91,32,"utils_1"],[102,39,91,39],[102,40,91,40,"filterAllowedChildrenElements"],[102,69,91,69],[102,71,91,71,"children"],[102,79,91,79],[102,81,91,81],[102,82,92,8,"elements_1"],[102,92,92,18],[102,93,92,19,"Badge"],[102,98,92,24],[102,100,93,8,"elements_1"],[102,110,93,18],[102,111,93,19,"Label"],[102,116,93,24],[102,118,94,8,"elements_1"],[102,128,94,18],[102,129,94,19,"Icon"],[102,133,94,23],[102,135,95,8,"NativeTabsTriggerTabBar_1"],[102,160,95,33],[102,161,95,34,"NativeTabsTriggerTabBar"],[102,184,95,57],[102,185,96,5],[102,186,96,6],[103,4,97,4],[103,11,97,11,"allowedChildren"],[103,26,97,26],[103,27,97,27,"reduce"],[103,33,97,33],[103,34,97,34],[103,35,97,35,"acc"],[103,38,97,38],[103,40,97,40,"child"],[103,45,97,45],[103,50,97,50],[104,6,98,8],[104,10,98,12],[104,11,98,13],[104,12,98,14],[104,14,98,16,"utils_1"],[104,21,98,23],[104,22,98,24,"isChildOfType"],[104,35,98,37],[104,37,98,39,"child"],[104,42,98,44],[104,44,98,46,"elements_1"],[104,54,98,56],[104,55,98,57,"Badge"],[104,60,98,62],[104,61,98,63],[104,63,98,65],[105,8,99,12,"appendBadgeOptions"],[105,26,99,30],[105,27,99,31,"acc"],[105,30,99,34],[105,32,99,36,"child"],[105,37,99,41],[105,38,99,42,"props"],[105,43,99,47],[105,44,99,48],[106,6,100,8],[106,7,100,9],[106,13,101,13],[106,17,101,17],[106,18,101,18],[106,19,101,19],[106,21,101,21,"utils_1"],[106,28,101,28],[106,29,101,29,"isChildOfType"],[106,42,101,42],[106,44,101,44,"child"],[106,49,101,49],[106,51,101,51,"elements_1"],[106,61,101,61],[106,62,101,62,"Label"],[106,67,101,67],[106,68,101,68],[106,70,101,70],[107,8,102,12,"appendLabelOptions"],[107,26,102,30],[107,27,102,31,"acc"],[107,30,102,34],[107,32,102,36,"child"],[107,37,102,41],[107,38,102,42,"props"],[107,43,102,47],[107,44,102,48],[108,6,103,8],[108,7,103,9],[108,13,104,13],[108,17,104,17],[108,18,104,18],[108,19,104,19],[108,21,104,21,"utils_1"],[108,28,104,28],[108,29,104,29,"isChildOfType"],[108,42,104,42],[108,44,104,44,"child"],[108,49,104,49],[108,51,104,51,"elements_1"],[108,61,104,61],[108,62,104,62,"Icon"],[108,66,104,66],[108,67,104,67],[108,69,104,69],[109,8,105,12,"appendIconOptions"],[109,25,105,29],[109,26,105,30,"acc"],[109,29,105,33],[109,31,105,35,"child"],[109,36,105,40],[109,37,105,41,"props"],[109,42,105,46],[109,43,105,47],[110,6,106,8],[110,7,106,9],[110,13,107,13],[110,17,107,17],[110,18,107,18],[110,19,107,19],[110,21,107,21,"utils_1"],[110,28,107,28],[110,29,107,29,"isChildOfType"],[110,42,107,42],[110,44,107,44,"child"],[110,49,107,49],[110,51,107,51,"NativeTabsTriggerTabBar_1"],[110,76,107,76],[110,77,107,77,"NativeTabsTriggerTabBar"],[110,100,107,100],[110,101,107,101],[110,103,107,103],[111,8,108,12,"appendTabBarOptions"],[111,27,108,31],[111,28,108,32,"acc"],[111,31,108,35],[111,33,108,37,"child"],[111,38,108,42],[111,39,108,43,"props"],[111,44,108,48],[111,45,108,49],[112,6,109,8],[113,6,110,8],[113,13,110,15,"acc"],[113,16,110,18],[114,4,111,4],[114,5,111,5],[114,7,111,7],[115,6,111,9],[115,9,111,12,"initialOptions"],[116,4,111,27],[116,5,111,28],[116,6,111,29],[117,2,112,0],[118,2,113,0],[118,11,113,9,"appendBadgeOptions"],[118,29,113,27,"appendBadgeOptions"],[118,30,113,28,"options"],[118,37,113,35],[118,39,113,37,"props"],[118,44,113,42],[118,46,113,44],[119,4,114,4],[119,8,114,8,"props"],[119,13,114,13],[119,14,114,14,"children"],[119,22,114,22],[119,24,114,24],[120,6,115,8,"options"],[120,13,115,15],[120,14,115,16,"badgeValue"],[120,24,115,26],[120,27,115,29,"String"],[120,33,115,35],[120,34,115,36,"props"],[120,39,115,41],[120,40,115,42,"children"],[120,48,115,50],[120,49,115,51],[121,6,116,8,"options"],[121,13,116,15],[121,14,116,16,"selectedBadgeBackgroundColor"],[121,42,116,44],[121,45,116,47,"props"],[121,50,116,52],[121,51,116,53,"selectedBackgroundColor"],[121,74,116,76],[122,4,117,4],[122,5,117,5],[122,11,118,9],[122,15,118,13],[122,16,118,14,"props"],[122,21,118,19],[122,22,118,20,"hidden"],[122,28,118,26],[122,30,118,28],[123,6,119,8],[124,6,120,8],[125,6,121,8],[126,6,122,8,"options"],[126,13,122,15],[126,14,122,16,"badgeValue"],[126,24,122,26],[126,27,122,29],[126,30,122,32],[127,4,123,4],[128,2,124,0],[129,2,125,0],[129,11,125,9,"appendLabelOptions"],[129,29,125,27,"appendLabelOptions"],[129,30,125,28,"options"],[129,37,125,35],[129,39,125,37,"props"],[129,44,125,42],[129,46,125,44],[130,4,126,4],[130,8,126,8,"props"],[130,13,126,13],[130,14,126,14,"hidden"],[130,20,126,20],[130,22,126,22],[131,6,127,8,"options"],[131,13,127,15],[131,14,127,16,"title"],[131,19,127,21],[131,22,127,24],[131,24,127,26],[132,4,128,4],[132,5,128,5],[132,11,129,9],[133,6,130,8,"options"],[133,13,130,15],[133,14,130,16,"title"],[133,19,130,21],[133,22,130,24,"props"],[133,27,130,29],[133,28,130,30,"children"],[133,36,130,38],[134,6,131,8,"options"],[134,13,131,15],[134,14,131,16,"selectedLabelStyle"],[134,32,131,34],[134,35,131,37,"props"],[134,40,131,42],[134,41,131,43,"selectedStyle"],[134,54,131,56],[135,4,132,4],[136,2,133,0],[137,2,134,0],[137,11,134,9,"appendIconOptions"],[137,28,134,26,"appendIconOptions"],[137,29,134,27,"options"],[137,36,134,34],[137,38,134,36,"props"],[137,43,134,41],[137,45,134,43],[138,4,135,4],[138,8,135,8],[138,13,135,13],[138,17,135,17,"props"],[138,22,135,22],[138,26,135,26,"props"],[138,31,135,31],[138,32,135,32,"src"],[138,35,135,35],[138,37,135,37],[139,6,136,8],[139,12,136,14,"icon"],[139,16,136,18],[139,19,136,21,"convertIconSrcToIconOption"],[139,45,136,47],[139,46,136,48,"props"],[139,51,136,53],[139,52,136,54],[140,6,137,8,"options"],[140,13,137,15],[140,14,137,16,"icon"],[140,18,137,20],[140,21,137,23,"icon"],[140,25,137,27],[140,27,137,29,"icon"],[140,31,137,33],[141,6,138,8,"options"],[141,13,138,15],[141,14,138,16,"selectedIcon"],[141,26,138,28],[141,29,138,31,"icon"],[141,33,138,35],[141,35,138,37,"selectedIcon"],[141,47,138,49],[142,4,139,4],[142,5,139,5],[142,11,140,9],[142,15,140,13],[142,19,140,17],[142,23,140,21,"props"],[142,28,140,26],[142,37,140,59],[142,39,140,61],[143,6,141,8],[143,10,141,12],[143,17,141,19,"props"],[143,22,141,24],[143,23,141,25,"sf"],[143,25,141,27],[143,30,141,32],[143,38,141,40],[143,40,141,42],[144,8,142,12,"options"],[144,15,142,19],[144,16,142,20,"icon"],[144,20,142,24],[144,23,142,27,"props"],[144,28,142,32],[144,29,142,33,"sf"],[144,31,142,35],[144,34,143,18],[145,10,144,20,"sf"],[145,12,144,22],[145,14,144,24,"props"],[145,19,144,29],[145,20,144,30,"sf"],[146,8,145,16],[146,9,145,17],[146,12,146,18,"undefined"],[146,21,146,27],[147,8,147,12,"options"],[147,15,147,19],[147,16,147,20,"selectedIcon"],[147,28,147,32],[147,31,147,35,"undefined"],[147,40,147,44],[148,6,148,8],[148,7,148,9],[148,13,149,13],[148,17,149,17,"props"],[148,22,149,22],[148,23,149,23,"sf"],[148,25,149,25],[148,27,149,27],[149,8,150,12,"options"],[149,15,150,19],[149,16,150,20,"icon"],[149,20,150,24],[149,23,150,27,"props"],[149,28,150,32],[149,29,150,33,"sf"],[149,31,150,35],[149,32,150,36,"default"],[149,39,150,43],[149,42,151,18],[150,10,152,20,"sf"],[150,12,152,22],[150,14,152,24,"props"],[150,19,152,29],[150,20,152,30,"sf"],[150,22,152,32],[150,23,152,33,"default"],[151,8,153,16],[151,9,153,17],[151,12,154,18,"undefined"],[151,21,154,27],[152,8,155,12,"options"],[152,15,155,19],[152,16,155,20,"selectedIcon"],[152,28,155,32],[152,31,155,35,"props"],[152,36,155,40],[152,37,155,41,"sf"],[152,39,155,43],[152,40,155,44,"selected"],[152,48,155,52],[152,51,156,18],[153,10,157,20,"sf"],[153,12,157,22],[153,14,157,24,"props"],[153,19,157,29],[153,20,157,30,"sf"],[153,22,157,32],[153,23,157,33,"selected"],[154,8,158,16],[154,9,158,17],[154,12,159,18,"undefined"],[154,21,159,27],[155,6,160,8],[156,4,161,4],[156,5,161,5],[156,11,162,9],[156,15,162,13],[156,27,162,25],[156,31,162,29,"props"],[156,36,162,34],[156,45,162,71],[156,47,162,73],[157,6,163,8],[157,12,163,14,"icon"],[157,16,163,18],[157,19,163,21,"convertIconSrcToIconOption"],[157,45,163,47],[157,46,163,48],[158,8,163,50,"src"],[158,11,163,53],[158,13,163,55,"props"],[158,18,163,60],[158,19,163,61,"androidSrc"],[159,6,163,72],[159,7,163,73],[159,8,163,74],[160,6,164,8,"options"],[160,13,164,15],[160,14,164,16,"icon"],[160,18,164,20],[160,21,164,23,"icon"],[160,25,164,27],[160,27,164,29,"icon"],[160,31,164,33],[161,6,165,8,"options"],[161,13,165,15],[161,14,165,16,"selectedIcon"],[161,26,165,28],[161,29,165,31,"icon"],[161,33,165,35],[161,35,165,37,"selectedIcon"],[161,47,165,49],[162,4,166,4],[162,5,166,5],[162,11,167,9],[162,15,167,13],[162,25,167,23],[162,29,167,27,"props"],[162,34,167,32],[162,43,167,69],[162,45,167,71],[163,6,168,8,"options"],[163,13,168,15],[163,14,168,16,"icon"],[163,18,168,20],[163,21,168,23],[164,8,168,25,"drawable"],[164,16,168,33],[164,18,168,35,"props"],[164,23,168,40],[164,24,168,41,"drawable"],[165,6,168,50],[165,7,168,51],[166,6,169,8,"options"],[166,13,169,15],[166,14,169,16,"selectedIcon"],[166,26,169,28],[166,29,169,31,"undefined"],[166,38,169,40],[167,4,170,4],[168,4,171,4,"options"],[168,11,171,11],[168,12,171,12,"selectedIconColor"],[168,29,171,29],[168,32,171,32,"props"],[168,37,171,37],[168,38,171,38,"selectedColor"],[168,51,171,51],[169,2,172,0],[170,2,173,0],[170,11,173,9,"convertIconSrcToIconOption"],[170,37,173,35,"convertIconSrcToIconOption"],[170,38,173,36,"icon"],[170,42,173,40],[170,44,173,42],[171,4,174,4],[171,8,174,8,"icon"],[171,12,174,12],[171,16,174,16,"icon"],[171,20,174,20],[171,21,174,21,"src"],[171,24,174,24],[171,26,174,26],[172,6,175,8],[172,12,175,14],[173,8,175,16,"defaultIcon"],[173,19,175,27],[174,8,175,29,"selected"],[175,6,175,38],[175,7,175,39],[175,10,175,42],[175,17,175,49,"icon"],[175,21,175,53],[175,22,175,54,"src"],[175,25,175,57],[175,30,175,62],[175,38,175,70],[175,42,175,74],[175,52,175,84],[175,56,175,88,"icon"],[175,60,175,92],[175,61,175,93,"src"],[175,64,175,96],[175,67,176,14],[176,8,176,16,"defaultIcon"],[176,19,176,27],[176,21,176,29,"icon"],[176,25,176,33],[176,26,176,34,"src"],[176,29,176,37],[176,30,176,38,"default"],[176,37,176,45],[177,8,176,47,"selected"],[177,16,176,55],[177,18,176,57,"icon"],[177,22,176,61],[177,23,176,62,"src"],[177,26,176,65],[177,27,176,66,"selected"],[178,6,176,75],[178,7,176,76],[178,10,177,14],[179,8,177,16,"defaultIcon"],[179,19,177,27],[179,21,177,29,"icon"],[179,25,177,33],[179,26,177,34,"src"],[180,6,177,38],[180,7,177,39],[181,6,178,8],[181,12,178,14,"options"],[181,19,178,21],[181,22,178,24],[181,23,178,25],[181,24,178,26],[182,6,179,8,"options"],[182,13,179,15],[182,14,179,16,"icon"],[182,18,179,20],[182,21,179,23,"convertSrcOrComponentToSrc"],[182,47,179,49],[182,48,179,50,"defaultIcon"],[182,59,179,61],[182,60,179,62],[183,6,180,8,"options"],[183,13,180,15],[183,14,180,16,"selectedIcon"],[183,26,180,28],[183,29,180,31,"convertSrcOrComponentToSrc"],[183,55,180,57],[183,56,180,58,"selected"],[183,64,180,66],[183,65,180,67],[184,6,181,8],[184,13,181,15,"options"],[184,20,181,22],[185,4,182,4],[186,4,183,4],[186,11,183,11,"undefined"],[186,20,183,20],[187,2,184,0],[188,2,185,0],[188,11,185,9,"convertSrcOrComponentToSrc"],[188,37,185,35,"convertSrcOrComponentToSrc"],[188,38,185,36,"src"],[188,41,185,39],[188,43,185,41],[189,4,186,4],[189,8,186,8,"src"],[189,11,186,11],[189,13,186,13],[190,6,187,8],[190,10,187,12],[190,11,187,13],[190,12,187,14],[190,14,187,16,"react_1"],[190,21,187,23],[190,22,187,24,"isValidElement"],[190,36,187,38],[190,38,187,40,"src"],[190,41,187,43],[190,42,187,44],[190,44,187,46],[191,8,188,12],[191,12,188,16,"src"],[191,15,188,19],[191,16,188,20,"type"],[191,20,188,24],[191,25,188,29,"elements_1"],[191,35,188,39],[191,36,188,40,"VectorIcon"],[191,46,188,50],[191,48,188,52],[192,10,189,16],[192,16,189,22,"props"],[192,21,189,27],[192,24,189,30,"src"],[192,27,189,33],[192,28,189,34,"props"],[192,33,189,39],[193,10,190,16],[193,17,190,23],[194,12,190,25,"src"],[194,15,190,28],[194,17,190,30,"props"],[194,22,190,35],[194,23,190,36,"family"],[194,29,190,42],[194,30,190,43,"getImageSource"],[194,44,190,57],[194,45,190,58,"props"],[194,50,190,63],[194,51,190,64,"name"],[194,55,190,68],[194,57,190,70],[194,59,190,72],[194,61,190,74],[194,68,190,81],[195,10,190,83],[195,11,190,84],[196,8,191,12],[196,9,191,13],[196,15,192,17],[197,10,193,16,"console"],[197,17,193,23],[197,18,193,24,"warn"],[197,22,193,28],[197,23,193,29],[197,84,193,90],[197,85,193,91],[198,8,194,12],[199,6,195,8],[199,7,195,9],[199,13,196,13],[200,8,197,12],[200,15,197,19],[201,10,197,21,"src"],[202,8,197,25],[202,9,197,26],[203,6,198,8],[204,4,199,4],[205,4,200,4],[205,11,200,11,"undefined"],[205,20,200,20],[206,2,201,0],[207,2,202,0],[207,11,202,9,"appendTabBarOptions"],[207,30,202,28,"appendTabBarOptions"],[207,31,202,29,"options"],[207,38,202,36],[207,40,202,38,"props"],[207,45,202,43],[207,47,202,45],[208,4,203,4],[208,10,203,10],[209,6,203,12,"backgroundColor"],[209,21,203,27],[210,6,203,29,"blurEffect"],[210,16,203,39],[211,6,203,41,"iconColor"],[211,15,203,50],[212,6,203,52,"disableTransparentOnScrollEdge"],[212,36,203,82],[213,6,203,84,"badgeBackgroundColor"],[213,26,203,104],[214,6,203,106,"badgeTextColor"],[214,20,203,120],[215,6,203,122,"indicatorColor"],[215,20,203,136],[216,6,203,138,"labelStyle"],[216,16,203,148],[217,6,203,150,"shadowColor"],[218,4,203,163],[218,5,203,164],[218,8,203,167,"props"],[218,13,203,172],[219,4,204,4],[219,8,204,8,"backgroundColor"],[219,23,204,23],[219,25,204,25],[220,6,205,8,"options"],[220,13,205,15],[220,14,205,16,"backgroundColor"],[220,29,205,31],[220,32,205,34,"backgroundColor"],[220,47,205,49],[221,4,206,4],[222,4,207,4],[223,4,208,4],[224,4,209,4],[224,14,209,43],[225,6,210,8],[225,10,210,12,"blurEffect"],[225,20,210,22],[225,22,210,24],[226,8,211,12,"options"],[226,15,211,19],[226,16,211,20,"blurEffect"],[226,26,211,30],[226,29,211,33,"blurEffect"],[226,39,211,43],[227,6,212,8],[228,6,213,8],[228,10,213,12,"shadowColor"],[228,21,213,23],[228,23,213,25],[229,8,214,12,"options"],[229,15,214,19],[229,16,214,20,"shadowColor"],[229,27,214,31],[229,30,214,34,"shadowColor"],[229,41,214,45],[230,6,215,8],[231,6,216,8],[231,10,216,12,"iconColor"],[231,19,216,21],[231,21,216,23],[232,8,217,12,"options"],[232,15,217,19],[232,16,217,20,"iconColor"],[232,25,217,29],[232,28,217,32,"iconColor"],[232,37,217,41],[233,6,218,8],[234,6,219,8],[234,10,219,12,"disableTransparentOnScrollEdge"],[234,40,219,42],[234,45,219,47,"undefined"],[234,54,219,56],[234,56,219,58],[235,8,220,12,"options"],[235,15,220,19],[235,16,220,20,"disableTransparentOnScrollEdge"],[235,46,220,50],[235,49,220,53,"disableTransparentOnScrollEdge"],[235,79,220,83],[236,6,221,8],[237,6,222,8],[237,10,222,12,"badgeBackgroundColor"],[237,30,222,32],[237,32,222,34],[238,8,223,12,"options"],[238,15,223,19],[238,16,223,20,"badgeBackgroundColor"],[238,36,223,40],[238,39,223,43,"badgeBackgroundColor"],[238,59,223,63],[239,6,224,8],[240,6,225,8],[240,10,225,12,"badgeTextColor"],[240,24,225,26],[240,26,225,28],[241,8,226,12,"options"],[241,15,226,19],[241,16,226,20,"badgeTextColor"],[241,30,226,34],[241,33,226,37,"badgeTextColor"],[241,47,226,51],[242,6,227,8],[243,6,228,8],[243,10,228,12,"indicatorColor"],[243,24,228,26],[243,26,228,28],[244,8,229,12,"options"],[244,15,229,19],[244,16,229,20,"indicatorColor"],[244,30,229,34],[244,33,229,37,"indicatorColor"],[244,47,229,51],[245,6,230,8],[246,6,231,8],[246,10,231,12,"labelStyle"],[246,20,231,22],[246,22,231,24],[247,8,232,12,"options"],[247,15,232,19],[247,16,232,20,"labelStyle"],[247,26,232,30],[247,29,232,33,"labelStyle"],[247,39,232,43],[248,6,233,8],[249,4,234,4],[250,2,235,0],[251,2,236,0],[251,11,236,9,"isNativeTabTrigger"],[251,29,236,27,"isNativeTabTrigger"],[251,30,236,28,"child"],[251,35,236,33],[251,37,236,35,"contextKey"],[251,47,236,45],[251,49,236,47],[252,4,237,4],[252,8,237,8],[252,9,237,9],[252,10,237,10],[252,12,237,12,"react_1"],[252,19,237,19],[252,20,237,20,"isValidElement"],[252,34,237,34],[252,36,237,36,"child"],[252,41,237,41],[252,42,237,42],[252,46,237,46,"child"],[252,51,237,51],[252,55,237,55,"child"],[252,60,237,60],[252,61,237,61,"type"],[252,65,237,65],[252,70,237,70,"exports"],[252,77,237,77],[252,78,237,78,"NativeTabTrigger"],[252,94,237,94],[252,96,237,96],[253,6,238,8],[253,10,238,12],[253,17,238,19,"child"],[253,22,238,24],[253,23,238,25,"props"],[253,28,238,30],[253,33,238,35],[253,41,238,43],[253,45,239,12,"child"],[253,50,239,17],[253,51,239,18,"props"],[253,56,239,23],[253,60,240,12],[253,66,240,18],[253,70,240,22,"child"],[253,75,240,27],[253,76,240,28,"props"],[253,81,240,33],[253,85,241,12],[253,86,241,13,"child"],[253,91,241,18],[253,92,241,19,"props"],[253,97,241,24],[253,98,241,25,"name"],[253,102,241,29],[253,104,241,31],[254,8,242,12],[254,14,242,18],[254,18,242,22,"Error"],[254,23,242,27],[254,24,242,28],[254,79,242,83,"contextKey"],[254,89,242,93],[254,167,242,171],[254,168,242,172],[255,6,243,8],[256,6,244,8],[256,10,244,12,"process"],[256,17,244,19],[256,18,244,20,"env"],[256,21,244,23],[256,22,244,24,"NODE_ENV"],[256,30,244,32],[256,35,244,37],[256,47,244,49],[256,49,244,51],[257,8,245,12],[257,12,245,16],[257,13,245,17],[257,24,245,28],[257,26,245,30],[257,40,245,44],[257,41,245,45],[257,42,245,46,"some"],[257,46,245,50],[257,47,245,52,"key"],[257,50,245,55],[257,54,245,60,"child"],[257,59,245,65],[257,60,245,66,"props"],[257,65,245,71],[257,69,245,75],[257,76,245,82,"child"],[257,81,245,87],[257,82,245,88,"props"],[257,87,245,93],[257,92,245,98],[257,100,245,106],[257,104,245,110,"key"],[257,107,245,113],[257,111,245,117,"child"],[257,116,245,122],[257,117,245,123,"props"],[257,122,245,128],[257,123,245,129],[257,125,245,131],[258,10,246,16],[258,16,246,22],[258,20,246,26,"Error"],[258,25,246,31],[258,26,246,32],[258,81,246,87,"contextKey"],[258,91,246,97],[258,197,246,203],[258,198,246,204],[259,8,247,12],[260,6,248,8],[261,6,249,8],[261,13,249,15],[261,17,249,19],[262,4,250,4],[263,4,251,4],[263,11,251,11],[263,16,251,16],[264,2,252,0],[265,0,252,1],[265,3]],"functionMap":{"names":["<global>","NativeTabTriggerImpl","<anonymous>","convertTabPropsToOptions","allowedChildren.reduce$argument_0","appendBadgeOptions","appendLabelOptions","appendIconOptions","convertIconSrcToIconOption","convertSrcOrComponentToSrc","appendTabBarOptions","isNativeTabTrigger","some$argument_0"],"mappings":"AAA;ACsD;mDCK;KDW;CDE;AGI;kCCoB;KDc;CHC;AKC;CLW;AMC;CNQ;AOC;CPsC;AQC;CRW;ASC;CTgB;AUC;CViC;AWC;mDCS,6ED;CXO"},"hasCjsExports":true},"type":"js/module"}]}