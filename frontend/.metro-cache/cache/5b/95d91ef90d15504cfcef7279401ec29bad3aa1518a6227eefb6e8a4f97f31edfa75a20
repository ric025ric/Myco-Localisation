{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":107,"index":305}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Animated","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dNPzxVfn0yBoRxvhD+vE+lN7k4Q=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/I18nManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YXFxy1JKR54teS+Ykb7Z7cVZrH8=","exportNames":["*"],"imports":1}},{"name":"../errors/ErrorMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":361},"end":{"line":7,"column":56,"index":417}}],"key":"APtQ1ObkEMvvpKEHNjwmitGcEgw=","exportNames":["*"],"imports":1}},{"name":"../errors/WarningMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":418},"end":{"line":8,"column":60,"index":478}}],"key":"wy3OtbKRfRgcFiIo5RwdXKEdHsA=","exportNames":["*"],"imports":1}},{"name":"./utils/measureLayout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":479},"end":{"line":9,"column":126,"index":605}}],"key":"EpOtT1YPrrvjrJBdb086HVW0HdI=","exportNames":["*"],"imports":1}},{"name":"./RecyclerViewContextProvider","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":606},"end":{"line":10,"column":101,"index":707}}],"key":"xkzKodpiEh9PM1d4t93OubNRFfg=","exportNames":["*"],"imports":1}},{"name":"./hooks/useLayoutState","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":708},"end":{"line":11,"column":56,"index":764}}],"key":"Vcep8FqPfs/hXqg5S+FWbcib3GA=","exportNames":["*"],"imports":1}},{"name":"./hooks/useRecyclerViewManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":765},"end":{"line":12,"column":72,"index":837}}],"key":"V/mC/swWBTtNdzSj/CBra84ztLs=","exportNames":["*"],"imports":1}},{"name":"./hooks/useOnLoad","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":838},"end":{"line":13,"column":50,"index":888}}],"key":"2n0jkphyq+izLpfQhMlceADPMeg=","exportNames":["*"],"imports":1}},{"name":"./ViewHolderCollection","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":889},"end":{"line":14,"column":63,"index":952}}],"key":"ZKXdCiImyeHeOjcYk5PiYCPP64U=","exportNames":["*"],"imports":1}},{"name":"./components/CompatView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":953},"end":{"line":15,"column":53,"index":1006}}],"key":"x3xyTyYEOkCA+EAT5e8aUviD1aY=","exportNames":["*"],"imports":1}},{"name":"./hooks/useBoundDetection","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":1007},"end":{"line":16,"column":62,"index":1069}}],"key":"P4pwyQUDYGEsD578iRPBYN/c7uw=","exportNames":["*"],"imports":1}},{"name":"./utils/adjustOffsetForRTL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1070},"end":{"line":17,"column":64,"index":1134}}],"key":"Rol5sfq3t0ssADFFrVqHFxOSuZo=","exportNames":["*"],"imports":1}},{"name":"./hooks/useSecondaryProps","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1135},"end":{"line":18,"column":62,"index":1197}}],"key":"r3iyqeBdlNRDTr8C5eQsbQHOCMw=","exportNames":["*"],"imports":1}},{"name":"./components/StickyHeaders","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1198},"end":{"line":19,"column":59,"index":1257}}],"key":"EKnJqKcVAeYUJmRXqLELG6tQSLE=","exportNames":["*"],"imports":1}},{"name":"./components/ScrollAnchor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":1258},"end":{"line":20,"column":57,"index":1315}}],"key":"k9UPUXLnf7kSub3foD+a50TV3fs=","exportNames":["*"],"imports":1}},{"name":"./hooks/useRecyclerViewController","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":1316},"end":{"line":21,"column":78,"index":1394}}],"key":"IJVb3EIjQZB0A+B7l4o02rk8CiM=","exportNames":["*"],"imports":1}},{"name":"./helpers/RenderTimeTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1395},"end":{"line":22,"column":64,"index":1459}}],"key":"XYDSeETg0KF2POdlsVP/+SUzw6E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"horizontal\", \"renderItem\", \"data\", \"extraData\", \"onLoad\", \"CellRendererComponent\", \"overrideProps\", \"refreshing\", \"onRefresh\", \"progressViewOffset\", \"ListEmptyComponent\", \"ListHeaderComponent\", \"ListHeaderComponentStyle\", \"ListFooterComponent\", \"ListFooterComponentStyle\", \"ItemSeparatorComponent\", \"renderScrollComponent\", \"style\", \"stickyHeaderIndices\", \"maintainVisibleContentPosition\", \"onCommitLayoutEffect\"];\n  /**\n   * RecyclerView is a high-performance list component that efficiently renders and recycles list items.\n   * It's designed to handle large lists with optimal memory usage and smooth scrolling.\n   */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"RecyclerView\", {\n    enumerable: true,\n    get: function () {\n      return RecyclerView;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsAnimated = require(_dependencyMap[2], \"react-native-web/dist/exports/Animated\");\n  var Animated = _interopDefault(_reactNativeWebDistExportsAnimated);\n  var _reactNativeWebDistExportsI18nManager = require(_dependencyMap[3], \"react-native-web/dist/exports/I18nManager\");\n  var I18nManager = _interopDefault(_reactNativeWebDistExportsI18nManager);\n  var _errorsErrorMessages = require(_dependencyMap[4], \"../errors/ErrorMessages\");\n  var _errorsWarningMessages = require(_dependencyMap[5], \"../errors/WarningMessages\");\n  var _utilsMeasureLayout = require(_dependencyMap[6], \"./utils/measureLayout\");\n  var _RecyclerViewContextProvider = require(_dependencyMap[7], \"./RecyclerViewContextProvider\");\n  var _hooksUseLayoutState = require(_dependencyMap[8], \"./hooks/useLayoutState\");\n  var _hooksUseRecyclerViewManager = require(_dependencyMap[9], \"./hooks/useRecyclerViewManager\");\n  var _hooksUseOnLoad = require(_dependencyMap[10], \"./hooks/useOnLoad\");\n  var _ViewHolderCollection = require(_dependencyMap[11], \"./ViewHolderCollection\");\n  var _componentsCompatView = require(_dependencyMap[12], \"./components/CompatView\");\n  var _hooksUseBoundDetection = require(_dependencyMap[13], \"./hooks/useBoundDetection\");\n  var _utilsAdjustOffsetForRTL = require(_dependencyMap[14], \"./utils/adjustOffsetForRTL\");\n  var _hooksUseSecondaryProps = require(_dependencyMap[15], \"./hooks/useSecondaryProps\");\n  var _componentsStickyHeaders = require(_dependencyMap[16], \"./components/StickyHeaders\");\n  var _componentsScrollAnchor = require(_dependencyMap[17], \"./components/ScrollAnchor\");\n  var _hooksUseRecyclerViewController = require(_dependencyMap[18], \"./hooks/useRecyclerViewController\");\n  var _helpersRenderTimeTracker = require(_dependencyMap[19], \"./helpers/RenderTimeTracker\");\n  /**\n   * Main RecyclerView component that handles list rendering, scrolling, and item recycling.\n   * @template T - The type of items in the list\n   */\n  const RecyclerViewComponent = (props, ref) => {\n    var _a;\n    // Destructure props and initialize refs\n    const {\n        horizontal,\n        renderItem,\n        data,\n        extraData,\n        onLoad,\n        CellRendererComponent,\n        overrideProps,\n        ItemSeparatorComponent,\n        style,\n        stickyHeaderIndices,\n        maintainVisibleContentPosition,\n        onCommitLayoutEffect\n      } = props,\n      rest = (0, _objectWithoutPropertiesLoose.default)(props, _excluded);\n    const [renderTimeTracker] = (0, _react.useState)(() => new _helpersRenderTimeTracker.RenderTimeTracker());\n    renderTimeTracker.startTracking();\n    // Core refs for managing scroll view, internal view, and child container\n    const scrollViewRef = (0, _react.useRef)(null);\n    const internalViewRef = (0, _react.useRef)(null);\n    const firstChildViewRef = (0, _react.useRef)(null);\n    const containerViewSizeRef = (0, _react.useRef)(undefined);\n    const pendingChildIds = (0, _react.useRef)(new Set()).current;\n    // Track scroll position\n    const scrollY = (0, _react.useRef)(new Animated.default.Value(0)).current;\n    // Refs for sticky headers and scroll anchoring\n    const stickyHeaderRef = (0, _react.useRef)(null);\n    const scrollAnchorRef = (0, _react.useRef)(null);\n    // State for managing layout and render updates\n    const [_, setLayoutTreeId] = (0, _hooksUseLayoutState.useLayoutState)(0);\n    const [__, setRenderId] = (0, _react.useState)(0);\n    // Map to store refs for each item in the list\n    const refHolder = (0, _react.useMemo)(() => new Map(), []);\n    // Initialize core RecyclerView manager and content offset management\n    const {\n      recyclerViewManager,\n      velocityTracker\n    } = (0, _hooksUseRecyclerViewManager.useRecyclerViewManager)(props);\n    const {\n      applyOffsetCorrection,\n      computeFirstVisibleIndexForOffsetCorrection,\n      applyInitialScrollIndex,\n      handlerMethods\n    } = (0, _hooksUseRecyclerViewController.useRecyclerViewController)(recyclerViewManager, ref, scrollViewRef, scrollAnchorRef);\n    // Initialize view holder collection ref\n    const viewHolderCollectionRef = (0, _react.useRef)(null);\n    // Hook to handle list loading\n    (0, _hooksUseOnLoad.useOnListLoad)(recyclerViewManager, onLoad);\n    // Hook to detect when scrolling reaches list bounds\n    const {\n      checkBounds\n    } = (0, _hooksUseBoundDetection.useBoundDetection)(recyclerViewManager, scrollViewRef);\n    const isHorizontalRTL = I18nManager.default.isRTL && horizontal;\n    /**\n     * Initialize the RecyclerView by measuring and setting up the window size\n     * This effect runs when the component mounts or when layout changes\n     */\n    (0, _react.useLayoutEffect)(() => {\n      if (internalViewRef.current && firstChildViewRef.current) {\n        // Measure the outer and inner container layouts\n        const outerViewLayout = (0, _utilsMeasureLayout.measureParentSize)(internalViewRef.current);\n        const firstChildViewLayout = (0, _utilsMeasureLayout.measureFirstChildLayout)(firstChildViewRef.current, internalViewRef.current);\n        containerViewSizeRef.current = outerViewLayout;\n        // Calculate offset of first item\n        const firstItemOffset = horizontal ? firstChildViewLayout.x - outerViewLayout.x : firstChildViewLayout.y - outerViewLayout.y;\n        // Update the RecyclerView manager with window dimensions\n        recyclerViewManager.updateLayoutParams({\n          width: horizontal ? outerViewLayout.width : firstChildViewLayout.width,\n          height: horizontal ? firstChildViewLayout.height : outerViewLayout.height\n        }, isHorizontalRTL && recyclerViewManager.hasLayout() ? firstItemOffset - recyclerViewManager.getChildContainerDimensions().width : firstItemOffset);\n      }\n    });\n    /**\n     * Effect to handle layout updates for list items\n     * This ensures proper positioning and recycling of items\n     */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    (0, _react.useLayoutEffect)(() => {\n      var _a, _b;\n      if (pendingChildIds.size > 0) {\n        return;\n      }\n      const layoutInfo = Array.from(refHolder, ([index, viewHolderRef]) => {\n        const layout = (0, _utilsMeasureLayout.measureItemLayout)(viewHolderRef.current, recyclerViewManager.tryGetLayout(index));\n        // comapre height with stored layout\n        // const storedLayout = recyclerViewManager.getLayout(index);\n        // if (\n        //   storedLayout.height !== layout.height &&\n        //   storedLayout.isHeightMeasured\n        // ) {\n        //   console.log(\n        //     \"height changed\",\n        //     index,\n        //     layout.height,\n        //     storedLayout.height\n        //   );\n        // }\n        return {\n          index,\n          dimensions: layout\n        };\n      });\n      const hasExceededMaxRendersWithoutCommit = renderTimeTracker.hasExceededMaxRendersWithoutCommit();\n      if (hasExceededMaxRendersWithoutCommit) {\n        console.warn(_errorsWarningMessages.WarningMessages.exceededMaxRendersWithoutCommit);\n      }\n      if (recyclerViewManager.modifyChildrenLayout(layoutInfo, (_a = data === null || data === void 0 ? void 0 : data.length) !== null && _a !== void 0 ? _a : 0) && !hasExceededMaxRendersWithoutCommit) {\n        // Trigger re-render if layout modifications were made\n        setRenderId(prev => prev + 1);\n      } else {\n        (_b = viewHolderCollectionRef.current) === null || _b === void 0 ? void 0 : _b.commitLayout();\n        applyOffsetCorrection();\n      }\n      if (horizontal && recyclerViewManager.hasLayout() && recyclerViewManager.getWindowSize().height > 0) {\n        // We want the parent FlashList to continue rendering the next batch of items as soon as height is available.\n        // Waiting for each horizontal list to finish might cause too many setState calls.\n        // This will help avoid \"Maximum update depth exceeded\" error.\n        parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.unmarkChildLayoutAsPending(recyclerViewId);\n      }\n    });\n    /**\n     * Scroll event handler that manages scroll position, velocity, and RTL support\n     */\n    const onScrollHandler = (0, _react.useCallback)(event => {\n      var _a, _b, _c;\n      if (recyclerViewManager.ignoreScrollEvents) {\n        return;\n      }\n      let scrollOffset = horizontal ? event.nativeEvent.contentOffset.x : event.nativeEvent.contentOffset.y;\n      // Handle RTL (Right-to-Left) layout adjustments\n      if (isHorizontalRTL) {\n        scrollOffset = (0, _utilsAdjustOffsetForRTL.adjustOffsetForRTL)(scrollOffset, event.nativeEvent.contentSize.width, event.nativeEvent.layoutMeasurement.width);\n      }\n      velocityTracker.computeVelocity(scrollOffset, recyclerViewManager.getAbsoluteLastScrollOffset(), Boolean(horizontal), (velocity, isMomentumEnd) => {\n        if (recyclerViewManager.ignoreScrollEvents) {\n          return;\n        }\n        if (isMomentumEnd) {\n          computeFirstVisibleIndexForOffsetCorrection();\n          if (!recyclerViewManager.isOffsetProjectionEnabled) {\n            return;\n          }\n          recyclerViewManager.resetVelocityCompute();\n        }\n        // Update scroll position and trigger re-render if needed\n        if (recyclerViewManager.updateScrollOffset(scrollOffset, velocity)) {\n          setRenderId(prev => prev + 1);\n        }\n      });\n      // Update sticky headers and check bounds\n      (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.reportScrollEvent(event.nativeEvent);\n      checkBounds();\n      // Record interaction and compute item visibility\n      recyclerViewManager.recordInteraction();\n      recyclerViewManager.computeItemViewability();\n      // Call user-provided onScroll handler\n      (_c = (_b = recyclerViewManager.props).onScroll) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n    }, [checkBounds, computeFirstVisibleIndexForOffsetCorrection, horizontal, isHorizontalRTL, recyclerViewManager, velocityTracker]);\n    const parentRecyclerViewContext = (0, _RecyclerViewContextProvider.useRecyclerViewContext)();\n    const recyclerViewId = (0, _react.useId)();\n    // Create context for child components\n    const recyclerViewContext = (0, _react.useMemo)(() => {\n      return {\n        layout: () => {\n          setLayoutTreeId(prev => prev + 1);\n        },\n        getRef: () => {\n          if (recyclerViewManager.isDisposed) {\n            return null;\n          }\n          return handlerMethods;\n        },\n        getParentRef: () => {\n          var _a;\n          return (_a = parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.getRef()) !== null && _a !== void 0 ? _a : null;\n        },\n        getParentScrollViewRef: () => {\n          var _a;\n          return (_a = parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.getScrollViewRef()) !== null && _a !== void 0 ? _a : null;\n        },\n        getScrollViewRef: () => {\n          return scrollViewRef.current;\n        },\n        markChildLayoutAsPending: id => {\n          pendingChildIds.add(id);\n        },\n        unmarkChildLayoutAsPending: id => {\n          if (pendingChildIds.has(id)) {\n            pendingChildIds.delete(id);\n            recyclerViewContext.layout();\n          }\n        }\n      };\n    }, [handlerMethods, parentRecyclerViewContext, pendingChildIds, recyclerViewManager.isDisposed, setLayoutTreeId]);\n    /**\n     * Validates that item dimensions match the expected layout\n     */\n    const validateItemSize = (0, _react.useCallback)((index, size) => {\n      var _a, _b, _c, _d;\n      const layout = recyclerViewManager.getLayout(index);\n      const width = Math.max(Math.min(layout.width, (_a = layout.maxWidth) !== null && _a !== void 0 ? _a : Infinity), (_b = layout.minWidth) !== null && _b !== void 0 ? _b : 0);\n      const height = Math.max(Math.min(layout.height, (_c = layout.maxHeight) !== null && _c !== void 0 ? _c : Infinity), (_d = layout.minHeight) !== null && _d !== void 0 ? _d : 0);\n      if ((0, _utilsMeasureLayout.areDimensionsNotEqual)(width, size.width) || (0, _utilsMeasureLayout.areDimensionsNotEqual)(height, size.height)) {\n        // console.log(\n        //   \"invalid size\",\n        //   index,\n        //   width,\n        //   size.width,\n        //   height,\n        //   size.height\n        // );\n        // TODO: Add a warning for missing useLayoutState\n        recyclerViewContext.layout();\n      }\n    }, [recyclerViewContext, recyclerViewManager]);\n    // Get secondary props and components\n    const {\n      refreshControl,\n      renderHeader,\n      renderFooter,\n      renderEmpty,\n      CompatScrollView\n    } = (0, _hooksUseSecondaryProps.useSecondaryProps)(props);\n    if (!recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.getDataLength() > 0) {\n      parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.markChildLayoutAsPending(recyclerViewId);\n    }\n    // Render sticky headers if configured\n    const stickyHeaders = (0, _react.useMemo)(() => {\n      if (data && data.length > 0 && stickyHeaderIndices && stickyHeaderIndices.length > 0) {\n        if (horizontal) {\n          throw new Error(_errorsErrorMessages.ErrorMessages.stickyHeadersNotSupportedForHorizontal);\n        }\n        return /*#__PURE__*/React.default.createElement(_componentsStickyHeaders.StickyHeaders, {\n          stickyHeaderIndices: stickyHeaderIndices,\n          data: data,\n          renderItem: renderItem,\n          scrollY: scrollY,\n          stickyHeaderRef: stickyHeaderRef,\n          recyclerViewManager: recyclerViewManager,\n          extraData: extraData\n        });\n      }\n      return null;\n    }, [data, stickyHeaderIndices, renderItem, scrollY, horizontal, recyclerViewManager, extraData]);\n    // Set up scroll event handling with animation support for sticky headers\n    const animatedEvent = (0, _react.useMemo)(() => {\n      if (stickyHeaders) {\n        return Animated.default.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true,\n          listener: onScrollHandler\n        });\n      }\n      return onScrollHandler;\n    }, [onScrollHandler, scrollY, stickyHeaders]);\n    const shouldMaintainVisibleContentPosition = recyclerViewManager.shouldMaintainVisibleContentPosition();\n    const maintainVisibleContentPositionInternal = (0, _react.useMemo)(() => {\n      if (shouldMaintainVisibleContentPosition) {\n        return Object.assign({}, maintainVisibleContentPosition, {\n          minIndexForVisible: 0\n        });\n      }\n      return undefined;\n    }, [maintainVisibleContentPosition, shouldMaintainVisibleContentPosition]);\n    const shouldRenderFromBottom = recyclerViewManager.getDataLength() > 0 && ((_a = maintainVisibleContentPosition === null || maintainVisibleContentPosition === void 0 ? void 0 : maintainVisibleContentPosition.startRenderingFromBottom) !== null && _a !== void 0 ? _a : false);\n    // Create view for measuring bounded size\n    const viewToMeasureBoundedSize = (0, _react.useMemo)(() => {\n      return /*#__PURE__*/React.default.createElement(_componentsCompatView.CompatView, {\n        style: {\n          height: horizontal ? undefined : 0,\n          width: horizontal ? 0 : undefined\n        },\n        ref: firstChildViewRef\n      });\n    }, [horizontal]);\n    const scrollAnchor = (0, _react.useMemo)(() => {\n      if (shouldMaintainVisibleContentPosition) {\n        return /*#__PURE__*/React.default.createElement(_componentsScrollAnchor.ScrollAnchor, {\n          horizontal: Boolean(horizontal),\n          scrollAnchorRef: scrollAnchorRef\n        });\n      }\n      return null;\n    }, [horizontal, shouldMaintainVisibleContentPosition]);\n    // console.log(\"render\", recyclerViewManager.getRenderStack());\n    // Render the main RecyclerView structure\n    return /*#__PURE__*/React.default.createElement(_RecyclerViewContextProvider.RecyclerViewContextProvider, {\n      value: recyclerViewContext\n    }, /*#__PURE__*/React.default.createElement(_componentsCompatView.CompatView, {\n      style: [{\n        flex: horizontal ? undefined : 1,\n        overflow: \"hidden\"\n      }, style],\n      ref: internalViewRef,\n      collapsable: false,\n      onLayout: event => {\n        var _a, _b, _c, _d;\n        if ((0, _utilsMeasureLayout.areDimensionsNotEqual)(event.nativeEvent.layout.width, (_b = (_a = containerViewSizeRef.current) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0) || (0, _utilsMeasureLayout.areDimensionsNotEqual)(event.nativeEvent.layout.height, (_d = (_c = containerViewSizeRef.current) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 0)) {\n          // console.log(\n          //   \"onLayout\",\n          //   recyclerViewManager.getWindowSize(),\n          //   event.nativeEvent.layout\n          // );\n          recyclerViewContext.layout();\n        }\n      }\n    }, /*#__PURE__*/React.default.createElement(CompatScrollView, Object.assign({}, rest, {\n      horizontal: horizontal,\n      ref: scrollViewRef,\n      onScroll: animatedEvent,\n      maintainVisibleContentPosition: maintainVisibleContentPositionInternal,\n      refreshControl: refreshControl\n    }, overrideProps), scrollAnchor, isHorizontalRTL && viewToMeasureBoundedSize, renderHeader, !isHorizontalRTL && viewToMeasureBoundedSize, /*#__PURE__*/React.default.createElement(_ViewHolderCollection.ViewHolderCollection, {\n      viewHolderCollectionRef: viewHolderCollectionRef,\n      data: data,\n      horizontal: horizontal,\n      renderStack: recyclerViewManager.getRenderStack(),\n      getLayout: index => recyclerViewManager.getLayout(index),\n      getAdjustmentMargin: () => {\n        if (!shouldRenderFromBottom || !recyclerViewManager.hasLayout()) {\n          return 0;\n        }\n        const windowSize = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n        const childContainerSize = horizontal ? recyclerViewManager.getChildContainerDimensions().width : recyclerViewManager.getChildContainerDimensions().height;\n        return Math.max(0, windowSize - childContainerSize - recyclerViewManager.firstItemOffset);\n      },\n      refHolder: refHolder,\n      onSizeChanged: validateItemSize,\n      renderItem: renderItem,\n      extraData: extraData,\n      onCommitLayoutEffect: () => {\n        applyInitialScrollIndex();\n        parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.unmarkChildLayoutAsPending(recyclerViewId);\n        onCommitLayoutEffect === null || onCommitLayoutEffect === void 0 ? void 0 : onCommitLayoutEffect();\n      },\n      onCommitEffect: () => {\n        renderTimeTracker.markRenderComplete();\n        recyclerViewManager.updateAverageRenderTime(renderTimeTracker.getAverageRenderTime());\n        applyInitialScrollIndex();\n        checkBounds();\n        recyclerViewManager.computeItemViewability();\n        recyclerViewManager.animationOptimizationsEnabled = false;\n      },\n      CellRendererComponent: CellRendererComponent,\n      ItemSeparatorComponent: ItemSeparatorComponent,\n      getChildContainerLayout: () => recyclerViewManager.hasLayout() ? recyclerViewManager.getChildContainerDimensions() : undefined\n    }), renderEmpty, renderFooter), stickyHeaders));\n  };\n  // Set displayName for the inner component\n  RecyclerViewComponent.displayName = \"FlashList\";\n  // Create and export the memoized, forwarded ref component\n  const RecyclerView = /*#__PURE__*/React.default.memo(/*#__PURE__*/(0, _react.forwardRef)(RecyclerViewComponent));\n});","lineCount":411,"map":[[5,2,1,0],[6,0,2,0],[7,0,3,0],[8,0,4,0],[9,2,1,0,"Object"],[9,8,1,0],[9,9,1,0,"defineProperty"],[9,23,1,0],[9,24,1,0,"exports"],[9,31,1,0],[10,4,1,0,"value"],[10,9,1,0],[11,2,1,0],[12,2,1,0],[12,11,1,0,"_interopDefault"],[12,27,1,0,"e"],[12,28,1,0],[13,4,1,0],[13,11,1,0,"e"],[13,12,1,0],[13,16,1,0,"e"],[13,17,1,0],[13,18,1,0,"__esModule"],[13,28,1,0],[13,31,1,0,"e"],[13,32,1,0],[14,6,1,0,"default"],[14,13,1,0],[14,15,1,0,"e"],[15,4,1,0],[16,2,1,0],[17,2,367,0,"Object"],[17,8,367,0],[17,9,367,0,"defineProperty"],[17,23,367,0],[17,24,367,0,"exports"],[17,31,367,0],[18,4,367,0,"enumerable"],[18,14,367,0],[19,4,367,0,"get"],[19,7,367,0],[19,18,367,0,"get"],[19,19,367,0],[20,6,367,0],[20,13,367,9,"RecyclerView"],[20,25,367,21],[21,4,367,21],[22,2,367,21],[23,2,367,24],[23,6,367,24,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[23,54,367,24],[23,57,367,24,"require"],[23,64,367,24],[23,65,367,24,"_dependencyMap"],[23,79,367,24],[24,2,367,24],[24,6,367,24,"_objectWithoutPropertiesLoose"],[24,35,367,24],[24,38,367,24,"_interopDefault"],[24,53,367,24],[24,54,367,24,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[24,102,367,24],[25,2,5,0],[25,6,5,0,"_react"],[25,12,5,0],[25,15,5,0,"require"],[25,22,5,0],[25,23,5,0,"_dependencyMap"],[25,37,5,0],[26,2,5,0],[26,6,5,0,"React"],[26,11,5,0],[26,14,5,0,"_interopDefault"],[26,29,5,0],[26,30,5,0,"_react"],[26,36,5,0],[27,2,5,107],[27,6,5,107,"_reactNativeWebDistExportsAnimated"],[27,40,5,107],[27,43,5,107,"require"],[27,50,5,107],[27,51,5,107,"_dependencyMap"],[27,65,5,107],[28,2,5,107],[28,6,5,107,"Animated"],[28,14,5,107],[28,17,5,107,"_interopDefault"],[28,32,5,107],[28,33,5,107,"_reactNativeWebDistExportsAnimated"],[28,67,5,107],[29,2,5,107],[29,6,5,107,"_reactNativeWebDistExportsI18nManager"],[29,43,5,107],[29,46,5,107,"require"],[29,53,5,107],[29,54,5,107,"_dependencyMap"],[29,68,5,107],[30,2,5,107],[30,6,5,107,"I18nManager"],[30,17,5,107],[30,20,5,107,"_interopDefault"],[30,35,5,107],[30,36,5,107,"_reactNativeWebDistExportsI18nManager"],[30,73,5,107],[31,2,7,0],[31,6,7,0,"_errorsErrorMessages"],[31,26,7,0],[31,29,7,0,"require"],[31,36,7,0],[31,37,7,0,"_dependencyMap"],[31,51,7,0],[32,2,8,0],[32,6,8,0,"_errorsWarningMessages"],[32,28,8,0],[32,31,8,0,"require"],[32,38,8,0],[32,39,8,0,"_dependencyMap"],[32,53,8,0],[33,2,9,0],[33,6,9,0,"_utilsMeasureLayout"],[33,25,9,0],[33,28,9,0,"require"],[33,35,9,0],[33,36,9,0,"_dependencyMap"],[33,50,9,0],[34,2,10,0],[34,6,10,0,"_RecyclerViewContextProvider"],[34,34,10,0],[34,37,10,0,"require"],[34,44,10,0],[34,45,10,0,"_dependencyMap"],[34,59,10,0],[35,2,11,0],[35,6,11,0,"_hooksUseLayoutState"],[35,26,11,0],[35,29,11,0,"require"],[35,36,11,0],[35,37,11,0,"_dependencyMap"],[35,51,11,0],[36,2,12,0],[36,6,12,0,"_hooksUseRecyclerViewManager"],[36,34,12,0],[36,37,12,0,"require"],[36,44,12,0],[36,45,12,0,"_dependencyMap"],[36,59,12,0],[37,2,13,0],[37,6,13,0,"_hooksUseOnLoad"],[37,21,13,0],[37,24,13,0,"require"],[37,31,13,0],[37,32,13,0,"_dependencyMap"],[37,46,13,0],[38,2,14,0],[38,6,14,0,"_ViewHolderCollection"],[38,27,14,0],[38,30,14,0,"require"],[38,37,14,0],[38,38,14,0,"_dependencyMap"],[38,52,14,0],[39,2,15,0],[39,6,15,0,"_componentsCompatView"],[39,27,15,0],[39,30,15,0,"require"],[39,37,15,0],[39,38,15,0,"_dependencyMap"],[39,52,15,0],[40,2,16,0],[40,6,16,0,"_hooksUseBoundDetection"],[40,29,16,0],[40,32,16,0,"require"],[40,39,16,0],[40,40,16,0,"_dependencyMap"],[40,54,16,0],[41,2,17,0],[41,6,17,0,"_utilsAdjustOffsetForRTL"],[41,30,17,0],[41,33,17,0,"require"],[41,40,17,0],[41,41,17,0,"_dependencyMap"],[41,55,17,0],[42,2,18,0],[42,6,18,0,"_hooksUseSecondaryProps"],[42,29,18,0],[42,32,18,0,"require"],[42,39,18,0],[42,40,18,0,"_dependencyMap"],[42,54,18,0],[43,2,19,0],[43,6,19,0,"_componentsStickyHeaders"],[43,30,19,0],[43,33,19,0,"require"],[43,40,19,0],[43,41,19,0,"_dependencyMap"],[43,55,19,0],[44,2,20,0],[44,6,20,0,"_componentsScrollAnchor"],[44,29,20,0],[44,32,20,0,"require"],[44,39,20,0],[44,40,20,0,"_dependencyMap"],[44,54,20,0],[45,2,21,0],[45,6,21,0,"_hooksUseRecyclerViewController"],[45,37,21,0],[45,40,21,0,"require"],[45,47,21,0],[45,48,21,0,"_dependencyMap"],[45,62,21,0],[46,2,22,0],[46,6,22,0,"_helpersRenderTimeTracker"],[46,31,22,0],[46,34,22,0,"require"],[46,41,22,0],[46,42,22,0,"_dependencyMap"],[46,56,22,0],[47,2,23,0],[48,0,24,0],[49,0,25,0],[50,0,26,0],[51,2,27,0],[51,8,27,6,"RecyclerViewComponent"],[51,29,27,27],[51,32,27,30,"RecyclerViewComponent"],[51,33,27,31,"props"],[51,38,27,36],[51,40,27,38,"ref"],[51,43,27,41],[51,48,27,46],[52,4,28,4],[52,8,28,8,"_a"],[52,10,28,10],[53,4,29,4],[54,4,30,4],[54,10,30,10],[55,8,30,12,"horizontal"],[55,18,30,22],[56,8,30,24,"renderItem"],[56,18,30,34],[57,8,30,36,"data"],[57,12,30,40],[58,8,30,42,"extraData"],[58,17,30,51],[59,8,30,53,"onLoad"],[59,14,30,59],[60,8,30,61,"CellRendererComponent"],[60,29,30,82],[61,8,30,84,"overrideProps"],[61,21,30,97],[62,8,30,256,"ItemSeparatorComponent"],[62,30,30,278],[63,8,30,303,"style"],[63,13,30,308],[64,8,30,310,"stickyHeaderIndices"],[64,27,30,329],[65,8,30,331,"maintainVisibleContentPosition"],[65,38,30,361],[66,8,30,363,"onCommitLayoutEffect"],[67,6,30,393],[67,7,30,394],[67,10,30,397,"props"],[67,15,30,402],[68,6,30,388,"rest"],[68,10,30,392],[68,17,30,392,"_objectWithoutPropertiesLoose"],[68,46,30,392],[68,47,30,392,"default"],[68,54,30,392],[68,56,30,397,"props"],[68,61,30,402],[68,63,30,402,"_excluded"],[68,72,30,402],[69,4,31,4],[69,10,31,10],[69,11,31,11,"renderTimeTracker"],[69,28,31,28],[69,29,31,29],[69,32,31,32],[69,36,31,32,"useState"],[69,42,31,40],[69,43,31,40,"useState"],[69,51,31,40],[69,53,31,41],[69,59,31,47],[69,63,31,51,"RenderTimeTracker"],[69,88,31,68],[69,89,31,68,"RenderTimeTracker"],[69,106,31,68],[69,107,31,69],[69,108,31,70],[69,109,31,71],[70,4,32,4,"renderTimeTracker"],[70,21,32,21],[70,22,32,22,"startTracking"],[70,35,32,35],[70,36,32,36],[70,37,32,37],[71,4,33,4],[72,4,34,4],[72,10,34,10,"scrollViewRef"],[72,23,34,23],[72,26,34,26],[72,30,34,26,"useRef"],[72,36,34,32],[72,37,34,32,"useRef"],[72,43,34,32],[72,45,34,33],[72,49,34,37],[72,50,34,38],[73,4,35,4],[73,10,35,10,"internalViewRef"],[73,25,35,25],[73,28,35,28],[73,32,35,28,"useRef"],[73,38,35,34],[73,39,35,34,"useRef"],[73,45,35,34],[73,47,35,35],[73,51,35,39],[73,52,35,40],[74,4,36,4],[74,10,36,10,"firstChildViewRef"],[74,27,36,27],[74,30,36,30],[74,34,36,30,"useRef"],[74,40,36,36],[74,41,36,36,"useRef"],[74,47,36,36],[74,49,36,37],[74,53,36,41],[74,54,36,42],[75,4,37,4],[75,10,37,10,"containerViewSizeRef"],[75,30,37,30],[75,33,37,33],[75,37,37,33,"useRef"],[75,43,37,39],[75,44,37,39,"useRef"],[75,50,37,39],[75,52,37,40,"undefined"],[75,61,37,49],[75,62,37,50],[76,4,38,4],[76,10,38,10,"pendingChildIds"],[76,25,38,25],[76,28,38,28],[76,32,38,28,"useRef"],[76,38,38,34],[76,39,38,34,"useRef"],[76,45,38,34],[76,47,38,35],[76,51,38,39,"Set"],[76,54,38,42],[76,55,38,43],[76,56,38,44],[76,57,38,45],[76,58,38,46,"current"],[76,65,38,53],[77,4,39,4],[78,4,40,4],[78,10,40,10,"scrollY"],[78,17,40,17],[78,20,40,20],[78,24,40,20,"useRef"],[78,30,40,26],[78,31,40,26,"useRef"],[78,37,40,26],[78,39,40,27],[78,43,40,31,"Animated"],[78,51,40,39],[78,52,40,39,"default"],[78,59,40,39],[78,60,40,40,"Value"],[78,65,40,45],[78,66,40,46],[78,67,40,47],[78,68,40,48],[78,69,40,49],[78,70,40,50,"current"],[78,77,40,57],[79,4,41,4],[80,4,42,4],[80,10,42,10,"stickyHeaderRef"],[80,25,42,25],[80,28,42,28],[80,32,42,28,"useRef"],[80,38,42,34],[80,39,42,34,"useRef"],[80,45,42,34],[80,47,42,35],[80,51,42,39],[80,52,42,40],[81,4,43,4],[81,10,43,10,"scrollAnchorRef"],[81,25,43,25],[81,28,43,28],[81,32,43,28,"useRef"],[81,38,43,34],[81,39,43,34,"useRef"],[81,45,43,34],[81,47,43,35],[81,51,43,39],[81,52,43,40],[82,4,44,4],[83,4,45,4],[83,10,45,10],[83,11,45,11,"_"],[83,12,45,12],[83,14,45,14,"setLayoutTreeId"],[83,29,45,29],[83,30,45,30],[83,33,45,33],[83,37,45,33,"useLayoutState"],[83,57,45,47],[83,58,45,47,"useLayoutState"],[83,72,45,47],[83,74,45,48],[83,75,45,49],[83,76,45,50],[84,4,46,4],[84,10,46,10],[84,11,46,11,"__"],[84,13,46,13],[84,15,46,15,"setRenderId"],[84,26,46,26],[84,27,46,27],[84,30,46,30],[84,34,46,30,"useState"],[84,40,46,38],[84,41,46,38,"useState"],[84,49,46,38],[84,51,46,39],[84,52,46,40],[84,53,46,41],[85,4,47,4],[86,4,48,4],[86,10,48,10,"refHolder"],[86,19,48,19],[86,22,48,22],[86,26,48,22,"useMemo"],[86,32,48,29],[86,33,48,29,"useMemo"],[86,40,48,29],[86,42,48,30],[86,48,48,36],[86,52,48,40,"Map"],[86,55,48,43],[86,56,48,44],[86,57,48,45],[86,59,48,47],[86,61,48,49],[86,62,48,50],[87,4,49,4],[88,4,50,4],[88,10,50,10],[89,6,50,12,"recyclerViewManager"],[89,25,50,31],[90,6,50,33,"velocityTracker"],[91,4,50,49],[91,5,50,50],[91,8,50,53],[91,12,50,53,"useRecyclerViewManager"],[91,40,50,75],[91,41,50,75,"useRecyclerViewManager"],[91,63,50,75],[91,65,50,76,"props"],[91,70,50,81],[91,71,50,82],[92,4,51,4],[92,10,51,10],[93,6,51,12,"applyOffsetCorrection"],[93,27,51,33],[94,6,51,35,"computeFirstVisibleIndexForOffsetCorrection"],[94,49,51,78],[95,6,51,80,"applyInitialScrollIndex"],[95,29,51,103],[96,6,51,105,"handlerMethods"],[97,4,51,121],[97,5,51,122],[97,8,51,125],[97,12,51,125,"useRecyclerViewController"],[97,43,51,150],[97,44,51,150,"useRecyclerViewController"],[97,69,51,150],[97,71,51,151,"recyclerViewManager"],[97,90,51,170],[97,92,51,172,"ref"],[97,95,51,175],[97,97,51,177,"scrollViewRef"],[97,110,51,190],[97,112,51,192,"scrollAnchorRef"],[97,127,51,207],[97,128,51,208],[98,4,52,4],[99,4,53,4],[99,10,53,10,"viewHolderCollectionRef"],[99,33,53,33],[99,36,53,36],[99,40,53,36,"useRef"],[99,46,53,42],[99,47,53,42,"useRef"],[99,53,53,42],[99,55,53,43],[99,59,53,47],[99,60,53,48],[100,4,54,4],[101,4,55,4],[101,8,55,4,"useOnListLoad"],[101,23,55,17],[101,24,55,17,"useOnListLoad"],[101,37,55,17],[101,39,55,18,"recyclerViewManager"],[101,58,55,37],[101,60,55,39,"onLoad"],[101,66,55,45],[101,67,55,46],[102,4,56,4],[103,4,57,4],[103,10,57,10],[104,6,57,12,"checkBounds"],[105,4,57,24],[105,5,57,25],[105,8,57,28],[105,12,57,28,"useBoundDetection"],[105,35,57,45],[105,36,57,45,"useBoundDetection"],[105,53,57,45],[105,55,57,46,"recyclerViewManager"],[105,74,57,65],[105,76,57,67,"scrollViewRef"],[105,89,57,80],[105,90,57,81],[106,4,58,4],[106,10,58,10,"isHorizontalRTL"],[106,25,58,25],[106,28,58,28,"I18nManager"],[106,39,58,39],[106,40,58,39,"default"],[106,47,58,39],[106,48,58,40,"isRTL"],[106,53,58,45],[106,57,58,49,"horizontal"],[106,67,58,59],[107,4,59,4],[108,0,60,0],[109,0,61,0],[110,0,62,0],[111,4,63,4],[111,8,63,4,"useLayoutEffect"],[111,14,63,19],[111,15,63,19,"useLayoutEffect"],[111,30,63,19],[111,32,63,20],[111,38,63,26],[112,6,64,8],[112,10,64,12,"internalViewRef"],[112,25,64,27],[112,26,64,28,"current"],[112,33,64,35],[112,37,64,39,"firstChildViewRef"],[112,54,64,56],[112,55,64,57,"current"],[112,62,64,64],[112,64,64,66],[113,8,65,12],[114,8,66,12],[114,14,66,18,"outerViewLayout"],[114,29,66,33],[114,32,66,36],[114,36,66,36,"measureParentSize"],[114,55,66,53],[114,56,66,53,"measureParentSize"],[114,73,66,53],[114,75,66,54,"internalViewRef"],[114,90,66,69],[114,91,66,70,"current"],[114,98,66,77],[114,99,66,78],[115,8,67,12],[115,14,67,18,"firstChildViewLayout"],[115,34,67,38],[115,37,67,41],[115,41,67,41,"measureFirstChildLayout"],[115,60,67,64],[115,61,67,64,"measureFirstChildLayout"],[115,84,67,64],[115,86,67,65,"firstChildViewRef"],[115,103,67,82],[115,104,67,83,"current"],[115,111,67,90],[115,113,67,92,"internalViewRef"],[115,128,67,107],[115,129,67,108,"current"],[115,136,67,115],[115,137,67,116],[116,8,68,12,"containerViewSizeRef"],[116,28,68,32],[116,29,68,33,"current"],[116,36,68,40],[116,39,68,43,"outerViewLayout"],[116,54,68,58],[117,8,69,12],[118,8,70,12],[118,14,70,18,"firstItemOffset"],[118,29,70,33],[118,32,70,36,"horizontal"],[118,42,70,46],[118,45,71,18,"firstChildViewLayout"],[118,65,71,38],[118,66,71,39,"x"],[118,67,71,40],[118,70,71,43,"outerViewLayout"],[118,85,71,58],[118,86,71,59,"x"],[118,87,71,60],[118,90,72,18,"firstChildViewLayout"],[118,110,72,38],[118,111,72,39,"y"],[118,112,72,40],[118,115,72,43,"outerViewLayout"],[118,130,72,58],[118,131,72,59,"y"],[118,132,72,60],[119,8,73,12],[120,8,74,12,"recyclerViewManager"],[120,27,74,31],[120,28,74,32,"updateLayoutParams"],[120,46,74,50],[120,47,74,51],[121,10,75,16,"width"],[121,15,75,21],[121,17,75,23,"horizontal"],[121,27,75,33],[121,30,76,22,"outerViewLayout"],[121,45,76,37],[121,46,76,38,"width"],[121,51,76,43],[121,54,77,22,"firstChildViewLayout"],[121,74,77,42],[121,75,77,43,"width"],[121,80,77,48],[122,10,78,16,"height"],[122,16,78,22],[122,18,78,24,"horizontal"],[122,28,78,34],[122,31,79,22,"firstChildViewLayout"],[122,51,79,42],[122,52,79,43,"height"],[122,58,79,49],[122,61,80,22,"outerViewLayout"],[122,76,80,37],[122,77,80,38,"height"],[123,8,81,12],[123,9,81,13],[123,11,81,15,"isHorizontalRTL"],[123,26,81,30],[123,30,81,34,"recyclerViewManager"],[123,49,81,53],[123,50,81,54,"hasLayout"],[123,59,81,63],[123,60,81,64],[123,61,81,65],[123,64,82,18,"firstItemOffset"],[123,79,82,33],[123,82,83,20,"recyclerViewManager"],[123,101,83,39],[123,102,83,40,"getChildContainerDimensions"],[123,129,83,67],[123,130,83,68],[123,131,83,69],[123,132,83,70,"width"],[123,137,83,75],[123,140,84,18,"firstItemOffset"],[123,155,84,33],[123,156,84,34],[124,6,85,8],[125,4,86,4],[125,5,86,5],[125,6,86,6],[126,4,87,4],[127,0,88,0],[128,0,89,0],[129,0,90,0],[130,4,91,4],[131,4,92,4],[131,8,92,4,"useLayoutEffect"],[131,14,92,19],[131,15,92,19,"useLayoutEffect"],[131,30,92,19],[131,32,92,20],[131,38,92,26],[132,6,93,8],[132,10,93,12,"_a"],[132,12,93,14],[132,14,93,16,"_b"],[132,16,93,18],[133,6,94,8],[133,10,94,12,"pendingChildIds"],[133,25,94,27],[133,26,94,28,"size"],[133,30,94,32],[133,33,94,35],[133,34,94,36],[133,36,94,38],[134,8,95,12],[135,6,96,8],[136,6,97,8],[136,12,97,14,"layoutInfo"],[136,22,97,24],[136,25,97,27,"Array"],[136,30,97,32],[136,31,97,33,"from"],[136,35,97,37],[136,36,97,38,"refHolder"],[136,45,97,47],[136,47,97,49],[136,48,97,50],[136,49,97,51,"index"],[136,54,97,56],[136,56,97,58,"viewHolderRef"],[136,69,97,71],[136,70,97,72],[136,75,97,77],[137,8,98,12],[137,14,98,18,"layout"],[137,20,98,24],[137,23,98,27],[137,27,98,27,"measureItemLayout"],[137,46,98,44],[137,47,98,44,"measureItemLayout"],[137,64,98,44],[137,66,98,45,"viewHolderRef"],[137,79,98,58],[137,80,98,59,"current"],[137,87,98,66],[137,89,98,68,"recyclerViewManager"],[137,108,98,87],[137,109,98,88,"tryGetLayout"],[137,121,98,100],[137,122,98,101,"index"],[137,127,98,106],[137,128,98,107],[137,129,98,108],[138,8,99,12],[139,8,100,12],[140,8,101,12],[141,8,102,12],[142,8,103,12],[143,8,104,12],[144,8,105,12],[145,8,106,12],[146,8,107,12],[147,8,108,12],[148,8,109,12],[149,8,110,12],[150,8,111,12],[151,8,112,12],[151,15,112,19],[152,10,112,21,"index"],[152,15,112,26],[153,10,112,28,"dimensions"],[153,20,112,38],[153,22,112,40,"layout"],[154,8,112,47],[154,9,112,48],[155,6,113,8],[155,7,113,9],[155,8,113,10],[156,6,114,8],[156,12,114,14,"hasExceededMaxRendersWithoutCommit"],[156,46,114,48],[156,49,114,51,"renderTimeTracker"],[156,66,114,68],[156,67,114,69,"hasExceededMaxRendersWithoutCommit"],[156,101,114,103],[156,102,114,104],[156,103,114,105],[157,6,115,8],[157,10,115,12,"hasExceededMaxRendersWithoutCommit"],[157,44,115,46],[157,46,115,48],[158,8,116,12,"console"],[158,15,116,19],[158,16,116,20,"warn"],[158,20,116,24],[158,21,116,25,"WarningMessages"],[158,43,116,40],[158,44,116,40,"WarningMessages"],[158,59,116,40],[158,60,116,41,"exceededMaxRendersWithoutCommit"],[158,91,116,72],[158,92,116,73],[159,6,117,8],[160,6,118,8],[160,10,118,12,"recyclerViewManager"],[160,29,118,31],[160,30,118,32,"modifyChildrenLayout"],[160,50,118,52],[160,51,118,53,"layoutInfo"],[160,61,118,63],[160,63,118,65],[160,64,118,66,"_a"],[160,66,118,68],[160,69,118,71,"data"],[160,73,118,75],[160,78,118,80],[160,82,118,84],[160,86,118,88,"data"],[160,90,118,92],[160,95,118,97],[160,100,118,102],[160,101,118,103],[160,104,118,106],[160,109,118,111],[160,110,118,112],[160,113,118,115,"data"],[160,117,118,119],[160,118,118,120,"length"],[160,124,118,126],[160,130,118,132],[160,134,118,136],[160,138,118,140,"_a"],[160,140,118,142],[160,145,118,147],[160,150,118,152],[160,151,118,153],[160,154,118,156,"_a"],[160,156,118,158],[160,159,118,161],[160,160,118,162],[160,161,118,163],[160,165,119,12],[160,166,119,13,"hasExceededMaxRendersWithoutCommit"],[160,200,119,47],[160,202,119,49],[161,8,120,12],[162,8,121,12,"setRenderId"],[162,19,121,23],[162,20,121,25,"prev"],[162,24,121,29],[162,28,121,34,"prev"],[162,32,121,38],[162,35,121,41],[162,36,121,42],[162,37,121,43],[163,6,122,8],[163,7,122,9],[163,13,123,13],[164,8,124,12],[164,9,124,13,"_b"],[164,11,124,15],[164,14,124,18,"viewHolderCollectionRef"],[164,37,124,41],[164,38,124,42,"current"],[164,45,124,49],[164,51,124,55],[164,55,124,59],[164,59,124,63,"_b"],[164,61,124,65],[164,66,124,70],[164,71,124,75],[164,72,124,76],[164,75,124,79],[164,80,124,84],[164,81,124,85],[164,84,124,88,"_b"],[164,86,124,90],[164,87,124,91,"commitLayout"],[164,99,124,103],[164,100,124,104],[164,101,124,105],[165,8,125,12,"applyOffsetCorrection"],[165,29,125,33],[165,30,125,34],[165,31,125,35],[166,6,126,8],[167,6,127,8],[167,10,127,12,"horizontal"],[167,20,127,22],[167,24,128,12,"recyclerViewManager"],[167,43,128,31],[167,44,128,32,"hasLayout"],[167,53,128,41],[167,54,128,42],[167,55,128,43],[167,59,129,12,"recyclerViewManager"],[167,78,129,31],[167,79,129,32,"getWindowSize"],[167,92,129,45],[167,93,129,46],[167,94,129,47],[167,95,129,48,"height"],[167,101,129,54],[167,104,129,57],[167,105,129,58],[167,107,129,60],[168,8,130,12],[169,8,131,12],[170,8,132,12],[171,8,133,12,"parentRecyclerViewContext"],[171,33,133,37],[171,38,133,42],[171,42,133,46],[171,46,133,50,"parentRecyclerViewContext"],[171,71,133,75],[171,76,133,80],[171,81,133,85],[171,82,133,86],[171,85,133,89],[171,90,133,94],[171,91,133,95],[171,94,133,98,"parentRecyclerViewContext"],[171,119,133,123],[171,120,133,124,"unmarkChildLayoutAsPending"],[171,146,133,150],[171,147,133,151,"recyclerViewId"],[171,161,133,165],[171,162,133,166],[172,6,134,8],[173,4,135,4],[173,5,135,5],[173,6,135,6],[174,4,136,4],[175,0,137,0],[176,0,138,0],[177,4,139,4],[177,10,139,10,"onScrollHandler"],[177,25,139,25],[177,28,139,28],[177,32,139,28,"useCallback"],[177,38,139,39],[177,39,139,39,"useCallback"],[177,50,139,39],[177,52,139,41,"event"],[177,57,139,46],[177,61,139,51],[178,6,140,8],[178,10,140,12,"_a"],[178,12,140,14],[178,14,140,16,"_b"],[178,16,140,18],[178,18,140,20,"_c"],[178,20,140,22],[179,6,141,8],[179,10,141,12,"recyclerViewManager"],[179,29,141,31],[179,30,141,32,"ignoreScrollEvents"],[179,48,141,50],[179,50,141,52],[180,8,142,12],[181,6,143,8],[182,6,144,8],[182,10,144,12,"scrollOffset"],[182,22,144,24],[182,25,144,27,"horizontal"],[182,35,144,37],[182,38,145,14,"event"],[182,43,145,19],[182,44,145,20,"nativeEvent"],[182,55,145,31],[182,56,145,32,"contentOffset"],[182,69,145,45],[182,70,145,46,"x"],[182,71,145,47],[182,74,146,14,"event"],[182,79,146,19],[182,80,146,20,"nativeEvent"],[182,91,146,31],[182,92,146,32,"contentOffset"],[182,105,146,45],[182,106,146,46,"y"],[182,107,146,47],[183,6,147,8],[184,6,148,8],[184,10,148,12,"isHorizontalRTL"],[184,25,148,27],[184,27,148,29],[185,8,149,12,"scrollOffset"],[185,20,149,24],[185,23,149,27],[185,27,149,27,"adjustOffsetForRTL"],[185,51,149,45],[185,52,149,45,"adjustOffsetForRTL"],[185,70,149,45],[185,72,149,46,"scrollOffset"],[185,84,149,58],[185,86,149,60,"event"],[185,91,149,65],[185,92,149,66,"nativeEvent"],[185,103,149,77],[185,104,149,78,"contentSize"],[185,115,149,89],[185,116,149,90,"width"],[185,121,149,95],[185,123,149,97,"event"],[185,128,149,102],[185,129,149,103,"nativeEvent"],[185,140,149,114],[185,141,149,115,"layoutMeasurement"],[185,158,149,132],[185,159,149,133,"width"],[185,164,149,138],[185,165,149,139],[186,6,150,8],[187,6,151,8,"velocityTracker"],[187,21,151,23],[187,22,151,24,"computeVelocity"],[187,37,151,39],[187,38,151,40,"scrollOffset"],[187,50,151,52],[187,52,151,54,"recyclerViewManager"],[187,71,151,73],[187,72,151,74,"getAbsoluteLastScrollOffset"],[187,99,151,101],[187,100,151,102],[187,101,151,103],[187,103,151,105,"Boolean"],[187,110,151,112],[187,111,151,113,"horizontal"],[187,121,151,123],[187,122,151,124],[187,124,151,126],[187,125,151,127,"velocity"],[187,133,151,135],[187,135,151,137,"isMomentumEnd"],[187,148,151,150],[187,153,151,155],[188,8,152,12],[188,12,152,16,"recyclerViewManager"],[188,31,152,35],[188,32,152,36,"ignoreScrollEvents"],[188,50,152,54],[188,52,152,56],[189,10,153,16],[190,8,154,12],[191,8,155,12],[191,12,155,16,"isMomentumEnd"],[191,25,155,29],[191,27,155,31],[192,10,156,16,"computeFirstVisibleIndexForOffsetCorrection"],[192,53,156,59],[192,54,156,60],[192,55,156,61],[193,10,157,16],[193,14,157,20],[193,15,157,21,"recyclerViewManager"],[193,34,157,40],[193,35,157,41,"isOffsetProjectionEnabled"],[193,60,157,66],[193,62,157,68],[194,12,158,20],[195,10,159,16],[196,10,160,16,"recyclerViewManager"],[196,29,160,35],[196,30,160,36,"resetVelocityCompute"],[196,50,160,56],[196,51,160,57],[196,52,160,58],[197,8,161,12],[198,8,162,12],[199,8,163,12],[199,12,163,16,"recyclerViewManager"],[199,31,163,35],[199,32,163,36,"updateScrollOffset"],[199,50,163,54],[199,51,163,55,"scrollOffset"],[199,63,163,67],[199,65,163,69,"velocity"],[199,73,163,77],[199,74,163,78],[199,76,163,80],[200,10,164,16,"setRenderId"],[200,21,164,27],[200,22,164,29,"prev"],[200,26,164,33],[200,30,164,38,"prev"],[200,34,164,42],[200,37,164,45],[200,38,164,46],[200,39,164,47],[201,8,165,12],[202,6,166,8],[202,7,166,9],[202,8,166,10],[203,6,167,8],[204,6,168,8],[204,7,168,9,"_a"],[204,9,168,11],[204,12,168,14,"stickyHeaderRef"],[204,27,168,29],[204,28,168,30,"current"],[204,35,168,37],[204,41,168,43],[204,45,168,47],[204,49,168,51,"_a"],[204,51,168,53],[204,56,168,58],[204,61,168,63],[204,62,168,64],[204,65,168,67],[204,70,168,72],[204,71,168,73],[204,74,168,76,"_a"],[204,76,168,78],[204,77,168,79,"reportScrollEvent"],[204,94,168,96],[204,95,168,97,"event"],[204,100,168,102],[204,101,168,103,"nativeEvent"],[204,112,168,114],[204,113,168,115],[205,6,169,8,"checkBounds"],[205,17,169,19],[205,18,169,20],[205,19,169,21],[206,6,170,8],[207,6,171,8,"recyclerViewManager"],[207,25,171,27],[207,26,171,28,"recordInteraction"],[207,43,171,45],[207,44,171,46],[207,45,171,47],[208,6,172,8,"recyclerViewManager"],[208,25,172,27],[208,26,172,28,"computeItemViewability"],[208,48,172,50],[208,49,172,51],[208,50,172,52],[209,6,173,8],[210,6,174,8],[210,7,174,9,"_c"],[210,9,174,11],[210,12,174,14],[210,13,174,15,"_b"],[210,15,174,17],[210,18,174,20,"recyclerViewManager"],[210,37,174,39],[210,38,174,40,"props"],[210,43,174,45],[210,45,174,47,"onScroll"],[210,53,174,55],[210,59,174,61],[210,63,174,65],[210,67,174,69,"_c"],[210,69,174,71],[210,74,174,76],[210,79,174,81],[210,80,174,82],[210,83,174,85],[210,88,174,90],[210,89,174,91],[210,92,174,94,"_c"],[210,94,174,96],[210,95,174,97,"call"],[210,99,174,101],[210,100,174,102,"_b"],[210,102,174,104],[210,104,174,106,"event"],[210,109,174,111],[210,110,174,112],[211,4,175,4],[211,5,175,5],[211,7,175,7],[211,8,176,8,"checkBounds"],[211,19,176,19],[211,21,177,8,"computeFirstVisibleIndexForOffsetCorrection"],[211,64,177,51],[211,66,178,8,"horizontal"],[211,76,178,18],[211,78,179,8,"isHorizontalRTL"],[211,93,179,23],[211,95,180,8,"recyclerViewManager"],[211,114,180,27],[211,116,181,8,"velocityTracker"],[211,131,181,23],[211,132,182,5],[211,133,182,6],[212,4,183,4],[212,10,183,10,"parentRecyclerViewContext"],[212,35,183,35],[212,38,183,38],[212,42,183,38,"useRecyclerViewContext"],[212,70,183,60],[212,71,183,60,"useRecyclerViewContext"],[212,93,183,60],[212,95,183,61],[212,96,183,62],[213,4,184,4],[213,10,184,10,"recyclerViewId"],[213,24,184,24],[213,27,184,27],[213,31,184,27,"useId"],[213,37,184,32],[213,38,184,32,"useId"],[213,43,184,32],[213,45,184,33],[213,46,184,34],[214,4,185,4],[215,4,186,4],[215,10,186,10,"recyclerViewContext"],[215,29,186,29],[215,32,186,32],[215,36,186,32,"useMemo"],[215,42,186,39],[215,43,186,39,"useMemo"],[215,50,186,39],[215,52,186,40],[215,58,186,46],[216,6,187,8],[216,13,187,15],[217,8,188,12,"layout"],[217,14,188,18],[217,16,188,20,"layout"],[217,17,188,20],[217,22,188,26],[218,10,189,16,"setLayoutTreeId"],[218,25,189,31],[218,26,189,33,"prev"],[218,30,189,37],[218,34,189,42,"prev"],[218,38,189,46],[218,41,189,49],[218,42,189,50],[218,43,189,51],[219,8,190,12],[219,9,190,13],[220,8,191,12,"getRef"],[220,14,191,18],[220,16,191,20,"getRef"],[220,17,191,20],[220,22,191,26],[221,10,192,16],[221,14,192,20,"recyclerViewManager"],[221,33,192,39],[221,34,192,40,"isDisposed"],[221,44,192,50],[221,46,192,52],[222,12,193,20],[222,19,193,27],[222,23,193,31],[223,10,194,16],[224,10,195,16],[224,17,195,23,"handlerMethods"],[224,31,195,37],[225,8,196,12],[225,9,196,13],[226,8,197,12,"getParentRef"],[226,20,197,24],[226,22,197,26,"getParentRef"],[226,23,197,26],[226,28,197,32],[227,10,198,16],[227,14,198,20,"_a"],[227,16,198,22],[228,10,199,16],[228,17,199,23],[228,18,199,24,"_a"],[228,20,199,26],[228,23,199,29,"parentRecyclerViewContext"],[228,48,199,54],[228,53,199,59],[228,57,199,63],[228,61,199,67,"parentRecyclerViewContext"],[228,86,199,92],[228,91,199,97],[228,96,199,102],[228,97,199,103],[228,100,199,106],[228,105,199,111],[228,106,199,112],[228,109,199,115,"parentRecyclerViewContext"],[228,134,199,140],[228,135,199,141,"getRef"],[228,141,199,147],[228,142,199,148],[228,143,199,149],[228,149,199,155],[228,153,199,159],[228,157,199,163,"_a"],[228,159,199,165],[228,164,199,170],[228,169,199,175],[228,170,199,176],[228,173,199,179,"_a"],[228,175,199,181],[228,178,199,184],[228,182,199,188],[229,8,200,12],[229,9,200,13],[230,8,201,12,"getParentScrollViewRef"],[230,30,201,34],[230,32,201,36,"getParentScrollViewRef"],[230,33,201,36],[230,38,201,42],[231,10,202,16],[231,14,202,20,"_a"],[231,16,202,22],[232,10,203,16],[232,17,203,23],[232,18,203,24,"_a"],[232,20,203,26],[232,23,203,29,"parentRecyclerViewContext"],[232,48,203,54],[232,53,203,59],[232,57,203,63],[232,61,203,67,"parentRecyclerViewContext"],[232,86,203,92],[232,91,203,97],[232,96,203,102],[232,97,203,103],[232,100,203,106],[232,105,203,111],[232,106,203,112],[232,109,203,115,"parentRecyclerViewContext"],[232,134,203,140],[232,135,203,141,"getScrollViewRef"],[232,151,203,157],[232,152,203,158],[232,153,203,159],[232,159,203,165],[232,163,203,169],[232,167,203,173,"_a"],[232,169,203,175],[232,174,203,180],[232,179,203,185],[232,180,203,186],[232,183,203,189,"_a"],[232,185,203,191],[232,188,203,194],[232,192,203,198],[233,8,204,12],[233,9,204,13],[234,8,205,12,"getScrollViewRef"],[234,24,205,28],[234,26,205,30,"getScrollViewRef"],[234,27,205,30],[234,32,205,36],[235,10,206,16],[235,17,206,23,"scrollViewRef"],[235,30,206,36],[235,31,206,37,"current"],[235,38,206,44],[236,8,207,12],[236,9,207,13],[237,8,208,12,"markChildLayoutAsPending"],[237,32,208,36],[237,34,208,39,"id"],[237,36,208,41],[237,40,208,46],[238,10,209,16,"pendingChildIds"],[238,25,209,31],[238,26,209,32,"add"],[238,29,209,35],[238,30,209,36,"id"],[238,32,209,38],[238,33,209,39],[239,8,210,12],[239,9,210,13],[240,8,211,12,"unmarkChildLayoutAsPending"],[240,34,211,38],[240,36,211,41,"id"],[240,38,211,43],[240,42,211,48],[241,10,212,16],[241,14,212,20,"pendingChildIds"],[241,29,212,35],[241,30,212,36,"has"],[241,33,212,39],[241,34,212,40,"id"],[241,36,212,42],[241,37,212,43],[241,39,212,45],[242,12,213,20,"pendingChildIds"],[242,27,213,35],[242,28,213,36,"delete"],[242,34,213,42],[242,35,213,43,"id"],[242,37,213,45],[242,38,213,46],[243,12,214,20,"recyclerViewContext"],[243,31,214,39],[243,32,214,40,"layout"],[243,38,214,46],[243,39,214,47],[243,40,214,48],[244,10,215,16],[245,8,216,12],[246,6,217,8],[246,7,217,9],[247,4,218,4],[247,5,218,5],[247,7,218,7],[247,8,219,8,"handlerMethods"],[247,22,219,22],[247,24,220,8,"parentRecyclerViewContext"],[247,49,220,33],[247,51,221,8,"pendingChildIds"],[247,66,221,23],[247,68,222,8,"recyclerViewManager"],[247,87,222,27],[247,88,222,28,"isDisposed"],[247,98,222,38],[247,100,223,8,"setLayoutTreeId"],[247,115,223,23],[247,116,224,5],[247,117,224,6],[248,4,225,4],[249,0,226,0],[250,0,227,0],[251,4,228,4],[251,10,228,10,"validateItemSize"],[251,26,228,26],[251,29,228,29],[251,33,228,29,"useCallback"],[251,39,228,40],[251,40,228,40,"useCallback"],[251,51,228,40],[251,53,228,41],[251,54,228,42,"index"],[251,59,228,47],[251,61,228,49,"size"],[251,65,228,53],[251,70,228,58],[252,6,229,8],[252,10,229,12,"_a"],[252,12,229,14],[252,14,229,16,"_b"],[252,16,229,18],[252,18,229,20,"_c"],[252,20,229,22],[252,22,229,24,"_d"],[252,24,229,26],[253,6,230,8],[253,12,230,14,"layout"],[253,18,230,20],[253,21,230,23,"recyclerViewManager"],[253,40,230,42],[253,41,230,43,"getLayout"],[253,50,230,52],[253,51,230,53,"index"],[253,56,230,58],[253,57,230,59],[254,6,231,8],[254,12,231,14,"width"],[254,17,231,19],[254,20,231,22,"Math"],[254,24,231,26],[254,25,231,27,"max"],[254,28,231,30],[254,29,231,31,"Math"],[254,33,231,35],[254,34,231,36,"min"],[254,37,231,39],[254,38,231,40,"layout"],[254,44,231,46],[254,45,231,47,"width"],[254,50,231,52],[254,52,231,54],[254,53,231,55,"_a"],[254,55,231,57],[254,58,231,60,"layout"],[254,64,231,66],[254,65,231,67,"maxWidth"],[254,73,231,75],[254,79,231,81],[254,83,231,85],[254,87,231,89,"_a"],[254,89,231,91],[254,94,231,96],[254,99,231,101],[254,100,231,102],[254,103,231,105,"_a"],[254,105,231,107],[254,108,231,110,"Infinity"],[254,116,231,118],[254,117,231,119],[254,119,231,121],[254,120,231,122,"_b"],[254,122,231,124],[254,125,231,127,"layout"],[254,131,231,133],[254,132,231,134,"minWidth"],[254,140,231,142],[254,146,231,148],[254,150,231,152],[254,154,231,156,"_b"],[254,156,231,158],[254,161,231,163],[254,166,231,168],[254,167,231,169],[254,170,231,172,"_b"],[254,172,231,174],[254,175,231,177],[254,176,231,178],[254,177,231,179],[255,6,232,8],[255,12,232,14,"height"],[255,18,232,20],[255,21,232,23,"Math"],[255,25,232,27],[255,26,232,28,"max"],[255,29,232,31],[255,30,232,32,"Math"],[255,34,232,36],[255,35,232,37,"min"],[255,38,232,40],[255,39,232,41,"layout"],[255,45,232,47],[255,46,232,48,"height"],[255,52,232,54],[255,54,232,56],[255,55,232,57,"_c"],[255,57,232,59],[255,60,232,62,"layout"],[255,66,232,68],[255,67,232,69,"maxHeight"],[255,76,232,78],[255,82,232,84],[255,86,232,88],[255,90,232,92,"_c"],[255,92,232,94],[255,97,232,99],[255,102,232,104],[255,103,232,105],[255,106,232,108,"_c"],[255,108,232,110],[255,111,232,113,"Infinity"],[255,119,232,121],[255,120,232,122],[255,122,232,124],[255,123,232,125,"_d"],[255,125,232,127],[255,128,232,130,"layout"],[255,134,232,136],[255,135,232,137,"minHeight"],[255,144,232,146],[255,150,232,152],[255,154,232,156],[255,158,232,160,"_d"],[255,160,232,162],[255,165,232,167],[255,170,232,172],[255,171,232,173],[255,174,232,176,"_d"],[255,176,232,178],[255,179,232,181],[255,180,232,182],[255,181,232,183],[256,6,233,8],[256,10,233,12],[256,14,233,12,"areDimensionsNotEqual"],[256,33,233,33],[256,34,233,33,"areDimensionsNotEqual"],[256,55,233,33],[256,57,233,34,"width"],[256,62,233,39],[256,64,233,41,"size"],[256,68,233,45],[256,69,233,46,"width"],[256,74,233,51],[256,75,233,52],[256,79,234,12],[256,83,234,12,"areDimensionsNotEqual"],[256,102,234,33],[256,103,234,33,"areDimensionsNotEqual"],[256,124,234,33],[256,126,234,34,"height"],[256,132,234,40],[256,134,234,42,"size"],[256,138,234,46],[256,139,234,47,"height"],[256,145,234,53],[256,146,234,54],[256,148,234,56],[257,8,235,12],[258,8,236,12],[259,8,237,12],[260,8,238,12],[261,8,239,12],[262,8,240,12],[263,8,241,12],[264,8,242,12],[265,8,243,12],[266,8,244,12,"recyclerViewContext"],[266,27,244,31],[266,28,244,32,"layout"],[266,34,244,38],[266,35,244,39],[266,36,244,40],[267,6,245,8],[268,4,246,4],[268,5,246,5],[268,7,246,7],[268,8,246,8,"recyclerViewContext"],[268,27,246,27],[268,29,246,29,"recyclerViewManager"],[268,48,246,48],[268,49,246,49],[268,50,246,50],[269,4,247,4],[270,4,248,4],[270,10,248,10],[271,6,248,12,"refreshControl"],[271,20,248,26],[272,6,248,28,"renderHeader"],[272,18,248,40],[273,6,248,42,"renderFooter"],[273,18,248,54],[274,6,248,56,"renderEmpty"],[274,17,248,67],[275,6,248,69,"CompatScrollView"],[276,4,248,87],[276,5,248,88],[276,8,248,91],[276,12,248,91,"useSecondaryProps"],[276,35,248,108],[276,36,248,108,"useSecondaryProps"],[276,53,248,108],[276,55,248,109,"props"],[276,60,248,114],[276,61,248,115],[277,4,249,4],[277,8,249,8],[277,9,249,9,"recyclerViewManager"],[277,28,249,28],[277,29,249,29,"getIsFirstLayoutComplete"],[277,53,249,53],[277,54,249,54],[277,55,249,55],[277,59,250,8,"recyclerViewManager"],[277,78,250,27],[277,79,250,28,"getDataLength"],[277,92,250,41],[277,93,250,42],[277,94,250,43],[277,97,250,46],[277,98,250,47],[277,100,250,49],[278,6,251,8,"parentRecyclerViewContext"],[278,31,251,33],[278,36,251,38],[278,40,251,42],[278,44,251,46,"parentRecyclerViewContext"],[278,69,251,71],[278,74,251,76],[278,79,251,81],[278,80,251,82],[278,83,251,85],[278,88,251,90],[278,89,251,91],[278,92,251,94,"parentRecyclerViewContext"],[278,117,251,119],[278,118,251,120,"markChildLayoutAsPending"],[278,142,251,144],[278,143,251,145,"recyclerViewId"],[278,157,251,159],[278,158,251,160],[279,4,252,4],[280,4,253,4],[281,4,254,4],[281,10,254,10,"stickyHeaders"],[281,23,254,23],[281,26,254,26],[281,30,254,26,"useMemo"],[281,36,254,33],[281,37,254,33,"useMemo"],[281,44,254,33],[281,46,254,34],[281,52,254,40],[282,6,255,8],[282,10,255,12,"data"],[282,14,255,16],[282,18,256,12,"data"],[282,22,256,16],[282,23,256,17,"length"],[282,29,256,23],[282,32,256,26],[282,33,256,27],[282,37,257,12,"stickyHeaderIndices"],[282,56,257,31],[282,60,258,12,"stickyHeaderIndices"],[282,79,258,31],[282,80,258,32,"length"],[282,86,258,38],[282,89,258,41],[282,90,258,42],[282,92,258,44],[283,8,259,12],[283,12,259,16,"horizontal"],[283,22,259,26],[283,24,259,28],[284,10,260,16],[284,16,260,22],[284,20,260,26,"Error"],[284,25,260,31],[284,26,260,32,"ErrorMessages"],[284,46,260,45],[284,47,260,45,"ErrorMessages"],[284,60,260,45],[284,61,260,46,"stickyHeadersNotSupportedForHorizontal"],[284,99,260,84],[284,100,260,85],[285,8,261,12],[286,8,262,12],[286,28,262,20,"React"],[286,33,262,25],[286,34,262,25,"default"],[286,41,262,25],[286,42,262,26,"createElement"],[286,55,262,39],[286,56,262,40,"StickyHeaders"],[286,80,262,53],[286,81,262,53,"StickyHeaders"],[286,94,262,53],[286,96,262,55],[287,10,262,57,"stickyHeaderIndices"],[287,29,262,76],[287,31,262,78,"stickyHeaderIndices"],[287,50,262,97],[288,10,262,99,"data"],[288,14,262,103],[288,16,262,105,"data"],[288,20,262,109],[289,10,262,111,"renderItem"],[289,20,262,121],[289,22,262,123,"renderItem"],[289,32,262,133],[290,10,262,135,"scrollY"],[290,17,262,142],[290,19,262,144,"scrollY"],[290,26,262,151],[291,10,262,153,"stickyHeaderRef"],[291,25,262,168],[291,27,262,170,"stickyHeaderRef"],[291,42,262,185],[292,10,262,187,"recyclerViewManager"],[292,29,262,206],[292,31,262,208,"recyclerViewManager"],[292,50,262,227],[293,10,262,229,"extraData"],[293,19,262,238],[293,21,262,240,"extraData"],[294,8,262,250],[294,9,262,251],[294,10,262,252],[295,6,263,8],[296,6,264,8],[296,13,264,15],[296,17,264,19],[297,4,265,4],[297,5,265,5],[297,7,265,7],[297,8,266,8,"data"],[297,12,266,12],[297,14,267,8,"stickyHeaderIndices"],[297,33,267,27],[297,35,268,8,"renderItem"],[297,45,268,18],[297,47,269,8,"scrollY"],[297,54,269,15],[297,56,270,8,"horizontal"],[297,66,270,18],[297,68,271,8,"recyclerViewManager"],[297,87,271,27],[297,89,272,8,"extraData"],[297,98,272,17],[297,99,273,5],[297,100,273,6],[298,4,274,4],[299,4,275,4],[299,10,275,10,"animatedEvent"],[299,23,275,23],[299,26,275,26],[299,30,275,26,"useMemo"],[299,36,275,33],[299,37,275,33,"useMemo"],[299,44,275,33],[299,46,275,34],[299,52,275,40],[300,6,276,8],[300,10,276,12,"stickyHeaders"],[300,23,276,25],[300,25,276,27],[301,8,277,12],[301,15,277,19,"Animated"],[301,23,277,27],[301,24,277,27,"default"],[301,31,277,27],[301,32,277,28,"event"],[301,37,277,33],[301,38,277,34],[301,39,277,35],[302,10,277,37,"nativeEvent"],[302,21,277,48],[302,23,277,50],[303,12,277,52,"contentOffset"],[303,25,277,65],[303,27,277,67],[304,14,277,69,"y"],[304,15,277,70],[304,17,277,72,"scrollY"],[305,12,277,80],[306,10,277,82],[307,8,277,84],[307,9,277,85],[307,10,277,86],[307,12,277,88],[308,10,277,90,"useNativeDriver"],[308,25,277,105],[308,27,277,107],[308,31,277,111],[309,10,277,113,"listener"],[309,18,277,121],[309,20,277,123,"onScrollHandler"],[310,8,277,139],[310,9,277,140],[310,10,277,141],[311,6,278,8],[312,6,279,8],[312,13,279,15,"onScrollHandler"],[312,28,279,30],[313,4,280,4],[313,5,280,5],[313,7,280,7],[313,8,280,8,"onScrollHandler"],[313,23,280,23],[313,25,280,25,"scrollY"],[313,32,280,32],[313,34,280,34,"stickyHeaders"],[313,47,280,47],[313,48,280,48],[313,49,280,49],[314,4,281,4],[314,10,281,10,"shouldMaintainVisibleContentPosition"],[314,46,281,46],[314,49,281,49,"recyclerViewManager"],[314,68,281,68],[314,69,281,69,"shouldMaintainVisibleContentPosition"],[314,105,281,105],[314,106,281,106],[314,107,281,107],[315,4,282,4],[315,10,282,10,"maintainVisibleContentPositionInternal"],[315,48,282,48],[315,51,282,51],[315,55,282,51,"useMemo"],[315,61,282,58],[315,62,282,58,"useMemo"],[315,69,282,58],[315,71,282,59],[315,77,282,65],[316,6,283,8],[316,10,283,12,"shouldMaintainVisibleContentPosition"],[316,46,283,48],[316,48,283,50],[317,8,284,12],[317,15,284,12,"Object"],[317,21,284,12],[317,22,284,12,"assign"],[317,28,284,12],[317,33,285,19,"maintainVisibleContentPosition"],[317,63,285,49],[318,10,286,16,"minIndexForVisible"],[318,28,286,34],[318,30,286,36],[319,8,286,37],[320,6,288,8],[321,6,289,8],[321,13,289,15,"undefined"],[321,22,289,24],[322,4,290,4],[322,5,290,5],[322,7,290,7],[322,8,290,8,"maintainVisibleContentPosition"],[322,38,290,38],[322,40,290,40,"shouldMaintainVisibleContentPosition"],[322,76,290,76],[322,77,290,77],[322,78,290,78],[323,4,291,4],[323,10,291,10,"shouldRenderFromBottom"],[323,32,291,32],[323,35,291,35,"recyclerViewManager"],[323,54,291,54],[323,55,291,55,"getDataLength"],[323,68,291,68],[323,69,291,69],[323,70,291,70],[323,73,291,73],[323,74,291,74],[323,79,292,9],[323,80,292,10,"_a"],[323,82,292,12],[323,85,292,15,"maintainVisibleContentPosition"],[323,115,292,45],[323,120,292,50],[323,124,292,54],[323,128,292,58,"maintainVisibleContentPosition"],[323,158,292,88],[323,163,292,93],[323,168,292,98],[323,169,292,99],[323,172,292,102],[323,177,292,107],[323,178,292,108],[323,181,292,111,"maintainVisibleContentPosition"],[323,211,292,141],[323,212,292,142,"startRenderingFromBottom"],[323,236,292,166],[323,242,292,172],[323,246,292,176],[323,250,292,180,"_a"],[323,252,292,182],[323,257,292,187],[323,262,292,192],[323,263,292,193],[323,266,292,196,"_a"],[323,268,292,198],[323,271,292,201],[323,276,292,206],[323,277,292,207],[324,4,293,4],[325,4,294,4],[325,10,294,10,"viewToMeasureBoundedSize"],[325,34,294,34],[325,37,294,37],[325,41,294,37,"useMemo"],[325,47,294,44],[325,48,294,44,"useMemo"],[325,55,294,44],[325,57,294,45],[325,63,294,51],[326,6,295,8],[326,26,295,16,"React"],[326,31,295,21],[326,32,295,21,"default"],[326,39,295,21],[326,40,295,22,"createElement"],[326,53,295,35],[326,54,295,36,"CompatView"],[326,75,295,46],[326,76,295,46,"CompatView"],[326,86,295,46],[326,88,295,48],[327,8,295,50,"style"],[327,13,295,55],[327,15,295,57],[328,10,296,16,"height"],[328,16,296,22],[328,18,296,24,"horizontal"],[328,28,296,34],[328,31,296,37,"undefined"],[328,40,296,46],[328,43,296,49],[328,44,296,50],[329,10,297,16,"width"],[329,15,297,21],[329,17,297,23,"horizontal"],[329,27,297,33],[329,30,297,36],[329,31,297,37],[329,34,297,40,"undefined"],[330,8,298,12],[330,9,298,13],[331,8,298,15,"ref"],[331,11,298,18],[331,13,298,20,"firstChildViewRef"],[332,6,298,38],[332,7,298,39],[332,8,298,40],[333,4,299,4],[333,5,299,5],[333,7,299,7],[333,8,299,8,"horizontal"],[333,18,299,18],[333,19,299,19],[333,20,299,20],[334,4,300,4],[334,10,300,10,"scrollAnchor"],[334,22,300,22],[334,25,300,25],[334,29,300,25,"useMemo"],[334,35,300,32],[334,36,300,32,"useMemo"],[334,43,300,32],[334,45,300,33],[334,51,300,39],[335,6,301,8],[335,10,301,12,"shouldMaintainVisibleContentPosition"],[335,46,301,48],[335,48,301,50],[336,8,302,12],[336,28,302,20,"React"],[336,33,302,25],[336,34,302,25,"default"],[336,41,302,25],[336,42,302,26,"createElement"],[336,55,302,39],[336,56,302,40,"ScrollAnchor"],[336,79,302,52],[336,80,302,52,"ScrollAnchor"],[336,92,302,52],[336,94,302,54],[337,10,302,56,"horizontal"],[337,20,302,66],[337,22,302,68,"Boolean"],[337,29,302,75],[337,30,302,76,"horizontal"],[337,40,302,86],[337,41,302,87],[338,10,302,89,"scrollAnchorRef"],[338,25,302,104],[338,27,302,106,"scrollAnchorRef"],[339,8,302,122],[339,9,302,123],[339,10,302,124],[340,6,303,8],[341,6,304,8],[341,13,304,15],[341,17,304,19],[342,4,305,4],[342,5,305,5],[342,7,305,7],[342,8,305,8,"horizontal"],[342,18,305,18],[342,20,305,20,"shouldMaintainVisibleContentPosition"],[342,56,305,56],[342,57,305,57],[342,58,305,58],[343,4,306,4],[344,4,307,4],[345,4,308,4],[345,24,308,12,"React"],[345,29,308,17],[345,30,308,17,"default"],[345,37,308,17],[345,38,308,18,"createElement"],[345,51,308,31],[345,52,308,32,"RecyclerViewContextProvider"],[345,80,308,59],[345,81,308,59,"RecyclerViewContextProvider"],[345,108,308,59],[345,110,308,61],[346,6,308,63,"value"],[346,11,308,68],[346,13,308,70,"recyclerViewContext"],[347,4,308,90],[347,5,308,91],[347,20,309,8,"React"],[347,25,309,13],[347,26,309,13,"default"],[347,33,309,13],[347,34,309,14,"createElement"],[347,47,309,27],[347,48,309,28,"CompatView"],[347,69,309,38],[347,70,309,38,"CompatView"],[347,80,309,38],[347,82,309,40],[348,6,309,42,"style"],[348,11,309,47],[348,13,309,49],[348,14,310,16],[349,8,311,20,"flex"],[349,12,311,24],[349,14,311,26,"horizontal"],[349,24,311,36],[349,27,311,39,"undefined"],[349,36,311,48],[349,39,311,51],[349,40,311,52],[350,8,312,20,"overflow"],[350,16,312,28],[350,18,312,30],[351,6,313,16],[351,7,313,17],[351,9,314,16,"style"],[351,14,314,21],[351,15,315,13],[352,6,315,15,"ref"],[352,9,315,18],[352,11,315,20,"internalViewRef"],[352,26,315,35],[353,6,315,37,"collapsable"],[353,17,315,48],[353,19,315,50],[353,24,315,55],[354,6,315,57,"onLayout"],[354,14,315,65],[354,16,315,68,"event"],[354,21,315,73],[354,25,315,78],[355,8,316,16],[355,12,316,20,"_a"],[355,14,316,22],[355,16,316,24,"_b"],[355,18,316,26],[355,20,316,28,"_c"],[355,22,316,30],[355,24,316,32,"_d"],[355,26,316,34],[356,8,317,16],[356,12,317,20],[356,16,317,20,"areDimensionsNotEqual"],[356,35,317,41],[356,36,317,41,"areDimensionsNotEqual"],[356,57,317,41],[356,59,317,42,"event"],[356,64,317,47],[356,65,317,48,"nativeEvent"],[356,76,317,59],[356,77,317,60,"layout"],[356,83,317,66],[356,84,317,67,"width"],[356,89,317,72],[356,91,317,74],[356,92,317,75,"_b"],[356,94,317,77],[356,97,317,80],[356,98,317,81,"_a"],[356,100,317,83],[356,103,317,86,"containerViewSizeRef"],[356,123,317,106],[356,124,317,107,"current"],[356,131,317,114],[356,137,317,120],[356,141,317,124],[356,145,317,128,"_a"],[356,147,317,130],[356,152,317,135],[356,157,317,140],[356,158,317,141],[356,161,317,144],[356,166,317,149],[356,167,317,150],[356,170,317,153,"_a"],[356,172,317,155],[356,173,317,156,"width"],[356,178,317,161],[356,184,317,167],[356,188,317,171],[356,192,317,175,"_b"],[356,194,317,177],[356,199,317,182],[356,204,317,187],[356,205,317,188],[356,208,317,191,"_b"],[356,210,317,193],[356,213,317,196],[356,214,317,197],[356,215,317,198],[356,219,318,20],[356,223,318,20,"areDimensionsNotEqual"],[356,242,318,41],[356,243,318,41,"areDimensionsNotEqual"],[356,264,318,41],[356,266,318,42,"event"],[356,271,318,47],[356,272,318,48,"nativeEvent"],[356,283,318,59],[356,284,318,60,"layout"],[356,290,318,66],[356,291,318,67,"height"],[356,297,318,73],[356,299,318,75],[356,300,318,76,"_d"],[356,302,318,78],[356,305,318,81],[356,306,318,82,"_c"],[356,308,318,84],[356,311,318,87,"containerViewSizeRef"],[356,331,318,107],[356,332,318,108,"current"],[356,339,318,115],[356,345,318,121],[356,349,318,125],[356,353,318,129,"_c"],[356,355,318,131],[356,360,318,136],[356,365,318,141],[356,366,318,142],[356,369,318,145],[356,374,318,150],[356,375,318,151],[356,378,318,154,"_c"],[356,380,318,156],[356,381,318,157,"height"],[356,387,318,163],[356,393,318,169],[356,397,318,173],[356,401,318,177,"_d"],[356,403,318,179],[356,408,318,184],[356,413,318,189],[356,414,318,190],[356,417,318,193,"_d"],[356,419,318,195],[356,422,318,198],[356,423,318,199],[356,424,318,200],[356,426,318,202],[357,10,319,20],[358,10,320,20],[359,10,321,20],[360,10,322,20],[361,10,323,20],[362,10,324,20,"recyclerViewContext"],[362,29,324,39],[362,30,324,40,"layout"],[362,36,324,46],[362,37,324,47],[362,38,324,48],[363,8,325,16],[364,6,326,12],[365,4,326,14],[365,5,326,15],[365,20,327,12,"React"],[365,25,327,17],[365,26,327,17,"default"],[365,33,327,17],[365,34,327,18,"createElement"],[365,47,327,31],[365,48,327,32,"CompatScrollView"],[365,64,327,48],[365,66,327,48,"Object"],[365,72,327,48],[365,73,327,48,"assign"],[365,79,327,48],[365,84,327,55,"rest"],[365,88,327,59],[366,6,327,61,"horizontal"],[366,16,327,71],[366,18,327,73,"horizontal"],[366,28,327,83],[367,6,327,85,"ref"],[367,9,327,88],[367,11,327,90,"scrollViewRef"],[367,24,327,103],[368,6,327,105,"onScroll"],[368,14,327,113],[368,16,327,115,"animatedEvent"],[368,29,327,128],[369,6,327,130,"maintainVisibleContentPosition"],[369,36,327,160],[369,38,327,162,"maintainVisibleContentPositionInternal"],[369,76,327,200],[370,6,327,202,"refreshControl"],[370,20,327,216],[370,22,327,218,"refreshControl"],[371,4,327,232],[371,7,327,237,"overrideProps"],[371,20,327,250],[371,23,328,16,"scrollAnchor"],[371,35,328,28],[371,37,329,16,"isHorizontalRTL"],[371,52,329,31],[371,56,329,35,"viewToMeasureBoundedSize"],[371,80,329,59],[371,82,330,16,"renderHeader"],[371,94,330,28],[371,96,331,16],[371,97,331,17,"isHorizontalRTL"],[371,112,331,32],[371,116,331,36,"viewToMeasureBoundedSize"],[371,140,331,60],[371,155,332,16,"React"],[371,160,332,21],[371,161,332,21,"default"],[371,168,332,21],[371,169,332,22,"createElement"],[371,182,332,35],[371,183,332,36,"ViewHolderCollection"],[371,204,332,56],[371,205,332,56,"ViewHolderCollection"],[371,225,332,56],[371,227,332,58],[372,6,332,60,"viewHolderCollectionRef"],[372,29,332,83],[372,31,332,85,"viewHolderCollectionRef"],[372,54,332,108],[373,6,332,110,"data"],[373,10,332,114],[373,12,332,116,"data"],[373,16,332,120],[374,6,332,122,"horizontal"],[374,16,332,132],[374,18,332,134,"horizontal"],[374,28,332,144],[375,6,332,146,"renderStack"],[375,17,332,157],[375,19,332,159,"recyclerViewManager"],[375,38,332,178],[375,39,332,179,"getRenderStack"],[375,53,332,193],[375,54,332,194],[375,55,332,195],[376,6,332,197,"getLayout"],[376,15,332,206],[376,17,332,209,"index"],[376,22,332,214],[376,26,332,219,"recyclerViewManager"],[376,45,332,238],[376,46,332,239,"getLayout"],[376,55,332,248],[376,56,332,249,"index"],[376,61,332,254],[376,62,332,255],[377,6,332,257,"getAdjustmentMargin"],[377,25,332,276],[377,27,332,278,"getAdjustmentMargin"],[377,28,332,278],[377,33,332,284],[378,8,333,24],[378,12,333,28],[378,13,333,29,"shouldRenderFromBottom"],[378,35,333,51],[378,39,333,55],[378,40,333,56,"recyclerViewManager"],[378,59,333,75],[378,60,333,76,"hasLayout"],[378,69,333,85],[378,70,333,86],[378,71,333,87],[378,73,333,89],[379,10,334,28],[379,17,334,35],[379,18,334,36],[380,8,335,24],[381,8,336,24],[381,14,336,30,"windowSize"],[381,24,336,40],[381,27,336,43,"horizontal"],[381,37,336,53],[381,40,337,30,"recyclerViewManager"],[381,59,337,49],[381,60,337,50,"getWindowSize"],[381,73,337,63],[381,74,337,64],[381,75,337,65],[381,76,337,66,"width"],[381,81,337,71],[381,84,338,30,"recyclerViewManager"],[381,103,338,49],[381,104,338,50,"getWindowSize"],[381,117,338,63],[381,118,338,64],[381,119,338,65],[381,120,338,66,"height"],[381,126,338,72],[382,8,339,24],[382,14,339,30,"childContainerSize"],[382,32,339,48],[382,35,339,51,"horizontal"],[382,45,339,61],[382,48,340,30,"recyclerViewManager"],[382,67,340,49],[382,68,340,50,"getChildContainerDimensions"],[382,95,340,77],[382,96,340,78],[382,97,340,79],[382,98,340,80,"width"],[382,103,340,85],[382,106,341,30,"recyclerViewManager"],[382,125,341,49],[382,126,341,50,"getChildContainerDimensions"],[382,153,341,77],[382,154,341,78],[382,155,341,79],[382,156,341,80,"height"],[382,162,341,86],[383,8,342,24],[383,15,342,31,"Math"],[383,19,342,35],[383,20,342,36,"max"],[383,23,342,39],[383,24,342,40],[383,25,342,41],[383,27,342,43,"windowSize"],[383,37,342,53],[383,40,343,28,"childContainerSize"],[383,58,343,46],[383,61,344,28,"recyclerViewManager"],[383,80,344,47],[383,81,344,48,"firstItemOffset"],[383,96,344,63],[383,97,344,64],[384,6,345,20],[384,7,345,21],[385,6,345,23,"refHolder"],[385,15,345,32],[385,17,345,34,"refHolder"],[385,26,345,43],[386,6,345,45,"onSizeChanged"],[386,19,345,58],[386,21,345,60,"validateItemSize"],[386,37,345,76],[387,6,345,78,"renderItem"],[387,16,345,88],[387,18,345,90,"renderItem"],[387,28,345,100],[388,6,345,102,"extraData"],[388,15,345,111],[388,17,345,113,"extraData"],[388,26,345,122],[389,6,345,124,"onCommitLayoutEffect"],[389,26,345,144],[389,28,345,146,"onCommitLayoutEffect"],[389,29,345,146],[389,34,345,152],[390,8,346,24,"applyInitialScrollIndex"],[390,31,346,47],[390,32,346,48],[390,33,346,49],[391,8,347,24,"parentRecyclerViewContext"],[391,33,347,49],[391,38,347,54],[391,42,347,58],[391,46,347,62,"parentRecyclerViewContext"],[391,71,347,87],[391,76,347,92],[391,81,347,97],[391,82,347,98],[391,85,347,101],[391,90,347,106],[391,91,347,107],[391,94,347,110,"parentRecyclerViewContext"],[391,119,347,135],[391,120,347,136,"unmarkChildLayoutAsPending"],[391,146,347,162],[391,147,347,163,"recyclerViewId"],[391,161,347,177],[391,162,347,178],[392,8,348,24,"onCommitLayoutEffect"],[392,28,348,44],[392,33,348,49],[392,37,348,53],[392,41,348,57,"onCommitLayoutEffect"],[392,61,348,77],[392,66,348,82],[392,71,348,87],[392,72,348,88],[392,75,348,91],[392,80,348,96],[392,81,348,97],[392,84,348,100,"onCommitLayoutEffect"],[392,104,348,120],[392,105,348,121],[392,106,348,122],[393,6,349,20],[393,7,349,21],[394,6,349,23,"onCommitEffect"],[394,20,349,37],[394,22,349,39,"onCommitEffect"],[394,23,349,39],[394,28,349,45],[395,8,350,24,"renderTimeTracker"],[395,25,350,41],[395,26,350,42,"markRenderComplete"],[395,44,350,60],[395,45,350,61],[395,46,350,62],[396,8,351,24,"recyclerViewManager"],[396,27,351,43],[396,28,351,44,"updateAverageRenderTime"],[396,51,351,67],[396,52,351,68,"renderTimeTracker"],[396,69,351,85],[396,70,351,86,"getAverageRenderTime"],[396,90,351,106],[396,91,351,107],[396,92,351,108],[396,93,351,109],[397,8,352,24,"applyInitialScrollIndex"],[397,31,352,47],[397,32,352,48],[397,33,352,49],[398,8,353,24,"checkBounds"],[398,19,353,35],[398,20,353,36],[398,21,353,37],[399,8,354,24,"recyclerViewManager"],[399,27,354,43],[399,28,354,44,"computeItemViewability"],[399,50,354,66],[399,51,354,67],[399,52,354,68],[400,8,355,24,"recyclerViewManager"],[400,27,355,43],[400,28,355,44,"animationOptimizationsEnabled"],[400,57,355,73],[400,60,355,76],[400,65,355,81],[401,6,356,20],[401,7,356,21],[402,6,356,23,"CellRendererComponent"],[402,27,356,44],[402,29,356,46,"CellRendererComponent"],[402,50,356,67],[403,6,356,69,"ItemSeparatorComponent"],[403,28,356,91],[403,30,356,93,"ItemSeparatorComponent"],[403,52,356,115],[404,6,356,117,"getChildContainerLayout"],[404,29,356,140],[404,31,356,142,"getChildContainerLayout"],[404,32,356,142],[404,37,356,148,"recyclerViewManager"],[404,56,356,167],[404,57,356,168,"hasLayout"],[404,66,356,177],[404,67,356,178],[404,68,356,179],[404,71,357,26,"recyclerViewManager"],[404,90,357,45],[404,91,357,46,"getChildContainerDimensions"],[404,118,357,73],[404,119,357,74],[404,120,357,75],[404,123,358,26,"undefined"],[405,4,358,36],[405,5,358,37],[405,6,358,38],[405,8,359,16,"renderEmpty"],[405,19,359,27],[405,21,360,16,"renderFooter"],[405,33,360,28],[405,34,360,29],[405,36,361,12,"stickyHeaders"],[405,49,361,25],[405,50,361,26],[405,51,361,27],[406,2,362,0],[406,3,362,1],[407,2,363,0],[408,2,364,0,"RecyclerViewComponent"],[408,23,364,21],[408,24,364,22,"displayName"],[408,35,364,33],[408,38,364,36],[408,49,364,47],[409,2,365,0],[410,2,366,0],[410,8,366,6,"RecyclerView"],[410,20,366,18],[410,36,366,21,"React"],[410,41,366,26],[410,42,366,26,"default"],[410,49,366,26],[410,50,366,27,"memo"],[410,54,366,31],[410,68,366,32],[410,72,366,32,"forwardRef"],[410,78,366,42],[410,79,366,42,"forwardRef"],[410,89,366,42],[410,91,366,43,"RecyclerViewComponent"],[410,112,366,64],[410,113,366,65],[410,114,366,66],[411,0,366,67],[411,3]],"functionMap":{"names":["<global>","RecyclerViewComponent","useState$argument_0","useMemo$argument_0","useLayoutEffect$argument_0","Array.from$argument_1","setRenderId$argument_0","onScrollHandler","velocityTracker.computeVelocity$argument_3","layout","setLayoutTreeId$argument_0","getRef","getParentRef","getParentScrollViewRef","getScrollViewRef","markChildLayoutAsPending","unmarkChildLayoutAsPending","validateItemSize","React.createElement$argument_1.onLayout","React.createElement$argument_1.getLayout","React.createElement$argument_1.getAdjustmentMargin","React.createElement$argument_1.onCommitLayoutEffect","React.createElement$argument_1.onCommitEffect","React.createElement$argument_1.getChildContainerLayout"],"mappings":"AAA;8BC0B;yCCI,6BD;8BEiB,eF;oBGe;KHuB;oBGM;iDCK;SDgB;wBEQ,kBF;KHc;wCMI;8HCY;4BFa,kBE;SDE;KNS;wCEW;oBME;gCCC,kBD;aNC;oBQC;aRK;0BSC;aTG;oCUC;aVG;8BWC;aXE;sCYC;aZE;wCaC;abK;KFE;yCgBU;KhBkB;kCEQ;KFW;kCEU;KFK;2DEE;KFQ;6CEI;KFK;iCEC;KFK;mEiBU;ajBW;gNkBM,+ClB,uBmB;qBnBa,6HoB;qBpBI,kBqB;qBrBO,yHsB;mCtBE;CDI"},"hasCjsExports":false},"type":"js/module"}]}