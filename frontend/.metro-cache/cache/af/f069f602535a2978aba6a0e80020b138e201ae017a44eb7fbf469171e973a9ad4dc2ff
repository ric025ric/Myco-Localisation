{"dependencies":[{"name":"../../native/config/PlatformHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"VAeUL6D5iY8QXYEBY5o7Ew2wCF4=","exportNames":["*"],"imports":1}},{"name":"./ConsecutiveNumbers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":58,"index":127}}],"key":"b+ekfNlQYWowRogjJ1zD6mvkT+k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"RVEngagedIndicesTrackerImpl\", {\n    enumerable: true,\n    get: function () {\n      return RVEngagedIndicesTrackerImpl;\n    }\n  });\n  var _nativeConfigPlatformHelper = require(_dependencyMap[0], \"../../native/config/PlatformHelper\");\n  var _ConsecutiveNumbers = require(_dependencyMap[1], \"./ConsecutiveNumbers\");\n  class RVEngagedIndicesTrackerImpl {\n    constructor() {\n      // Current scroll position of the list\n      this.scrollOffset = 0;\n      // Distance to pre-render items before and after the visible viewport (in pixels)\n      this.drawDistance = _nativeConfigPlatformHelper.PlatformConfig.defaultDrawDistance;\n      // Whether to use offset projection to predict the next scroll offset\n      this.enableOffsetProjection = true;\n      // Average render time of the list\n      this.averageRenderTime = 16;\n      // Internal override to disable offset projection\n      this.forceDisableOffsetProjection = false;\n      // Currently rendered item indices (including buffer items)\n      this.engagedIndices = _ConsecutiveNumbers.ConsecutiveNumbers.EMPTY;\n      // Buffer distribution multipliers for scroll direction optimization\n      this.smallMultiplier = 0.3; // Used for buffer in the opposite direction of scroll\n      this.largeMultiplier = 0.7; // Used for buffer in the direction of scroll\n      // Circular buffer to track recent scroll velocities for direction detection\n      this.velocityHistory = [0, 0, 0, -0.1, -0.1];\n      this.velocityIndex = 0;\n    }\n    /**\n     * Updates scroll position and determines which items should be rendered.\n     * Implements a smart buffer system that:\n     * 1. Calculates the visible viewport\n     * 2. Determines optimal buffer distribution based on scroll direction\n     * 3. Adjusts buffer sizes at list boundaries\n     * 4. Returns new indices that need to be rendered\n     */\n    updateScrollOffset(offset, velocity, layoutManager) {\n      // Update current scroll position\n      this.scrollOffset = offset;\n      // STEP 1: Determine the currently visible viewport\n      const windowSize = layoutManager.getWindowsSize();\n      const isHorizontal = layoutManager.isHorizontal();\n      // Update velocity history\n      if (velocity) {\n        this.updateVelocityHistory(isHorizontal ? velocity.x : velocity.y);\n      }\n      // Determine scroll direction to optimize buffer distribution\n      const isScrollingBackward = this.isScrollingBackward();\n      const viewportStart = this.enableOffsetProjection && !this.forceDisableOffsetProjection ? this.getProjectedScrollOffset(offset, this.averageRenderTime) : offset;\n      // console.log(\"timeMs\", this.averageRenderTime, offset, viewportStart);\n      const viewportSize = isHorizontal ? windowSize.width : windowSize.height;\n      const viewportEnd = viewportStart + viewportSize;\n      // STEP 2: Determine buffer size and distribution\n      // The total extra space where items will be pre-rendered\n      const totalBuffer = this.drawDistance * 2;\n      // Distribute more buffer in the direction of scrolling\n      // When scrolling forward: more buffer after viewport\n      // When scrolling backward: more buffer before viewport\n      const beforeRatio = isScrollingBackward ? this.largeMultiplier : this.smallMultiplier;\n      const afterRatio = isScrollingBackward ? this.smallMultiplier : this.largeMultiplier;\n      const bufferBefore = Math.ceil(totalBuffer * beforeRatio);\n      const bufferAfter = Math.ceil(totalBuffer * afterRatio);\n      // STEP 3: Calculate the extended viewport (visible area + buffers)\n      // The start position with buffer (never less than 0)\n      let extendedStart = Math.max(0, viewportStart - bufferBefore);\n      // If we couldn't apply full buffer at start, calculate how much was unused\n      const unusedStartBuffer = Math.max(0, bufferBefore - viewportStart);\n      // Add any unused start buffer to the end buffer\n      let extendedEnd = viewportEnd + bufferAfter + unusedStartBuffer;\n      // STEP 4: Handle end boundary adjustments\n      // Get the total content size to check for end boundary\n      const layoutSize = layoutManager.getLayoutSize();\n      const maxPosition = isHorizontal ? layoutSize.width : layoutSize.height;\n      // If we hit the end boundary, redistribute unused buffer to the start\n      if (extendedEnd > maxPosition) {\n        // Calculate unused end buffer and apply it to the start if possible\n        const unusedEndBuffer = extendedEnd - maxPosition;\n        extendedEnd = maxPosition;\n        // Try to extend start position further with the unused end buffer\n        extendedStart = Math.max(0, extendedStart - unusedEndBuffer);\n      }\n      // STEP 5: Get and return the new engaged indices\n      const newEngagedIndices = layoutManager.getVisibleLayouts(extendedStart, extendedEnd);\n      // console.log(\n      //   \"newEngagedIndices\",\n      //   newEngagedIndices,\n      //   this.scrollOffset,\n      //   viewportStart\n      // );\n      // Only return new indices if they've changed\n      const oldEngagedIndices = this.engagedIndices;\n      this.engagedIndices = newEngagedIndices;\n      return newEngagedIndices.equals(oldEngagedIndices) ? undefined : newEngagedIndices;\n    }\n    /**\n     * Updates the velocity history with a new velocity value.\n     * @param velocity - Current scroll velocity component (x or y)\n     */\n    updateVelocityHistory(velocity) {\n      this.velocityHistory[this.velocityIndex] = velocity;\n      this.velocityIndex = (this.velocityIndex + 1) % this.velocityHistory.length;\n    }\n    /**\n     * Determines scroll direction by analyzing recent velocity history.\n     * Uses a majority voting system on the last 5 velocity values.\n     * @returns true if scrolling backward (negative direction), false otherwise\n     */\n    isScrollingBackward() {\n      // should decide based on whether we have more positive or negative values, use for loop\n      let positiveCount = 0;\n      let negativeCount = 0;\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let i = 0; i < this.velocityHistory.length; i++) {\n        if (this.velocityHistory[i] > 0) {\n          positiveCount++;\n        } else if (this.velocityHistory[i] < 0) {\n          negativeCount++;\n        }\n      }\n      return positiveCount < negativeCount;\n    }\n    /**\n     * Calculates the median velocity based on velocity history\n     * Medina works better agains outliers\n     * @returns Median velocity over the recent history\n     */\n    getMedianVelocity() {\n      // Make a copy of velocity history and sort it\n      const sortedVelocities = [...this.velocityHistory].sort((valueA, valueB) => valueA - valueB);\n      const length = sortedVelocities.length;\n      // If length is odd, return the middle element\n      if (length % 2 === 1) {\n        return sortedVelocities[Math.floor(length / 2)];\n      }\n      // If length is even, return the average of the two middle elements\n      const midIndex = length / 2;\n      return (sortedVelocities[midIndex - 1] + sortedVelocities[midIndex]) / 2;\n    }\n    /**\n     * Projects the next scroll offset based on median velocity\n     * @param timeMs Time in milliseconds to predict ahead\n     * @returns Projected scroll offset\n     */\n    getProjectedScrollOffset(offset, timeMs) {\n      const medianVelocity = this.getMedianVelocity();\n      // Convert time from ms to seconds for velocity calculation\n      // Predict next position: current position + (velocity * time)\n      return offset + medianVelocity * timeMs;\n    }\n    /**\n     * Calculates which items are currently visible in the viewport.\n     * Unlike getEngagedIndices, this doesn't include buffer items.\n     * @param layoutManager - Layout manager to fetch item positions\n     * @returns Indices of items currently visible in the viewport\n     */\n    computeVisibleIndices(layoutManager) {\n      const windowSize = layoutManager.getWindowsSize();\n      const isHorizontal = layoutManager.isHorizontal();\n      // Calculate viewport boundaries\n      const viewportStart = this.scrollOffset;\n      const viewportSize = isHorizontal ? windowSize.width : windowSize.height;\n      const viewportEnd = viewportStart + viewportSize;\n      // Get indices of items currently visible in the viewport\n      const newVisibleIndices = layoutManager.getVisibleLayouts(viewportStart, viewportEnd);\n      return newVisibleIndices;\n    }\n    /**\n     * Returns the currently engaged (rendered) indices.\n     * This includes both visible items and buffer items.\n     * @returns The last computed set of engaged indices\n     */\n    getEngagedIndices() {\n      return this.engagedIndices;\n    }\n    setScrollDirection(scrollDirection) {\n      if (scrollDirection === \"forward\") {\n        this.velocityHistory = [0, 0, 0, 0.1, 0.1];\n        this.velocityIndex = 0;\n      } else {\n        this.velocityHistory = [0, 0, 0, -0.1, -0.1];\n        this.velocityIndex = 0;\n      }\n    }\n    /**\n     * Resets the velocity history based on the current scroll direction.\n     * This ensures that the velocity history is always in sync with the current scroll direction.\n     */\n    resetVelocityHistory() {\n      if (this.isScrollingBackward()) {\n        this.setScrollDirection(\"backward\");\n      } else {\n        this.setScrollDirection(\"forward\");\n      }\n    }\n  }\n});","lineCount":203,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"RVEngagedIndicesTrackerImpl"],[10,40,3,0],[11,4,3,0],[12,2,3,0],[13,2,1,0],[13,6,1,0,"_nativeConfigPlatformHelper"],[13,33,1,0],[13,36,1,0,"require"],[13,43,1,0],[13,44,1,0,"_dependencyMap"],[13,58,1,0],[14,2,2,0],[14,6,2,0,"_ConsecutiveNumbers"],[14,25,2,0],[14,28,2,0,"require"],[14,35,2,0],[14,36,2,0,"_dependencyMap"],[14,50,2,0],[15,2,3,7],[15,8,3,13,"RVEngagedIndicesTrackerImpl"],[15,35,3,40],[15,36,3,41],[16,4,4,4,"constructor"],[16,15,4,15,"constructor"],[16,16,4,15],[16,18,4,18],[17,6,5,8],[18,6,6,8],[18,10,6,12],[18,11,6,13,"scrollOffset"],[18,23,6,25],[18,26,6,28],[18,27,6,29],[19,6,7,8],[20,6,8,8],[20,10,8,12],[20,11,8,13,"drawDistance"],[20,23,8,25],[20,26,8,28,"PlatformConfig"],[20,53,8,42],[20,54,8,42,"PlatformConfig"],[20,68,8,42],[20,69,8,43,"defaultDrawDistance"],[20,88,8,62],[21,6,9,8],[22,6,10,8],[22,10,10,12],[22,11,10,13,"enableOffsetProjection"],[22,33,10,35],[22,36,10,38],[22,40,10,42],[23,6,11,8],[24,6,12,8],[24,10,12,12],[24,11,12,13,"averageRenderTime"],[24,28,12,30],[24,31,12,33],[24,33,12,35],[25,6,13,8],[26,6,14,8],[26,10,14,12],[26,11,14,13,"forceDisableOffsetProjection"],[26,39,14,41],[26,42,14,44],[26,47,14,49],[27,6,15,8],[28,6,16,8],[28,10,16,12],[28,11,16,13,"engagedIndices"],[28,25,16,27],[28,28,16,30,"ConsecutiveNumbers"],[28,47,16,48],[28,48,16,48,"ConsecutiveNumbers"],[28,66,16,48],[28,67,16,49,"EMPTY"],[28,72,16,54],[29,6,17,8],[30,6,18,8],[30,10,18,12],[30,11,18,13,"smallMultiplier"],[30,26,18,28],[30,29,18,31],[30,32,18,34],[30,33,18,35],[30,34,18,36],[31,6,19,8],[31,10,19,12],[31,11,19,13,"largeMultiplier"],[31,26,19,28],[31,29,19,31],[31,32,19,34],[31,33,19,35],[31,34,19,36],[32,6,20,8],[33,6,21,8],[33,10,21,12],[33,11,21,13,"velocityHistory"],[33,26,21,28],[33,29,21,31],[33,30,21,32],[33,31,21,33],[33,33,21,35],[33,34,21,36],[33,36,21,38],[33,37,21,39],[33,39,21,41],[33,40,21,42],[33,43,21,45],[33,45,21,47],[33,46,21,48],[33,49,21,51],[33,50,21,52],[34,6,22,8],[34,10,22,12],[34,11,22,13,"velocityIndex"],[34,24,22,26],[34,27,22,29],[34,28,22,30],[35,4,23,4],[36,4,24,4],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,0,30,0],[43,0,31,0],[44,4,32,4,"updateScrollOffset"],[44,22,32,22,"updateScrollOffset"],[44,23,32,23,"offset"],[44,29,32,29],[44,31,32,31,"velocity"],[44,39,32,39],[44,41,32,41,"layoutManager"],[44,54,32,54],[44,56,32,56],[45,6,33,8],[46,6,34,8],[46,10,34,12],[46,11,34,13,"scrollOffset"],[46,23,34,25],[46,26,34,28,"offset"],[46,32,34,34],[47,6,35,8],[48,6,36,8],[48,12,36,14,"windowSize"],[48,22,36,24],[48,25,36,27,"layoutManager"],[48,38,36,40],[48,39,36,41,"getWindowsSize"],[48,53,36,55],[48,54,36,56],[48,55,36,57],[49,6,37,8],[49,12,37,14,"isHorizontal"],[49,24,37,26],[49,27,37,29,"layoutManager"],[49,40,37,42],[49,41,37,43,"isHorizontal"],[49,53,37,55],[49,54,37,56],[49,55,37,57],[50,6,38,8],[51,6,39,8],[51,10,39,12,"velocity"],[51,18,39,20],[51,20,39,22],[52,8,40,12],[52,12,40,16],[52,13,40,17,"updateVelocityHistory"],[52,34,40,38],[52,35,40,39,"isHorizontal"],[52,47,40,51],[52,50,40,54,"velocity"],[52,58,40,62],[52,59,40,63,"x"],[52,60,40,64],[52,63,40,67,"velocity"],[52,71,40,75],[52,72,40,76,"y"],[52,73,40,77],[52,74,40,78],[53,6,41,8],[54,6,42,8],[55,6,43,8],[55,12,43,14,"isScrollingBackward"],[55,31,43,33],[55,34,43,36],[55,38,43,40],[55,39,43,41,"isScrollingBackward"],[55,58,43,60],[55,59,43,61],[55,60,43,62],[56,6,44,8],[56,12,44,14,"viewportStart"],[56,25,44,27],[56,28,44,30],[56,32,44,34],[56,33,44,35,"enableOffsetProjection"],[56,55,44,57],[56,59,44,61],[56,60,44,62],[56,64,44,66],[56,65,44,67,"forceDisableOffsetProjection"],[56,93,44,95],[56,96,45,14],[56,100,45,18],[56,101,45,19,"getProjectedScrollOffset"],[56,125,45,43],[56,126,45,44,"offset"],[56,132,45,50],[56,134,45,52],[56,138,45,56],[56,139,45,57,"averageRenderTime"],[56,156,45,74],[56,157,45,75],[56,160,46,14,"offset"],[56,166,46,20],[57,6,47,8],[58,6,48,8],[58,12,48,14,"viewportSize"],[58,24,48,26],[58,27,48,29,"isHorizontal"],[58,39,48,41],[58,42,48,44,"windowSize"],[58,52,48,54],[58,53,48,55,"width"],[58,58,48,60],[58,61,48,63,"windowSize"],[58,71,48,73],[58,72,48,74,"height"],[58,78,48,80],[59,6,49,8],[59,12,49,14,"viewportEnd"],[59,23,49,25],[59,26,49,28,"viewportStart"],[59,39,49,41],[59,42,49,44,"viewportSize"],[59,54,49,56],[60,6,50,8],[61,6,51,8],[62,6,52,8],[62,12,52,14,"totalBuffer"],[62,23,52,25],[62,26,52,28],[62,30,52,32],[62,31,52,33,"drawDistance"],[62,43,52,45],[62,46,52,48],[62,47,52,49],[63,6,53,8],[64,6,54,8],[65,6,55,8],[66,6,56,8],[66,12,56,14,"beforeRatio"],[66,23,56,25],[66,26,56,28,"isScrollingBackward"],[66,45,56,47],[66,48,57,14],[66,52,57,18],[66,53,57,19,"largeMultiplier"],[66,68,57,34],[66,71,58,14],[66,75,58,18],[66,76,58,19,"smallMultiplier"],[66,91,58,34],[67,6,59,8],[67,12,59,14,"afterRatio"],[67,22,59,24],[67,25,59,27,"isScrollingBackward"],[67,44,59,46],[67,47,60,14],[67,51,60,18],[67,52,60,19,"smallMultiplier"],[67,67,60,34],[67,70,61,14],[67,74,61,18],[67,75,61,19,"largeMultiplier"],[67,90,61,34],[68,6,62,8],[68,12,62,14,"bufferBefore"],[68,24,62,26],[68,27,62,29,"Math"],[68,31,62,33],[68,32,62,34,"ceil"],[68,36,62,38],[68,37,62,39,"totalBuffer"],[68,48,62,50],[68,51,62,53,"beforeRatio"],[68,62,62,64],[68,63,62,65],[69,6,63,8],[69,12,63,14,"bufferAfter"],[69,23,63,25],[69,26,63,28,"Math"],[69,30,63,32],[69,31,63,33,"ceil"],[69,35,63,37],[69,36,63,38,"totalBuffer"],[69,47,63,49],[69,50,63,52,"afterRatio"],[69,60,63,62],[69,61,63,63],[70,6,64,8],[71,6,65,8],[72,6,66,8],[72,10,66,12,"extendedStart"],[72,23,66,25],[72,26,66,28,"Math"],[72,30,66,32],[72,31,66,33,"max"],[72,34,66,36],[72,35,66,37],[72,36,66,38],[72,38,66,40,"viewportStart"],[72,51,66,53],[72,54,66,56,"bufferBefore"],[72,66,66,68],[72,67,66,69],[73,6,67,8],[74,6,68,8],[74,12,68,14,"unusedStartBuffer"],[74,29,68,31],[74,32,68,34,"Math"],[74,36,68,38],[74,37,68,39,"max"],[74,40,68,42],[74,41,68,43],[74,42,68,44],[74,44,68,46,"bufferBefore"],[74,56,68,58],[74,59,68,61,"viewportStart"],[74,72,68,74],[74,73,68,75],[75,6,69,8],[76,6,70,8],[76,10,70,12,"extendedEnd"],[76,21,70,23],[76,24,70,26,"viewportEnd"],[76,35,70,37],[76,38,70,40,"bufferAfter"],[76,49,70,51],[76,52,70,54,"unusedStartBuffer"],[76,69,70,71],[77,6,71,8],[78,6,72,8],[79,6,73,8],[79,12,73,14,"layoutSize"],[79,22,73,24],[79,25,73,27,"layoutManager"],[79,38,73,40],[79,39,73,41,"getLayoutSize"],[79,52,73,54],[79,53,73,55],[79,54,73,56],[80,6,74,8],[80,12,74,14,"maxPosition"],[80,23,74,25],[80,26,74,28,"isHorizontal"],[80,38,74,40],[80,41,74,43,"layoutSize"],[80,51,74,53],[80,52,74,54,"width"],[80,57,74,59],[80,60,74,62,"layoutSize"],[80,70,74,72],[80,71,74,73,"height"],[80,77,74,79],[81,6,75,8],[82,6,76,8],[82,10,76,12,"extendedEnd"],[82,21,76,23],[82,24,76,26,"maxPosition"],[82,35,76,37],[82,37,76,39],[83,8,77,12],[84,8,78,12],[84,14,78,18,"unusedEndBuffer"],[84,29,78,33],[84,32,78,36,"extendedEnd"],[84,43,78,47],[84,46,78,50,"maxPosition"],[84,57,78,61],[85,8,79,12,"extendedEnd"],[85,19,79,23],[85,22,79,26,"maxPosition"],[85,33,79,37],[86,8,80,12],[87,8,81,12,"extendedStart"],[87,21,81,25],[87,24,81,28,"Math"],[87,28,81,32],[87,29,81,33,"max"],[87,32,81,36],[87,33,81,37],[87,34,81,38],[87,36,81,40,"extendedStart"],[87,49,81,53],[87,52,81,56,"unusedEndBuffer"],[87,67,81,71],[87,68,81,72],[88,6,82,8],[89,6,83,8],[90,6,84,8],[90,12,84,14,"newEngagedIndices"],[90,29,84,31],[90,32,84,34,"layoutManager"],[90,45,84,47],[90,46,84,48,"getVisibleLayouts"],[90,63,84,65],[90,64,84,66,"extendedStart"],[90,77,84,79],[90,79,84,81,"extendedEnd"],[90,90,84,92],[90,91,84,93],[91,6,85,8],[92,6,86,8],[93,6,87,8],[94,6,88,8],[95,6,89,8],[96,6,90,8],[97,6,91,8],[98,6,92,8],[98,12,92,14,"oldEngagedIndices"],[98,29,92,31],[98,32,92,34],[98,36,92,38],[98,37,92,39,"engagedIndices"],[98,51,92,53],[99,6,93,8],[99,10,93,12],[99,11,93,13,"engagedIndices"],[99,25,93,27],[99,28,93,30,"newEngagedIndices"],[99,45,93,47],[100,6,94,8],[100,13,94,15,"newEngagedIndices"],[100,30,94,32],[100,31,94,33,"equals"],[100,37,94,39],[100,38,94,40,"oldEngagedIndices"],[100,55,94,57],[100,56,94,58],[100,59,95,14,"undefined"],[100,68,95,23],[100,71,96,14,"newEngagedIndices"],[100,88,96,31],[101,4,97,4],[102,4,98,4],[103,0,99,0],[104,0,100,0],[105,0,101,0],[106,4,102,4,"updateVelocityHistory"],[106,25,102,25,"updateVelocityHistory"],[106,26,102,26,"velocity"],[106,34,102,34],[106,36,102,36],[107,6,103,8],[107,10,103,12],[107,11,103,13,"velocityHistory"],[107,26,103,28],[107,27,103,29],[107,31,103,33],[107,32,103,34,"velocityIndex"],[107,45,103,47],[107,46,103,48],[107,49,103,51,"velocity"],[107,57,103,59],[108,6,104,8],[108,10,104,12],[108,11,104,13,"velocityIndex"],[108,24,104,26],[108,27,104,29],[108,28,104,30],[108,32,104,34],[108,33,104,35,"velocityIndex"],[108,46,104,48],[108,49,104,51],[108,50,104,52],[108,54,104,56],[108,58,104,60],[108,59,104,61,"velocityHistory"],[108,74,104,76],[108,75,104,77,"length"],[108,81,104,83],[109,4,105,4],[110,4,106,4],[111,0,107,0],[112,0,108,0],[113,0,109,0],[114,0,110,0],[115,4,111,4,"isScrollingBackward"],[115,23,111,23,"isScrollingBackward"],[115,24,111,23],[115,26,111,26],[116,6,112,8],[117,6,113,8],[117,10,113,12,"positiveCount"],[117,23,113,25],[117,26,113,28],[117,27,113,29],[118,6,114,8],[118,10,114,12,"negativeCount"],[118,23,114,25],[118,26,114,28],[118,27,114,29],[119,6,115,8],[120,6,116,8],[120,11,116,13],[120,15,116,17,"i"],[120,16,116,18],[120,19,116,21],[120,20,116,22],[120,22,116,24,"i"],[120,23,116,25],[120,26,116,28],[120,30,116,32],[120,31,116,33,"velocityHistory"],[120,46,116,48],[120,47,116,49,"length"],[120,53,116,55],[120,55,116,57,"i"],[120,56,116,58],[120,58,116,60],[120,60,116,62],[121,8,117,12],[121,12,117,16],[121,16,117,20],[121,17,117,21,"velocityHistory"],[121,32,117,36],[121,33,117,37,"i"],[121,34,117,38],[121,35,117,39],[121,38,117,42],[121,39,117,43],[121,41,117,45],[122,10,118,16,"positiveCount"],[122,23,118,29],[122,25,118,31],[123,8,119,12],[123,9,119,13],[123,15,120,17],[123,19,120,21],[123,23,120,25],[123,24,120,26,"velocityHistory"],[123,39,120,41],[123,40,120,42,"i"],[123,41,120,43],[123,42,120,44],[123,45,120,47],[123,46,120,48],[123,48,120,50],[124,10,121,16,"negativeCount"],[124,23,121,29],[124,25,121,31],[125,8,122,12],[126,6,123,8],[127,6,124,8],[127,13,124,15,"positiveCount"],[127,26,124,28],[127,29,124,31,"negativeCount"],[127,42,124,44],[128,4,125,4],[129,4,126,4],[130,0,127,0],[131,0,128,0],[132,0,129,0],[133,0,130,0],[134,4,131,4,"getMedianVelocity"],[134,21,131,21,"getMedianVelocity"],[134,22,131,21],[134,24,131,24],[135,6,132,8],[136,6,133,8],[136,12,133,14,"sortedVelocities"],[136,28,133,30],[136,31,133,33],[136,32,133,34],[136,35,133,37],[136,39,133,41],[136,40,133,42,"velocityHistory"],[136,55,133,57],[136,56,133,58],[136,57,133,59,"sort"],[136,61,133,63],[136,62,133,64],[136,63,133,65,"valueA"],[136,69,133,71],[136,71,133,73,"valueB"],[136,77,133,79],[136,82,133,84,"valueA"],[136,88,133,90],[136,91,133,93,"valueB"],[136,97,133,99],[136,98,133,100],[137,6,134,8],[137,12,134,14,"length"],[137,18,134,20],[137,21,134,23,"sortedVelocities"],[137,37,134,39],[137,38,134,40,"length"],[137,44,134,46],[138,6,135,8],[139,6,136,8],[139,10,136,12,"length"],[139,16,136,18],[139,19,136,21],[139,20,136,22],[139,25,136,27],[139,26,136,28],[139,28,136,30],[140,8,137,12],[140,15,137,19,"sortedVelocities"],[140,31,137,35],[140,32,137,36,"Math"],[140,36,137,40],[140,37,137,41,"floor"],[140,42,137,46],[140,43,137,47,"length"],[140,49,137,53],[140,52,137,56],[140,53,137,57],[140,54,137,58],[140,55,137,59],[141,6,138,8],[142,6,139,8],[143,6,140,8],[143,12,140,14,"midIndex"],[143,20,140,22],[143,23,140,25,"length"],[143,29,140,31],[143,32,140,34],[143,33,140,35],[144,6,141,8],[144,13,141,15],[144,14,141,16,"sortedVelocities"],[144,30,141,32],[144,31,141,33,"midIndex"],[144,39,141,41],[144,42,141,44],[144,43,141,45],[144,44,141,46],[144,47,141,49,"sortedVelocities"],[144,63,141,65],[144,64,141,66,"midIndex"],[144,72,141,74],[144,73,141,75],[144,77,141,79],[144,78,141,80],[145,4,142,4],[146,4,143,4],[147,0,144,0],[148,0,145,0],[149,0,146,0],[150,0,147,0],[151,4,148,4,"getProjectedScrollOffset"],[151,28,148,28,"getProjectedScrollOffset"],[151,29,148,29,"offset"],[151,35,148,35],[151,37,148,37,"timeMs"],[151,43,148,43],[151,45,148,45],[152,6,149,8],[152,12,149,14,"medianVelocity"],[152,26,149,28],[152,29,149,31],[152,33,149,35],[152,34,149,36,"getMedianVelocity"],[152,51,149,53],[152,52,149,54],[152,53,149,55],[153,6,150,8],[154,6,151,8],[155,6,152,8],[155,13,152,15,"offset"],[155,19,152,21],[155,22,152,24,"medianVelocity"],[155,36,152,38],[155,39,152,41,"timeMs"],[155,45,152,47],[156,4,153,4],[157,4,154,4],[158,0,155,0],[159,0,156,0],[160,0,157,0],[161,0,158,0],[162,0,159,0],[163,4,160,4,"computeVisibleIndices"],[163,25,160,25,"computeVisibleIndices"],[163,26,160,26,"layoutManager"],[163,39,160,39],[163,41,160,41],[164,6,161,8],[164,12,161,14,"windowSize"],[164,22,161,24],[164,25,161,27,"layoutManager"],[164,38,161,40],[164,39,161,41,"getWindowsSize"],[164,53,161,55],[164,54,161,56],[164,55,161,57],[165,6,162,8],[165,12,162,14,"isHorizontal"],[165,24,162,26],[165,27,162,29,"layoutManager"],[165,40,162,42],[165,41,162,43,"isHorizontal"],[165,53,162,55],[165,54,162,56],[165,55,162,57],[166,6,163,8],[167,6,164,8],[167,12,164,14,"viewportStart"],[167,25,164,27],[167,28,164,30],[167,32,164,34],[167,33,164,35,"scrollOffset"],[167,45,164,47],[168,6,165,8],[168,12,165,14,"viewportSize"],[168,24,165,26],[168,27,165,29,"isHorizontal"],[168,39,165,41],[168,42,165,44,"windowSize"],[168,52,165,54],[168,53,165,55,"width"],[168,58,165,60],[168,61,165,63,"windowSize"],[168,71,165,73],[168,72,165,74,"height"],[168,78,165,80],[169,6,166,8],[169,12,166,14,"viewportEnd"],[169,23,166,25],[169,26,166,28,"viewportStart"],[169,39,166,41],[169,42,166,44,"viewportSize"],[169,54,166,56],[170,6,167,8],[171,6,168,8],[171,12,168,14,"newVisibleIndices"],[171,29,168,31],[171,32,168,34,"layoutManager"],[171,45,168,47],[171,46,168,48,"getVisibleLayouts"],[171,63,168,65],[171,64,168,66,"viewportStart"],[171,77,168,79],[171,79,168,81,"viewportEnd"],[171,90,168,92],[171,91,168,93],[172,6,169,8],[172,13,169,15,"newVisibleIndices"],[172,30,169,32],[173,4,170,4],[174,4,171,4],[175,0,172,0],[176,0,173,0],[177,0,174,0],[178,0,175,0],[179,4,176,4,"getEngagedIndices"],[179,21,176,21,"getEngagedIndices"],[179,22,176,21],[179,24,176,24],[180,6,177,8],[180,13,177,15],[180,17,177,19],[180,18,177,20,"engagedIndices"],[180,32,177,34],[181,4,178,4],[182,4,179,4,"setScrollDirection"],[182,22,179,22,"setScrollDirection"],[182,23,179,23,"scrollDirection"],[182,38,179,38],[182,40,179,40],[183,6,180,8],[183,10,180,12,"scrollDirection"],[183,25,180,27],[183,30,180,32],[183,39,180,41],[183,41,180,43],[184,8,181,12],[184,12,181,16],[184,13,181,17,"velocityHistory"],[184,28,181,32],[184,31,181,35],[184,32,181,36],[184,33,181,37],[184,35,181,39],[184,36,181,40],[184,38,181,42],[184,39,181,43],[184,41,181,45],[184,44,181,48],[184,46,181,50],[184,49,181,53],[184,50,181,54],[185,8,182,12],[185,12,182,16],[185,13,182,17,"velocityIndex"],[185,26,182,30],[185,29,182,33],[185,30,182,34],[186,6,183,8],[186,7,183,9],[186,13,184,13],[187,8,185,12],[187,12,185,16],[187,13,185,17,"velocityHistory"],[187,28,185,32],[187,31,185,35],[187,32,185,36],[187,33,185,37],[187,35,185,39],[187,36,185,40],[187,38,185,42],[187,39,185,43],[187,41,185,45],[187,42,185,46],[187,45,185,49],[187,47,185,51],[187,48,185,52],[187,51,185,55],[187,52,185,56],[188,8,186,12],[188,12,186,16],[188,13,186,17,"velocityIndex"],[188,26,186,30],[188,29,186,33],[188,30,186,34],[189,6,187,8],[190,4,188,4],[191,4,189,4],[192,0,190,0],[193,0,191,0],[194,0,192,0],[195,4,193,4,"resetVelocityHistory"],[195,24,193,24,"resetVelocityHistory"],[195,25,193,24],[195,27,193,27],[196,6,194,8],[196,10,194,12],[196,14,194,16],[196,15,194,17,"isScrollingBackward"],[196,34,194,36],[196,35,194,37],[196,36,194,38],[196,38,194,40],[197,8,195,12],[197,12,195,16],[197,13,195,17,"setScrollDirection"],[197,31,195,35],[197,32,195,36],[197,42,195,46],[197,43,195,47],[198,6,196,8],[198,7,196,9],[198,13,197,13],[199,8,198,12],[199,12,198,16],[199,13,198,17,"setScrollDirection"],[199,31,198,35],[199,32,198,36],[199,41,198,45],[199,42,198,46],[200,6,199,8],[201,4,200,4],[202,2,201,0],[203,0,201,1],[203,3]],"functionMap":{"names":["<global>","RVEngagedIndicesTrackerImpl","RVEngagedIndicesTrackerImpl#constructor","RVEngagedIndicesTrackerImpl#updateScrollOffset","RVEngagedIndicesTrackerImpl#updateVelocityHistory","RVEngagedIndicesTrackerImpl#isScrollingBackward","RVEngagedIndicesTrackerImpl#getMedianVelocity","sort$argument_0","RVEngagedIndicesTrackerImpl#getProjectedScrollOffset","RVEngagedIndicesTrackerImpl#computeVisibleIndices","RVEngagedIndicesTrackerImpl#getEngagedIndices","RVEngagedIndicesTrackerImpl#setScrollDirection","RVEngagedIndicesTrackerImpl#resetVelocityHistory"],"mappings":"AAA;OCE;ICC;KDmB;IES;KFiE;IGK;KHG;IIM;KJc;IKM;gECE,mCD;KLS;IOM;KPK;IQO;KRU;ISM;KTE;IUC;KVS;IWK;KXO;CDC"},"hasCjsExports":false},"type":"js/module"}]}