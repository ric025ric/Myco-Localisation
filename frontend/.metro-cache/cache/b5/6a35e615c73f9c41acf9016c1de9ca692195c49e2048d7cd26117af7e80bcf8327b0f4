{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":31},"end":{"line":3,"column":38,"index":53}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./crc","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":20,"index":75},"end":{"line":4,"column":36,"index":91}}],"key":"Jb1D9JLIa5BFBnTH9DyoJl+pJLk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  let constants = require(_dependencyMap[0], \"./constants\");\n  let CrcCalculator = require(_dependencyMap[1], \"./crc\");\n  let Parser = module.exports = function (options, dependencies) {\n    this._options = options;\n    options.checkCRC = options.checkCRC !== false;\n    this._hasIHDR = false;\n    this._hasIEND = false;\n    this._emittedHeadersFinished = false;\n\n    // input flags/metadata\n    this._palette = [];\n    this._colorType = 0;\n    this._chunks = {};\n    this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n    this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n    this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n    this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n    this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n    this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n    this.read = dependencies.read;\n    this.error = dependencies.error;\n    this.metadata = dependencies.metadata;\n    this.gamma = dependencies.gamma;\n    this.transColor = dependencies.transColor;\n    this.palette = dependencies.palette;\n    this.parsed = dependencies.parsed;\n    this.inflateData = dependencies.inflateData;\n    this.finished = dependencies.finished;\n    this.simpleTransparency = dependencies.simpleTransparency;\n    this.headersFinished = dependencies.headersFinished || function () {};\n  };\n  Parser.prototype.start = function () {\n    this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n  };\n  Parser.prototype._parseSignature = function (data) {\n    let signature = constants.PNG_SIGNATURE;\n    for (let i = 0; i < signature.length; i++) {\n      if (data[i] !== signature[i]) {\n        this.error(new Error(\"Invalid file signature\"));\n        return;\n      }\n    }\n    this.read(8, this._parseChunkBegin.bind(this));\n  };\n  Parser.prototype._parseChunkBegin = function (data) {\n    // chunk content length\n    let length = data.readUInt32BE(0);\n\n    // chunk type\n    let type = data.readUInt32BE(4);\n    let name = \"\";\n    for (let i = 4; i < 8; i++) {\n      name += String.fromCharCode(data[i]);\n    }\n\n    //console.log('chunk ', name, length);\n\n    // chunk flags\n    let ancillary = Boolean(data[4] & 0x20); // or critical\n    //    priv = Boolean(data[5] & 0x20), // or public\n    //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n    if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n      this.error(new Error(\"Expected IHDR on beggining\"));\n      return;\n    }\n    this._crc = new CrcCalculator();\n    this._crc.write(Buffer.from(name));\n    if (this._chunks[type]) {\n      return this._chunks[type](length);\n    }\n    if (!ancillary) {\n      this.error(new Error(\"Unsupported critical chunk type \" + name));\n      return;\n    }\n    this.read(length + 4, this._skipChunk.bind(this));\n  };\n  Parser.prototype._skipChunk = function /*data*/\n  () {\n    this.read(8, this._parseChunkBegin.bind(this));\n  };\n  Parser.prototype._handleChunkEnd = function () {\n    this.read(4, this._parseChunkEnd.bind(this));\n  };\n  Parser.prototype._parseChunkEnd = function (data) {\n    let fileCrc = data.readInt32BE(0);\n    let calcCrc = this._crc.crc32();\n\n    // check CRC\n    if (this._options.checkCRC && calcCrc !== fileCrc) {\n      this.error(new Error(\"Crc error - \" + fileCrc + \" - \" + calcCrc));\n      return;\n    }\n    if (!this._hasIEND) {\n      this.read(8, this._parseChunkBegin.bind(this));\n    }\n  };\n  Parser.prototype._handleIHDR = function (length) {\n    this.read(length, this._parseIHDR.bind(this));\n  };\n  Parser.prototype._parseIHDR = function (data) {\n    this._crc.write(data);\n    let width = data.readUInt32BE(0);\n    let height = data.readUInt32BE(4);\n    let depth = data[8];\n    let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n    let compr = data[10];\n    let filter = data[11];\n    let interlace = data[12];\n\n    // console.log('    width', width, 'height', height,\n    //     'depth', depth, 'colorType', colorType,\n    //     'compr', compr, 'filter', filter, 'interlace', interlace\n    // );\n\n    if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n      this.error(new Error(\"Unsupported bit depth \" + depth));\n      return;\n    }\n    if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n      this.error(new Error(\"Unsupported color type\"));\n      return;\n    }\n    if (compr !== 0) {\n      this.error(new Error(\"Unsupported compression method\"));\n      return;\n    }\n    if (filter !== 0) {\n      this.error(new Error(\"Unsupported filter method\"));\n      return;\n    }\n    if (interlace !== 0 && interlace !== 1) {\n      this.error(new Error(\"Unsupported interlace method\"));\n      return;\n    }\n    this._colorType = colorType;\n    let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n    this._hasIHDR = true;\n    this.metadata({\n      width: width,\n      height: height,\n      depth: depth,\n      interlace: Boolean(interlace),\n      palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n      color: Boolean(colorType & constants.COLORTYPE_COLOR),\n      alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n      bpp: bpp,\n      colorType: colorType\n    });\n    this._handleChunkEnd();\n  };\n  Parser.prototype._handlePLTE = function (length) {\n    this.read(length, this._parsePLTE.bind(this));\n  };\n  Parser.prototype._parsePLTE = function (data) {\n    this._crc.write(data);\n    let entries = Math.floor(data.length / 3);\n    // console.log('Palette:', entries);\n\n    for (let i = 0; i < entries; i++) {\n      this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n    }\n    this.palette(this._palette);\n    this._handleChunkEnd();\n  };\n  Parser.prototype._handleTRNS = function (length) {\n    this.simpleTransparency();\n    this.read(length, this._parseTRNS.bind(this));\n  };\n  Parser.prototype._parseTRNS = function (data) {\n    this._crc.write(data);\n\n    // palette\n    if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n      if (this._palette.length === 0) {\n        this.error(new Error(\"Transparency chunk must be after palette\"));\n        return;\n      }\n      if (data.length > this._palette.length) {\n        this.error(new Error(\"More transparent colors than palette size\"));\n        return;\n      }\n      for (let i = 0; i < data.length; i++) {\n        this._palette[i][3] = data[i];\n      }\n      this.palette(this._palette);\n    }\n\n    // for colorType 0 (grayscale) and 2 (rgb)\n    // there might be one gray/color defined as transparent\n    if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n      // grey, 2 bytes\n      this.transColor([data.readUInt16BE(0)]);\n    }\n    if (this._colorType === constants.COLORTYPE_COLOR) {\n      this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n    }\n    this._handleChunkEnd();\n  };\n  Parser.prototype._handleGAMA = function (length) {\n    this.read(length, this._parseGAMA.bind(this));\n  };\n  Parser.prototype._parseGAMA = function (data) {\n    this._crc.write(data);\n    this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n    this._handleChunkEnd();\n  };\n  Parser.prototype._handleIDAT = function (length) {\n    if (!this._emittedHeadersFinished) {\n      this._emittedHeadersFinished = true;\n      this.headersFinished();\n    }\n    this.read(-length, this._parseIDAT.bind(this, length));\n  };\n  Parser.prototype._parseIDAT = function (length, data) {\n    this._crc.write(data);\n    if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n      throw new Error(\"Expected palette not found\");\n    }\n    this.inflateData(data);\n    let leftOverLength = length - data.length;\n    if (leftOverLength > 0) {\n      this._handleIDAT(leftOverLength);\n    } else {\n      this._handleChunkEnd();\n    }\n  };\n  Parser.prototype._handleIEND = function (length) {\n    this.read(length, this._parseIEND.bind(this));\n  };\n  Parser.prototype._parseIEND = function (data) {\n    this._crc.write(data);\n    this._hasIEND = true;\n    this._handleChunkEnd();\n    if (this.finished) {\n      this.finished();\n    }\n  };\n});","lineCount":242,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"constants"],[4,15,3,13],[4,18,3,16,"require"],[4,25,3,23],[4,26,3,23,"_dependencyMap"],[4,40,3,23],[4,58,3,37],[4,59,3,38],[5,2,4,0],[5,6,4,4,"CrcCalculator"],[5,19,4,17],[5,22,4,20,"require"],[5,29,4,27],[5,30,4,27,"_dependencyMap"],[5,44,4,27],[5,56,4,35],[5,57,4,36],[6,2,6,0],[6,6,6,4,"Parser"],[6,12,6,10],[6,15,6,14,"module"],[6,21,6,20],[6,22,6,21,"exports"],[6,29,6,28],[6,32,6,31],[6,42,6,41,"options"],[6,49,6,48],[6,51,6,50,"dependencies"],[6,63,6,62],[6,65,6,64],[7,4,7,2],[7,8,7,6],[7,9,7,7,"_options"],[7,17,7,15],[7,20,7,18,"options"],[7,27,7,25],[8,4,8,2,"options"],[8,11,8,9],[8,12,8,10,"checkCRC"],[8,20,8,18],[8,23,8,21,"options"],[8,30,8,28],[8,31,8,29,"checkCRC"],[8,39,8,37],[8,44,8,42],[8,49,8,47],[9,4,10,2],[9,8,10,6],[9,9,10,7,"_hasIHDR"],[9,17,10,15],[9,20,10,18],[9,25,10,23],[10,4,11,2],[10,8,11,6],[10,9,11,7,"_hasIEND"],[10,17,11,15],[10,20,11,18],[10,25,11,23],[11,4,12,2],[11,8,12,6],[11,9,12,7,"_emittedHeadersFinished"],[11,32,12,30],[11,35,12,33],[11,40,12,38],[13,4,14,2],[14,4,15,2],[14,8,15,6],[14,9,15,7,"_palette"],[14,17,15,15],[14,20,15,18],[14,22,15,20],[15,4,16,2],[15,8,16,6],[15,9,16,7,"_colorType"],[15,19,16,17],[15,22,16,20],[15,23,16,21],[16,4,18,2],[16,8,18,6],[16,9,18,7,"_chunks"],[16,16,18,14],[16,19,18,17],[16,20,18,18],[16,21,18,19],[17,4,19,2],[17,8,19,6],[17,9,19,7,"_chunks"],[17,16,19,14],[17,17,19,15,"constants"],[17,26,19,24],[17,27,19,25,"TYPE_IHDR"],[17,36,19,34],[17,37,19,35],[17,40,19,38],[17,44,19,42],[17,45,19,43,"_handleIHDR"],[17,56,19,54],[17,57,19,55,"bind"],[17,61,19,59],[17,62,19,60],[17,66,19,64],[17,67,19,65],[18,4,20,2],[18,8,20,6],[18,9,20,7,"_chunks"],[18,16,20,14],[18,17,20,15,"constants"],[18,26,20,24],[18,27,20,25,"TYPE_IEND"],[18,36,20,34],[18,37,20,35],[18,40,20,38],[18,44,20,42],[18,45,20,43,"_handleIEND"],[18,56,20,54],[18,57,20,55,"bind"],[18,61,20,59],[18,62,20,60],[18,66,20,64],[18,67,20,65],[19,4,21,2],[19,8,21,6],[19,9,21,7,"_chunks"],[19,16,21,14],[19,17,21,15,"constants"],[19,26,21,24],[19,27,21,25,"TYPE_IDAT"],[19,36,21,34],[19,37,21,35],[19,40,21,38],[19,44,21,42],[19,45,21,43,"_handleIDAT"],[19,56,21,54],[19,57,21,55,"bind"],[19,61,21,59],[19,62,21,60],[19,66,21,64],[19,67,21,65],[20,4,22,2],[20,8,22,6],[20,9,22,7,"_chunks"],[20,16,22,14],[20,17,22,15,"constants"],[20,26,22,24],[20,27,22,25,"TYPE_PLTE"],[20,36,22,34],[20,37,22,35],[20,40,22,38],[20,44,22,42],[20,45,22,43,"_handlePLTE"],[20,56,22,54],[20,57,22,55,"bind"],[20,61,22,59],[20,62,22,60],[20,66,22,64],[20,67,22,65],[21,4,23,2],[21,8,23,6],[21,9,23,7,"_chunks"],[21,16,23,14],[21,17,23,15,"constants"],[21,26,23,24],[21,27,23,25,"TYPE_tRNS"],[21,36,23,34],[21,37,23,35],[21,40,23,38],[21,44,23,42],[21,45,23,43,"_handleTRNS"],[21,56,23,54],[21,57,23,55,"bind"],[21,61,23,59],[21,62,23,60],[21,66,23,64],[21,67,23,65],[22,4,24,2],[22,8,24,6],[22,9,24,7,"_chunks"],[22,16,24,14],[22,17,24,15,"constants"],[22,26,24,24],[22,27,24,25,"TYPE_gAMA"],[22,36,24,34],[22,37,24,35],[22,40,24,38],[22,44,24,42],[22,45,24,43,"_handleGAMA"],[22,56,24,54],[22,57,24,55,"bind"],[22,61,24,59],[22,62,24,60],[22,66,24,64],[22,67,24,65],[23,4,26,2],[23,8,26,6],[23,9,26,7,"read"],[23,13,26,11],[23,16,26,14,"dependencies"],[23,28,26,26],[23,29,26,27,"read"],[23,33,26,31],[24,4,27,2],[24,8,27,6],[24,9,27,7,"error"],[24,14,27,12],[24,17,27,15,"dependencies"],[24,29,27,27],[24,30,27,28,"error"],[24,35,27,33],[25,4,28,2],[25,8,28,6],[25,9,28,7,"metadata"],[25,17,28,15],[25,20,28,18,"dependencies"],[25,32,28,30],[25,33,28,31,"metadata"],[25,41,28,39],[26,4,29,2],[26,8,29,6],[26,9,29,7,"gamma"],[26,14,29,12],[26,17,29,15,"dependencies"],[26,29,29,27],[26,30,29,28,"gamma"],[26,35,29,33],[27,4,30,2],[27,8,30,6],[27,9,30,7,"transColor"],[27,19,30,17],[27,22,30,20,"dependencies"],[27,34,30,32],[27,35,30,33,"transColor"],[27,45,30,43],[28,4,31,2],[28,8,31,6],[28,9,31,7,"palette"],[28,16,31,14],[28,19,31,17,"dependencies"],[28,31,31,29],[28,32,31,30,"palette"],[28,39,31,37],[29,4,32,2],[29,8,32,6],[29,9,32,7,"parsed"],[29,15,32,13],[29,18,32,16,"dependencies"],[29,30,32,28],[29,31,32,29,"parsed"],[29,37,32,35],[30,4,33,2],[30,8,33,6],[30,9,33,7,"inflateData"],[30,20,33,18],[30,23,33,21,"dependencies"],[30,35,33,33],[30,36,33,34,"inflateData"],[30,47,33,45],[31,4,34,2],[31,8,34,6],[31,9,34,7,"finished"],[31,17,34,15],[31,20,34,18,"dependencies"],[31,32,34,30],[31,33,34,31,"finished"],[31,41,34,39],[32,4,35,2],[32,8,35,6],[32,9,35,7,"simpleTransparency"],[32,27,35,25],[32,30,35,28,"dependencies"],[32,42,35,40],[32,43,35,41,"simpleTransparency"],[32,61,35,59],[33,4,36,2],[33,8,36,6],[33,9,36,7,"headersFinished"],[33,24,36,22],[33,27,36,25,"dependencies"],[33,39,36,37],[33,40,36,38,"headersFinished"],[33,55,36,53],[33,59,36,57],[33,71,36,69],[33,72,36,70],[33,73,36,71],[34,2,37,0],[34,3,37,2],[35,2,39,0,"Parser"],[35,8,39,6],[35,9,39,7,"prototype"],[35,18,39,16],[35,19,39,17,"start"],[35,24,39,22],[35,27,39,25],[35,39,39,37],[36,4,40,2],[36,8,40,6],[36,9,40,7,"read"],[36,13,40,11],[36,14,40,12,"constants"],[36,23,40,21],[36,24,40,22,"PNG_SIGNATURE"],[36,37,40,35],[36,38,40,36,"length"],[36,44,40,42],[36,46,40,44],[36,50,40,48],[36,51,40,49,"_parseSignature"],[36,66,40,64],[36,67,40,65,"bind"],[36,71,40,69],[36,72,40,70],[36,76,40,74],[36,77,40,75],[36,78,40,76],[37,2,41,0],[37,3,41,1],[38,2,43,0,"Parser"],[38,8,43,6],[38,9,43,7,"prototype"],[38,18,43,16],[38,19,43,17,"_parseSignature"],[38,34,43,32],[38,37,43,35],[38,47,43,45,"data"],[38,51,43,49],[38,53,43,51],[39,4,44,2],[39,8,44,6,"signature"],[39,17,44,15],[39,20,44,18,"constants"],[39,29,44,27],[39,30,44,28,"PNG_SIGNATURE"],[39,43,44,41],[40,4,46,2],[40,9,46,7],[40,13,46,11,"i"],[40,14,46,12],[40,17,46,15],[40,18,46,16],[40,20,46,18,"i"],[40,21,46,19],[40,24,46,22,"signature"],[40,33,46,31],[40,34,46,32,"length"],[40,40,46,38],[40,42,46,40,"i"],[40,43,46,41],[40,45,46,43],[40,47,46,45],[41,6,47,4],[41,10,47,8,"data"],[41,14,47,12],[41,15,47,13,"i"],[41,16,47,14],[41,17,47,15],[41,22,47,20,"signature"],[41,31,47,29],[41,32,47,30,"i"],[41,33,47,31],[41,34,47,32],[41,36,47,34],[42,8,48,6],[42,12,48,10],[42,13,48,11,"error"],[42,18,48,16],[42,19,48,17],[42,23,48,21,"Error"],[42,28,48,26],[42,29,48,27],[42,53,48,51],[42,54,48,52],[42,55,48,53],[43,8,49,6],[44,6,50,4],[45,4,51,2],[46,4,52,2],[46,8,52,6],[46,9,52,7,"read"],[46,13,52,11],[46,14,52,12],[46,15,52,13],[46,17,52,15],[46,21,52,19],[46,22,52,20,"_parseChunkBegin"],[46,38,52,36],[46,39,52,37,"bind"],[46,43,52,41],[46,44,52,42],[46,48,52,46],[46,49,52,47],[46,50,52,48],[47,2,53,0],[47,3,53,1],[48,2,55,0,"Parser"],[48,8,55,6],[48,9,55,7,"prototype"],[48,18,55,16],[48,19,55,17,"_parseChunkBegin"],[48,35,55,33],[48,38,55,36],[48,48,55,46,"data"],[48,52,55,50],[48,54,55,52],[49,4,56,2],[50,4,57,2],[50,8,57,6,"length"],[50,14,57,12],[50,17,57,15,"data"],[50,21,57,19],[50,22,57,20,"readUInt32BE"],[50,34,57,32],[50,35,57,33],[50,36,57,34],[50,37,57,35],[52,4,59,2],[53,4,60,2],[53,8,60,6,"type"],[53,12,60,10],[53,15,60,13,"data"],[53,19,60,17],[53,20,60,18,"readUInt32BE"],[53,32,60,30],[53,33,60,31],[53,34,60,32],[53,35,60,33],[54,4,61,2],[54,8,61,6,"name"],[54,12,61,10],[54,15,61,13],[54,17,61,15],[55,4,62,2],[55,9,62,7],[55,13,62,11,"i"],[55,14,62,12],[55,17,62,15],[55,18,62,16],[55,20,62,18,"i"],[55,21,62,19],[55,24,62,22],[55,25,62,23],[55,27,62,25,"i"],[55,28,62,26],[55,30,62,28],[55,32,62,30],[56,6,63,4,"name"],[56,10,63,8],[56,14,63,12,"String"],[56,20,63,18],[56,21,63,19,"fromCharCode"],[56,33,63,31],[56,34,63,32,"data"],[56,38,63,36],[56,39,63,37,"i"],[56,40,63,38],[56,41,63,39],[56,42,63,40],[57,4,64,2],[59,4,66,2],[61,4,68,2],[62,4,69,2],[62,8,69,6,"ancillary"],[62,17,69,15],[62,20,69,18,"Boolean"],[62,27,69,25],[62,28,69,26,"data"],[62,32,69,30],[62,33,69,31],[62,34,69,32],[62,35,69,33],[62,38,69,36],[62,42,69,40],[62,43,69,41],[62,44,69,42],[62,45,69,43],[63,4,70,2],[64,4,71,2],[66,4,73,2],[66,8,73,6],[66,9,73,7],[66,13,73,11],[66,14,73,12,"_hasIHDR"],[66,22,73,20],[66,26,73,24,"type"],[66,30,73,28],[66,35,73,33,"constants"],[66,44,73,42],[66,45,73,43,"TYPE_IHDR"],[66,54,73,52],[66,56,73,54],[67,6,74,4],[67,10,74,8],[67,11,74,9,"error"],[67,16,74,14],[67,17,74,15],[67,21,74,19,"Error"],[67,26,74,24],[67,27,74,25],[67,55,74,53],[67,56,74,54],[67,57,74,55],[68,6,75,4],[69,4,76,2],[70,4,78,2],[70,8,78,6],[70,9,78,7,"_crc"],[70,13,78,11],[70,16,78,14],[70,20,78,18,"CrcCalculator"],[70,33,78,31],[70,34,78,32],[70,35,78,33],[71,4,79,2],[71,8,79,6],[71,9,79,7,"_crc"],[71,13,79,11],[71,14,79,12,"write"],[71,19,79,17],[71,20,79,18,"Buffer"],[71,26,79,24],[71,27,79,25,"from"],[71,31,79,29],[71,32,79,30,"name"],[71,36,79,34],[71,37,79,35],[71,38,79,36],[72,4,81,2],[72,8,81,6],[72,12,81,10],[72,13,81,11,"_chunks"],[72,20,81,18],[72,21,81,19,"type"],[72,25,81,23],[72,26,81,24],[72,28,81,26],[73,6,82,4],[73,13,82,11],[73,17,82,15],[73,18,82,16,"_chunks"],[73,25,82,23],[73,26,82,24,"type"],[73,30,82,28],[73,31,82,29],[73,32,82,30,"length"],[73,38,82,36],[73,39,82,37],[74,4,83,2],[75,4,85,2],[75,8,85,6],[75,9,85,7,"ancillary"],[75,18,85,16],[75,20,85,18],[76,6,86,4],[76,10,86,8],[76,11,86,9,"error"],[76,16,86,14],[76,17,86,15],[76,21,86,19,"Error"],[76,26,86,24],[76,27,86,25],[76,61,86,59],[76,64,86,62,"name"],[76,68,86,66],[76,69,86,67],[76,70,86,68],[77,6,87,4],[78,4,88,2],[79,4,90,2],[79,8,90,6],[79,9,90,7,"read"],[79,13,90,11],[79,14,90,12,"length"],[79,20,90,18],[79,23,90,21],[79,24,90,22],[79,26,90,24],[79,30,90,28],[79,31,90,29,"_skipChunk"],[79,41,90,39],[79,42,90,40,"bind"],[79,46,90,44],[79,47,90,45],[79,51,90,49],[79,52,90,50],[79,53,90,51],[80,2,91,0],[80,3,91,1],[81,2,93,0,"Parser"],[81,8,93,6],[81,9,93,7,"prototype"],[81,18,93,16],[81,19,93,17,"_skipChunk"],[81,29,93,27],[81,32,93,30],[81,41,93,40],[82,2,93,40],[82,5,93,50],[83,4,94,2],[83,8,94,6],[83,9,94,7,"read"],[83,13,94,11],[83,14,94,12],[83,15,94,13],[83,17,94,15],[83,21,94,19],[83,22,94,20,"_parseChunkBegin"],[83,38,94,36],[83,39,94,37,"bind"],[83,43,94,41],[83,44,94,42],[83,48,94,46],[83,49,94,47],[83,50,94,48],[84,2,95,0],[84,3,95,1],[85,2,97,0,"Parser"],[85,8,97,6],[85,9,97,7,"prototype"],[85,18,97,16],[85,19,97,17,"_handleChunkEnd"],[85,34,97,32],[85,37,97,35],[85,49,97,47],[86,4,98,2],[86,8,98,6],[86,9,98,7,"read"],[86,13,98,11],[86,14,98,12],[86,15,98,13],[86,17,98,15],[86,21,98,19],[86,22,98,20,"_parseChunkEnd"],[86,36,98,34],[86,37,98,35,"bind"],[86,41,98,39],[86,42,98,40],[86,46,98,44],[86,47,98,45],[86,48,98,46],[87,2,99,0],[87,3,99,1],[88,2,101,0,"Parser"],[88,8,101,6],[88,9,101,7,"prototype"],[88,18,101,16],[88,19,101,17,"_parseChunkEnd"],[88,33,101,31],[88,36,101,34],[88,46,101,44,"data"],[88,50,101,48],[88,52,101,50],[89,4,102,2],[89,8,102,6,"fileCrc"],[89,15,102,13],[89,18,102,16,"data"],[89,22,102,20],[89,23,102,21,"readInt32BE"],[89,34,102,32],[89,35,102,33],[89,36,102,34],[89,37,102,35],[90,4,103,2],[90,8,103,6,"calcCrc"],[90,15,103,13],[90,18,103,16],[90,22,103,20],[90,23,103,21,"_crc"],[90,27,103,25],[90,28,103,26,"crc32"],[90,33,103,31],[90,34,103,32],[90,35,103,33],[92,4,105,2],[93,4,106,2],[93,8,106,6],[93,12,106,10],[93,13,106,11,"_options"],[93,21,106,19],[93,22,106,20,"checkCRC"],[93,30,106,28],[93,34,106,32,"calcCrc"],[93,41,106,39],[93,46,106,44,"fileCrc"],[93,53,106,51],[93,55,106,53],[94,6,107,4],[94,10,107,8],[94,11,107,9,"error"],[94,16,107,14],[94,17,107,15],[94,21,107,19,"Error"],[94,26,107,24],[94,27,107,25],[94,41,107,39],[94,44,107,42,"fileCrc"],[94,51,107,49],[94,54,107,52],[94,59,107,57],[94,62,107,60,"calcCrc"],[94,69,107,67],[94,70,107,68],[94,71,107,69],[95,6,108,4],[96,4,109,2],[97,4,111,2],[97,8,111,6],[97,9,111,7],[97,13,111,11],[97,14,111,12,"_hasIEND"],[97,22,111,20],[97,24,111,22],[98,6,112,4],[98,10,112,8],[98,11,112,9,"read"],[98,15,112,13],[98,16,112,14],[98,17,112,15],[98,19,112,17],[98,23,112,21],[98,24,112,22,"_parseChunkBegin"],[98,40,112,38],[98,41,112,39,"bind"],[98,45,112,43],[98,46,112,44],[98,50,112,48],[98,51,112,49],[98,52,112,50],[99,4,113,2],[100,2,114,0],[100,3,114,1],[101,2,116,0,"Parser"],[101,8,116,6],[101,9,116,7,"prototype"],[101,18,116,16],[101,19,116,17,"_handleIHDR"],[101,30,116,28],[101,33,116,31],[101,43,116,41,"length"],[101,49,116,47],[101,51,116,49],[102,4,117,2],[102,8,117,6],[102,9,117,7,"read"],[102,13,117,11],[102,14,117,12,"length"],[102,20,117,18],[102,22,117,20],[102,26,117,24],[102,27,117,25,"_parseIHDR"],[102,37,117,35],[102,38,117,36,"bind"],[102,42,117,40],[102,43,117,41],[102,47,117,45],[102,48,117,46],[102,49,117,47],[103,2,118,0],[103,3,118,1],[104,2,119,0,"Parser"],[104,8,119,6],[104,9,119,7,"prototype"],[104,18,119,16],[104,19,119,17,"_parseIHDR"],[104,29,119,27],[104,32,119,30],[104,42,119,40,"data"],[104,46,119,44],[104,48,119,46],[105,4,120,2],[105,8,120,6],[105,9,120,7,"_crc"],[105,13,120,11],[105,14,120,12,"write"],[105,19,120,17],[105,20,120,18,"data"],[105,24,120,22],[105,25,120,23],[106,4,122,2],[106,8,122,6,"width"],[106,13,122,11],[106,16,122,14,"data"],[106,20,122,18],[106,21,122,19,"readUInt32BE"],[106,33,122,31],[106,34,122,32],[106,35,122,33],[106,36,122,34],[107,4,123,2],[107,8,123,6,"height"],[107,14,123,12],[107,17,123,15,"data"],[107,21,123,19],[107,22,123,20,"readUInt32BE"],[107,34,123,32],[107,35,123,33],[107,36,123,34],[107,37,123,35],[108,4,124,2],[108,8,124,6,"depth"],[108,13,124,11],[108,16,124,14,"data"],[108,20,124,18],[108,21,124,19],[108,22,124,20],[108,23,124,21],[109,4,125,2],[109,8,125,6,"colorType"],[109,17,125,15],[109,20,125,18,"data"],[109,24,125,22],[109,25,125,23],[109,26,125,24],[109,27,125,25],[109,28,125,26],[109,29,125,27],[110,4,126,2],[110,8,126,6,"compr"],[110,13,126,11],[110,16,126,14,"data"],[110,20,126,18],[110,21,126,19],[110,23,126,21],[110,24,126,22],[111,4,127,2],[111,8,127,6,"filter"],[111,14,127,12],[111,17,127,15,"data"],[111,21,127,19],[111,22,127,20],[111,24,127,22],[111,25,127,23],[112,4,128,2],[112,8,128,6,"interlace"],[112,17,128,15],[112,20,128,18,"data"],[112,24,128,22],[112,25,128,23],[112,27,128,25],[112,28,128,26],[114,4,130,2],[115,4,131,2],[116,4,132,2],[117,4,133,2],[119,4,135,2],[119,8,136,4,"depth"],[119,13,136,9],[119,18,136,14],[119,19,136,15],[119,23,137,4,"depth"],[119,28,137,9],[119,33,137,14],[119,34,137,15],[119,38,138,4,"depth"],[119,43,138,9],[119,48,138,14],[119,49,138,15],[119,53,139,4,"depth"],[119,58,139,9],[119,63,139,14],[119,64,139,15],[119,68,140,4,"depth"],[119,73,140,9],[119,78,140,14],[119,80,140,16],[119,82,141,4],[120,6,142,4],[120,10,142,8],[120,11,142,9,"error"],[120,16,142,14],[120,17,142,15],[120,21,142,19,"Error"],[120,26,142,24],[120,27,142,25],[120,51,142,49],[120,54,142,52,"depth"],[120,59,142,57],[120,60,142,58],[120,61,142,59],[121,6,143,4],[122,4,144,2],[123,4,145,2],[123,8,145,6],[123,10,145,8,"colorType"],[123,19,145,17],[123,23,145,21,"constants"],[123,32,145,30],[123,33,145,31,"COLORTYPE_TO_BPP_MAP"],[123,53,145,51],[123,54,145,52],[123,56,145,54],[124,6,146,4],[124,10,146,8],[124,11,146,9,"error"],[124,16,146,14],[124,17,146,15],[124,21,146,19,"Error"],[124,26,146,24],[124,27,146,25],[124,51,146,49],[124,52,146,50],[124,53,146,51],[125,6,147,4],[126,4,148,2],[127,4,149,2],[127,8,149,6,"compr"],[127,13,149,11],[127,18,149,16],[127,19,149,17],[127,21,149,19],[128,6,150,4],[128,10,150,8],[128,11,150,9,"error"],[128,16,150,14],[128,17,150,15],[128,21,150,19,"Error"],[128,26,150,24],[128,27,150,25],[128,59,150,57],[128,60,150,58],[128,61,150,59],[129,6,151,4],[130,4,152,2],[131,4,153,2],[131,8,153,6,"filter"],[131,14,153,12],[131,19,153,17],[131,20,153,18],[131,22,153,20],[132,6,154,4],[132,10,154,8],[132,11,154,9,"error"],[132,16,154,14],[132,17,154,15],[132,21,154,19,"Error"],[132,26,154,24],[132,27,154,25],[132,54,154,52],[132,55,154,53],[132,56,154,54],[133,6,155,4],[134,4,156,2],[135,4,157,2],[135,8,157,6,"interlace"],[135,17,157,15],[135,22,157,20],[135,23,157,21],[135,27,157,25,"interlace"],[135,36,157,34],[135,41,157,39],[135,42,157,40],[135,44,157,42],[136,6,158,4],[136,10,158,8],[136,11,158,9,"error"],[136,16,158,14],[136,17,158,15],[136,21,158,19,"Error"],[136,26,158,24],[136,27,158,25],[136,57,158,55],[136,58,158,56],[136,59,158,57],[137,6,159,4],[138,4,160,2],[139,4,162,2],[139,8,162,6],[139,9,162,7,"_colorType"],[139,19,162,17],[139,22,162,20,"colorType"],[139,31,162,29],[140,4,164,2],[140,8,164,6,"bpp"],[140,11,164,9],[140,14,164,12,"constants"],[140,23,164,21],[140,24,164,22,"COLORTYPE_TO_BPP_MAP"],[140,44,164,42],[140,45,164,43],[140,49,164,47],[140,50,164,48,"_colorType"],[140,60,164,58],[140,61,164,59],[141,4,166,2],[141,8,166,6],[141,9,166,7,"_hasIHDR"],[141,17,166,15],[141,20,166,18],[141,24,166,22],[142,4,168,2],[142,8,168,6],[142,9,168,7,"metadata"],[142,17,168,15],[142,18,168,16],[143,6,169,4,"width"],[143,11,169,9],[143,13,169,11,"width"],[143,18,169,16],[144,6,170,4,"height"],[144,12,170,10],[144,14,170,12,"height"],[144,20,170,18],[145,6,171,4,"depth"],[145,11,171,9],[145,13,171,11,"depth"],[145,18,171,16],[146,6,172,4,"interlace"],[146,15,172,13],[146,17,172,15,"Boolean"],[146,24,172,22],[146,25,172,23,"interlace"],[146,34,172,32],[146,35,172,33],[147,6,173,4,"palette"],[147,13,173,11],[147,15,173,13,"Boolean"],[147,22,173,20],[147,23,173,21,"colorType"],[147,32,173,30],[147,35,173,33,"constants"],[147,44,173,42],[147,45,173,43,"COLORTYPE_PALETTE"],[147,62,173,60],[147,63,173,61],[148,6,174,4,"color"],[148,11,174,9],[148,13,174,11,"Boolean"],[148,20,174,18],[148,21,174,19,"colorType"],[148,30,174,28],[148,33,174,31,"constants"],[148,42,174,40],[148,43,174,41,"COLORTYPE_COLOR"],[148,58,174,56],[148,59,174,57],[149,6,175,4,"alpha"],[149,11,175,9],[149,13,175,11,"Boolean"],[149,20,175,18],[149,21,175,19,"colorType"],[149,30,175,28],[149,33,175,31,"constants"],[149,42,175,40],[149,43,175,41,"COLORTYPE_ALPHA"],[149,58,175,56],[149,59,175,57],[150,6,176,4,"bpp"],[150,9,176,7],[150,11,176,9,"bpp"],[150,14,176,12],[151,6,177,4,"colorType"],[151,15,177,13],[151,17,177,15,"colorType"],[152,4,178,2],[152,5,178,3],[152,6,178,4],[153,4,180,2],[153,8,180,6],[153,9,180,7,"_handleChunkEnd"],[153,24,180,22],[153,25,180,23],[153,26,180,24],[154,2,181,0],[154,3,181,1],[155,2,183,0,"Parser"],[155,8,183,6],[155,9,183,7,"prototype"],[155,18,183,16],[155,19,183,17,"_handlePLTE"],[155,30,183,28],[155,33,183,31],[155,43,183,41,"length"],[155,49,183,47],[155,51,183,49],[156,4,184,2],[156,8,184,6],[156,9,184,7,"read"],[156,13,184,11],[156,14,184,12,"length"],[156,20,184,18],[156,22,184,20],[156,26,184,24],[156,27,184,25,"_parsePLTE"],[156,37,184,35],[156,38,184,36,"bind"],[156,42,184,40],[156,43,184,41],[156,47,184,45],[156,48,184,46],[156,49,184,47],[157,2,185,0],[157,3,185,1],[158,2,186,0,"Parser"],[158,8,186,6],[158,9,186,7,"prototype"],[158,18,186,16],[158,19,186,17,"_parsePLTE"],[158,29,186,27],[158,32,186,30],[158,42,186,40,"data"],[158,46,186,44],[158,48,186,46],[159,4,187,2],[159,8,187,6],[159,9,187,7,"_crc"],[159,13,187,11],[159,14,187,12,"write"],[159,19,187,17],[159,20,187,18,"data"],[159,24,187,22],[159,25,187,23],[160,4,189,2],[160,8,189,6,"entries"],[160,15,189,13],[160,18,189,16,"Math"],[160,22,189,20],[160,23,189,21,"floor"],[160,28,189,26],[160,29,189,27,"data"],[160,33,189,31],[160,34,189,32,"length"],[160,40,189,38],[160,43,189,41],[160,44,189,42],[160,45,189,43],[161,4,190,2],[163,4,192,2],[163,9,192,7],[163,13,192,11,"i"],[163,14,192,12],[163,17,192,15],[163,18,192,16],[163,20,192,18,"i"],[163,21,192,19],[163,24,192,22,"entries"],[163,31,192,29],[163,33,192,31,"i"],[163,34,192,32],[163,36,192,34],[163,38,192,36],[164,6,193,4],[164,10,193,8],[164,11,193,9,"_palette"],[164,19,193,17],[164,20,193,18,"push"],[164,24,193,22],[164,25,193,23],[164,26,193,24,"data"],[164,30,193,28],[164,31,193,29,"i"],[164,32,193,30],[164,35,193,33],[164,36,193,34],[164,37,193,35],[164,39,193,37,"data"],[164,43,193,41],[164,44,193,42,"i"],[164,45,193,43],[164,48,193,46],[164,49,193,47],[164,52,193,50],[164,53,193,51],[164,54,193,52],[164,56,193,54,"data"],[164,60,193,58],[164,61,193,59,"i"],[164,62,193,60],[164,65,193,63],[164,66,193,64],[164,69,193,67],[164,70,193,68],[164,71,193,69],[164,73,193,71],[164,77,193,75],[164,78,193,76],[164,79,193,77],[165,4,194,2],[166,4,196,2],[166,8,196,6],[166,9,196,7,"palette"],[166,16,196,14],[166,17,196,15],[166,21,196,19],[166,22,196,20,"_palette"],[166,30,196,28],[166,31,196,29],[167,4,198,2],[167,8,198,6],[167,9,198,7,"_handleChunkEnd"],[167,24,198,22],[167,25,198,23],[167,26,198,24],[168,2,199,0],[168,3,199,1],[169,2,201,0,"Parser"],[169,8,201,6],[169,9,201,7,"prototype"],[169,18,201,16],[169,19,201,17,"_handleTRNS"],[169,30,201,28],[169,33,201,31],[169,43,201,41,"length"],[169,49,201,47],[169,51,201,49],[170,4,202,2],[170,8,202,6],[170,9,202,7,"simpleTransparency"],[170,27,202,25],[170,28,202,26],[170,29,202,27],[171,4,203,2],[171,8,203,6],[171,9,203,7,"read"],[171,13,203,11],[171,14,203,12,"length"],[171,20,203,18],[171,22,203,20],[171,26,203,24],[171,27,203,25,"_parseTRNS"],[171,37,203,35],[171,38,203,36,"bind"],[171,42,203,40],[171,43,203,41],[171,47,203,45],[171,48,203,46],[171,49,203,47],[172,2,204,0],[172,3,204,1],[173,2,205,0,"Parser"],[173,8,205,6],[173,9,205,7,"prototype"],[173,18,205,16],[173,19,205,17,"_parseTRNS"],[173,29,205,27],[173,32,205,30],[173,42,205,40,"data"],[173,46,205,44],[173,48,205,46],[174,4,206,2],[174,8,206,6],[174,9,206,7,"_crc"],[174,13,206,11],[174,14,206,12,"write"],[174,19,206,17],[174,20,206,18,"data"],[174,24,206,22],[174,25,206,23],[176,4,208,2],[177,4,209,2],[177,8,209,6],[177,12,209,10],[177,13,209,11,"_colorType"],[177,23,209,21],[177,28,209,26,"constants"],[177,37,209,35],[177,38,209,36,"COLORTYPE_PALETTE_COLOR"],[177,61,209,59],[177,63,209,61],[178,6,210,4],[178,10,210,8],[178,14,210,12],[178,15,210,13,"_palette"],[178,23,210,21],[178,24,210,22,"length"],[178,30,210,28],[178,35,210,33],[178,36,210,34],[178,38,210,36],[179,8,211,6],[179,12,211,10],[179,13,211,11,"error"],[179,18,211,16],[179,19,211,17],[179,23,211,21,"Error"],[179,28,211,26],[179,29,211,27],[179,71,211,69],[179,72,211,70],[179,73,211,71],[180,8,212,6],[181,6,213,4],[182,6,214,4],[182,10,214,8,"data"],[182,14,214,12],[182,15,214,13,"length"],[182,21,214,19],[182,24,214,22],[182,28,214,26],[182,29,214,27,"_palette"],[182,37,214,35],[182,38,214,36,"length"],[182,44,214,42],[182,46,214,44],[183,8,215,6],[183,12,215,10],[183,13,215,11,"error"],[183,18,215,16],[183,19,215,17],[183,23,215,21,"Error"],[183,28,215,26],[183,29,215,27],[183,72,215,70],[183,73,215,71],[183,74,215,72],[184,8,216,6],[185,6,217,4],[186,6,218,4],[186,11,218,9],[186,15,218,13,"i"],[186,16,218,14],[186,19,218,17],[186,20,218,18],[186,22,218,20,"i"],[186,23,218,21],[186,26,218,24,"data"],[186,30,218,28],[186,31,218,29,"length"],[186,37,218,35],[186,39,218,37,"i"],[186,40,218,38],[186,42,218,40],[186,44,218,42],[187,8,219,6],[187,12,219,10],[187,13,219,11,"_palette"],[187,21,219,19],[187,22,219,20,"i"],[187,23,219,21],[187,24,219,22],[187,25,219,23],[187,26,219,24],[187,27,219,25],[187,30,219,28,"data"],[187,34,219,32],[187,35,219,33,"i"],[187,36,219,34],[187,37,219,35],[188,6,220,4],[189,6,221,4],[189,10,221,8],[189,11,221,9,"palette"],[189,18,221,16],[189,19,221,17],[189,23,221,21],[189,24,221,22,"_palette"],[189,32,221,30],[189,33,221,31],[190,4,222,2],[192,4,224,2],[193,4,225,2],[194,4,226,2],[194,8,226,6],[194,12,226,10],[194,13,226,11,"_colorType"],[194,23,226,21],[194,28,226,26,"constants"],[194,37,226,35],[194,38,226,36,"COLORTYPE_GRAYSCALE"],[194,57,226,55],[194,59,226,57],[195,6,227,4],[196,6,228,4],[196,10,228,8],[196,11,228,9,"transColor"],[196,21,228,19],[196,22,228,20],[196,23,228,21,"data"],[196,27,228,25],[196,28,228,26,"readUInt16BE"],[196,40,228,38],[196,41,228,39],[196,42,228,40],[196,43,228,41],[196,44,228,42],[196,45,228,43],[197,4,229,2],[198,4,230,2],[198,8,230,6],[198,12,230,10],[198,13,230,11,"_colorType"],[198,23,230,21],[198,28,230,26,"constants"],[198,37,230,35],[198,38,230,36,"COLORTYPE_COLOR"],[198,53,230,51],[198,55,230,53],[199,6,231,4],[199,10,231,8],[199,11,231,9,"transColor"],[199,21,231,19],[199,22,231,20],[199,23,232,6,"data"],[199,27,232,10],[199,28,232,11,"readUInt16BE"],[199,40,232,23],[199,41,232,24],[199,42,232,25],[199,43,232,26],[199,45,233,6,"data"],[199,49,233,10],[199,50,233,11,"readUInt16BE"],[199,62,233,23],[199,63,233,24],[199,64,233,25],[199,65,233,26],[199,67,234,6,"data"],[199,71,234,10],[199,72,234,11,"readUInt16BE"],[199,84,234,23],[199,85,234,24],[199,86,234,25],[199,87,234,26],[199,88,235,5],[199,89,235,6],[200,4,236,2],[201,4,238,2],[201,8,238,6],[201,9,238,7,"_handleChunkEnd"],[201,24,238,22],[201,25,238,23],[201,26,238,24],[202,2,239,0],[202,3,239,1],[203,2,241,0,"Parser"],[203,8,241,6],[203,9,241,7,"prototype"],[203,18,241,16],[203,19,241,17,"_handleGAMA"],[203,30,241,28],[203,33,241,31],[203,43,241,41,"length"],[203,49,241,47],[203,51,241,49],[204,4,242,2],[204,8,242,6],[204,9,242,7,"read"],[204,13,242,11],[204,14,242,12,"length"],[204,20,242,18],[204,22,242,20],[204,26,242,24],[204,27,242,25,"_parseGAMA"],[204,37,242,35],[204,38,242,36,"bind"],[204,42,242,40],[204,43,242,41],[204,47,242,45],[204,48,242,46],[204,49,242,47],[205,2,243,0],[205,3,243,1],[206,2,244,0,"Parser"],[206,8,244,6],[206,9,244,7,"prototype"],[206,18,244,16],[206,19,244,17,"_parseGAMA"],[206,29,244,27],[206,32,244,30],[206,42,244,40,"data"],[206,46,244,44],[206,48,244,46],[207,4,245,2],[207,8,245,6],[207,9,245,7,"_crc"],[207,13,245,11],[207,14,245,12,"write"],[207,19,245,17],[207,20,245,18,"data"],[207,24,245,22],[207,25,245,23],[208,4,246,2],[208,8,246,6],[208,9,246,7,"gamma"],[208,14,246,12],[208,15,246,13,"data"],[208,19,246,17],[208,20,246,18,"readUInt32BE"],[208,32,246,30],[208,33,246,31],[208,34,246,32],[208,35,246,33],[208,38,246,36,"constants"],[208,47,246,45],[208,48,246,46,"GAMMA_DIVISION"],[208,62,246,60],[208,63,246,61],[209,4,248,2],[209,8,248,6],[209,9,248,7,"_handleChunkEnd"],[209,24,248,22],[209,25,248,23],[209,26,248,24],[210,2,249,0],[210,3,249,1],[211,2,251,0,"Parser"],[211,8,251,6],[211,9,251,7,"prototype"],[211,18,251,16],[211,19,251,17,"_handleIDAT"],[211,30,251,28],[211,33,251,31],[211,43,251,41,"length"],[211,49,251,47],[211,51,251,49],[212,4,252,2],[212,8,252,6],[212,9,252,7],[212,13,252,11],[212,14,252,12,"_emittedHeadersFinished"],[212,37,252,35],[212,39,252,37],[213,6,253,4],[213,10,253,8],[213,11,253,9,"_emittedHeadersFinished"],[213,34,253,32],[213,37,253,35],[213,41,253,39],[214,6,254,4],[214,10,254,8],[214,11,254,9,"headersFinished"],[214,26,254,24],[214,27,254,25],[214,28,254,26],[215,4,255,2],[216,4,256,2],[216,8,256,6],[216,9,256,7,"read"],[216,13,256,11],[216,14,256,12],[216,15,256,13,"length"],[216,21,256,19],[216,23,256,21],[216,27,256,25],[216,28,256,26,"_parseIDAT"],[216,38,256,36],[216,39,256,37,"bind"],[216,43,256,41],[216,44,256,42],[216,48,256,46],[216,50,256,48,"length"],[216,56,256,54],[216,57,256,55],[216,58,256,56],[217,2,257,0],[217,3,257,1],[218,2,258,0,"Parser"],[218,8,258,6],[218,9,258,7,"prototype"],[218,18,258,16],[218,19,258,17,"_parseIDAT"],[218,29,258,27],[218,32,258,30],[218,42,258,40,"length"],[218,48,258,46],[218,50,258,48,"data"],[218,54,258,52],[218,56,258,54],[219,4,259,2],[219,8,259,6],[219,9,259,7,"_crc"],[219,13,259,11],[219,14,259,12,"write"],[219,19,259,17],[219,20,259,18,"data"],[219,24,259,22],[219,25,259,23],[220,4,261,2],[220,8,262,4],[220,12,262,8],[220,13,262,9,"_colorType"],[220,23,262,19],[220,28,262,24,"constants"],[220,37,262,33],[220,38,262,34,"COLORTYPE_PALETTE_COLOR"],[220,61,262,57],[220,65,263,4],[220,69,263,8],[220,70,263,9,"_palette"],[220,78,263,17],[220,79,263,18,"length"],[220,85,263,24],[220,90,263,29],[220,91,263,30],[220,93,264,4],[221,6,265,4],[221,12,265,10],[221,16,265,14,"Error"],[221,21,265,19],[221,22,265,20],[221,50,265,48],[221,51,265,49],[222,4,266,2],[223,4,268,2],[223,8,268,6],[223,9,268,7,"inflateData"],[223,20,268,18],[223,21,268,19,"data"],[223,25,268,23],[223,26,268,24],[224,4,269,2],[224,8,269,6,"leftOverLength"],[224,22,269,20],[224,25,269,23,"length"],[224,31,269,29],[224,34,269,32,"data"],[224,38,269,36],[224,39,269,37,"length"],[224,45,269,43],[225,4,271,2],[225,8,271,6,"leftOverLength"],[225,22,271,20],[225,25,271,23],[225,26,271,24],[225,28,271,26],[226,6,272,4],[226,10,272,8],[226,11,272,9,"_handleIDAT"],[226,22,272,20],[226,23,272,21,"leftOverLength"],[226,37,272,35],[226,38,272,36],[227,4,273,2],[227,5,273,3],[227,11,273,9],[228,6,274,4],[228,10,274,8],[228,11,274,9,"_handleChunkEnd"],[228,26,274,24],[228,27,274,25],[228,28,274,26],[229,4,275,2],[230,2,276,0],[230,3,276,1],[231,2,278,0,"Parser"],[231,8,278,6],[231,9,278,7,"prototype"],[231,18,278,16],[231,19,278,17,"_handleIEND"],[231,30,278,28],[231,33,278,31],[231,43,278,41,"length"],[231,49,278,47],[231,51,278,49],[232,4,279,2],[232,8,279,6],[232,9,279,7,"read"],[232,13,279,11],[232,14,279,12,"length"],[232,20,279,18],[232,22,279,20],[232,26,279,24],[232,27,279,25,"_parseIEND"],[232,37,279,35],[232,38,279,36,"bind"],[232,42,279,40],[232,43,279,41],[232,47,279,45],[232,48,279,46],[232,49,279,47],[233,2,280,0],[233,3,280,1],[234,2,281,0,"Parser"],[234,8,281,6],[234,9,281,7,"prototype"],[234,18,281,16],[234,19,281,17,"_parseIEND"],[234,29,281,27],[234,32,281,30],[234,42,281,40,"data"],[234,46,281,44],[234,48,281,46],[235,4,282,2],[235,8,282,6],[235,9,282,7,"_crc"],[235,13,282,11],[235,14,282,12,"write"],[235,19,282,17],[235,20,282,18,"data"],[235,24,282,22],[235,25,282,23],[236,4,284,2],[236,8,284,6],[236,9,284,7,"_hasIEND"],[236,17,284,15],[236,20,284,18],[236,24,284,22],[237,4,285,2],[237,8,285,6],[237,9,285,7,"_handleChunkEnd"],[237,24,285,22],[237,25,285,23],[237,26,285,24],[238,4,287,2],[238,8,287,6],[238,12,287,10],[238,13,287,11,"finished"],[238,21,287,19],[238,23,287,21],[239,6,288,4],[239,10,288,8],[239,11,288,9,"finished"],[239,19,288,17],[239,20,288,18],[239,21,288,19],[240,4,289,2],[241,2,290,0],[241,3,290,1],[242,0,290,2],[242,3]],"functionMap":{"names":["<global>","module.exports","<anonymous>","Parser.prototype.start","Parser.prototype._parseSignature","Parser.prototype._parseChunkBegin","Parser.prototype._skipChunk","Parser.prototype._handleChunkEnd","Parser.prototype._parseChunkEnd","Parser.prototype._handleIHDR","Parser.prototype._parseIHDR","Parser.prototype._handlePLTE","Parser.prototype._parsePLTE","Parser.prototype._handleTRNS","Parser.prototype._parseTRNS","Parser.prototype._handleGAMA","Parser.prototype._parseGAMA","Parser.prototype._handleIDAT","Parser.prototype._parseIDAT","Parser.prototype._handleIEND","Parser.prototype._parseIEND"],"mappings":"AAA;+BCK;yDC8B,cD;CDC;yBGE;CHE;mCIE;CJU;oCKE;CLoC;8BME;CNE;mCOE;CPE;kCQE;CRa;+BSE;CTE;8BUC;CV8D;+BWE;CXE;8BYC;CZa;+BaE;CbG;8BcC;CdkC;+BeE;CfE;8BgBC;ChBK;+BiBE;CjBM;8BkBC;ClBkB;+BmBE;CnBE;8BoBC;CpBS"},"hasCjsExports":true},"type":"js/module"}]}