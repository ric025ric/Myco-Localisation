{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":304},"end":{"line":6,"column":78,"index":382}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./components/CompatView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":383},"end":{"line":7,"column":53,"index":436}}],"key":"x3xyTyYEOkCA+EAT5e8aUviD1aY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"ViewHolder\", {\n    enumerable: true,\n    get: function () {\n      return ViewHolder;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _componentsCompatView = require(_dependencyMap[1], \"./components/CompatView\");\n  /**\n   * ViewHolder is a core component in FlashList that manages individual item rendering and layout.\n   * It handles the rendering of list items, separators, and manages layout updates for each item.\n   * The component is memoized to prevent unnecessary re-renders and includes layout comparison logic.\n   */\n\n  /**\n   * Internal ViewHolder component that handles the actual rendering of list items\n   * @template TItem - The type of item being rendered in the list\n   */\n  const ViewHolderInternal = props => {\n    // create ref for View\n    const viewRef = (0, _react.useRef)(null);\n    const {\n      index,\n      refHolder,\n      layout,\n      onSizeChanged,\n      renderItem,\n      extraData,\n      item,\n      target,\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      trailingItem,\n      horizontal\n    } = props;\n    (0, _react.useLayoutEffect)(() => {\n      refHolder.set(index, viewRef);\n      return () => {\n        if (refHolder.get(index) === viewRef) {\n          refHolder.delete(index);\n        }\n      };\n    }, [index, refHolder]);\n    const onLayout = (0, _react.useCallback)(event => {\n      onSizeChanged === null || onSizeChanged === void 0 ? void 0 : onSizeChanged(index, event.nativeEvent.layout);\n    }, [index, onSizeChanged]);\n    const separator = (0, _react.useMemo)(() => {\n      return ItemSeparatorComponent && trailingItem !== undefined ? (/*#__PURE__*/React.default.createElement(ItemSeparatorComponent, {\n        leadingItem: item,\n        trailingItem: trailingItem\n      })) : null;\n    }, [ItemSeparatorComponent, item, trailingItem]);\n    // console.log(\"ViewHolder re-render\", index);\n    const children = (0, _react.useMemo)(() => {\n      var _a;\n      return (_a = renderItem === null || renderItem === void 0 ? void 0 : renderItem({\n        item,\n        index,\n        extraData,\n        target\n      })) !== null && _a !== void 0 ? _a : null;\n      // TODO: Test more thoroughly\n      // We don't really  to re-render the children when the index changes\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [item, extraData, target, renderItem]);\n    const style = {\n      flexDirection: horizontal ? \"row\" : \"column\",\n      position: target === \"StickyHeader\" ? \"relative\" : \"absolute\",\n      width: layout.enforcedWidth ? layout.width : undefined,\n      height: layout.enforcedHeight ? layout.height : undefined,\n      minHeight: layout.minHeight,\n      minWidth: layout.minWidth,\n      maxHeight: layout.maxHeight,\n      maxWidth: layout.maxWidth,\n      left: layout.x,\n      top: layout.y\n    };\n    // TODO: Fix this type issue\n    const CompatContainer = CellRendererComponent !== null && CellRendererComponent !== void 0 ? CellRendererComponent : _componentsCompatView.CompatView;\n    return /*#__PURE__*/React.default.createElement(CompatContainer, {\n      ref: viewRef,\n      onLayout: onLayout,\n      style: style,\n      index: index\n    }, children, separator);\n  };\n  /**\n   * Memoized ViewHolder component that prevents unnecessary re-renders by comparing props\n   * @template TItem - The type of item being rendered in the list\n   */\n  const ViewHolder = /*#__PURE__*/React.default.memo(ViewHolderInternal, (prevProps, nextProps) => {\n    // compare all props and spread layout\n    return prevProps.index === nextProps.index && areLayoutsEqual(prevProps.layout, nextProps.layout) && prevProps.refHolder === nextProps.refHolder && prevProps.onSizeChanged === nextProps.onSizeChanged && prevProps.extraData === nextProps.extraData && prevProps.target === nextProps.target && prevProps.item === nextProps.item && prevProps.renderItem === nextProps.renderItem && prevProps.CellRendererComponent === nextProps.CellRendererComponent && prevProps.ItemSeparatorComponent === nextProps.ItemSeparatorComponent && prevProps.trailingItem === nextProps.trailingItem && prevProps.horizontal === nextProps.horizontal;\n  });\n  /**\n   * Compares two RVLayout objects to determine if they are equal\n   * Used in the memo comparison function to prevent unnecessary re-renders\n   * @param prevLayout - Previous layout object\n   * @param nextLayout - Next layout object\n   * @returns boolean indicating if layouts are equal\n   */\n  function areLayoutsEqual(prevLayout, nextLayout) {\n    return prevLayout.x === nextLayout.x && prevLayout.y === nextLayout.y && prevLayout.width === nextLayout.width && prevLayout.height === nextLayout.height && prevLayout.enforcedWidth === nextLayout.enforcedWidth && prevLayout.enforcedHeight === nextLayout.enforcedHeight && prevLayout.minWidth === nextLayout.minWidth && prevLayout.minHeight === nextLayout.minHeight && prevLayout.maxWidth === nextLayout.maxWidth && prevLayout.maxHeight === nextLayout.maxHeight;\n  }\n});","lineCount":117,"map":[[12,2,60,0,"Object"],[12,8,60,0],[12,9,60,0,"defineProperty"],[12,23,60,0],[12,24,60,0,"exports"],[12,31,60,0],[13,4,60,0,"enumerable"],[13,14,60,0],[14,4,60,0,"get"],[14,7,60,0],[14,18,60,0,"get"],[14,19,60,0],[15,6,60,0],[15,13,60,0,"ViewHolder"],[15,23,60,0],[16,4,60,0],[17,2,60,0],[18,2,6,0],[18,6,6,0,"_react"],[18,12,6,0],[18,15,6,0,"require"],[18,22,6,0],[18,23,6,0,"_dependencyMap"],[18,37,6,0],[19,2,6,0],[19,6,6,0,"React"],[19,11,6,0],[19,14,6,0,"_interopDefault"],[19,29,6,0],[19,30,6,0,"_react"],[19,36,6,0],[20,2,7,0],[20,6,7,0,"_componentsCompatView"],[20,27,7,0],[20,30,7,0,"require"],[20,37,7,0],[20,38,7,0,"_dependencyMap"],[20,52,7,0],[21,2,1,0],[22,0,2,0],[23,0,3,0],[24,0,4,0],[25,0,5,0],[27,2,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,2,12,0],[31,8,12,6,"ViewHolderInternal"],[31,26,12,24],[31,29,12,28,"props"],[31,34,12,33],[31,38,12,38],[32,4,13,4],[33,4,14,4],[33,10,14,10,"viewRef"],[33,17,14,17],[33,20,14,20],[33,24,14,20,"useRef"],[33,30,14,26],[33,31,14,26,"useRef"],[33,37,14,26],[33,39,14,27],[33,43,14,31],[33,44,14,32],[34,4,15,4],[34,10,15,10],[35,6,15,12,"index"],[35,11,15,17],[36,6,15,19,"refHolder"],[36,15,15,28],[37,6,15,30,"layout"],[37,12,15,36],[38,6,15,38,"onSizeChanged"],[38,19,15,51],[39,6,15,53,"renderItem"],[39,16,15,63],[40,6,15,65,"extraData"],[40,15,15,74],[41,6,15,76,"item"],[41,10,15,80],[42,6,15,82,"target"],[42,12,15,88],[43,6,15,90,"CellRendererComponent"],[43,27,15,111],[44,6,15,113,"ItemSeparatorComponent"],[44,28,15,135],[45,6,15,137,"trailingItem"],[45,18,15,149],[46,6,15,151,"horizontal"],[47,4,15,163],[47,5,15,164],[47,8,15,167,"props"],[47,13,15,172],[48,4,16,4],[48,8,16,4,"useLayoutEffect"],[48,14,16,19],[48,15,16,19,"useLayoutEffect"],[48,30,16,19],[48,32,16,20],[48,38,16,26],[49,6,17,8,"refHolder"],[49,15,17,17],[49,16,17,18,"set"],[49,19,17,21],[49,20,17,22,"index"],[49,25,17,27],[49,27,17,29,"viewRef"],[49,34,17,36],[49,35,17,37],[50,6,18,8],[50,13,18,15],[50,19,18,21],[51,8,19,12],[51,12,19,16,"refHolder"],[51,21,19,25],[51,22,19,26,"get"],[51,25,19,29],[51,26,19,30,"index"],[51,31,19,35],[51,32,19,36],[51,37,19,41,"viewRef"],[51,44,19,48],[51,46,19,50],[52,10,20,16,"refHolder"],[52,19,20,25],[52,20,20,26,"delete"],[52,26,20,32],[52,27,20,33,"index"],[52,32,20,38],[52,33,20,39],[53,8,21,12],[54,6,22,8],[54,7,22,9],[55,4,23,4],[55,5,23,5],[55,7,23,7],[55,8,23,8,"index"],[55,13,23,13],[55,15,23,15,"refHolder"],[55,24,23,24],[55,25,23,25],[55,26,23,26],[56,4,24,4],[56,10,24,10,"onLayout"],[56,18,24,18],[56,21,24,21],[56,25,24,21,"useCallback"],[56,31,24,32],[56,32,24,32,"useCallback"],[56,43,24,32],[56,45,24,34,"event"],[56,50,24,39],[56,54,24,44],[57,6,25,8,"onSizeChanged"],[57,19,25,21],[57,24,25,26],[57,28,25,30],[57,32,25,34,"onSizeChanged"],[57,45,25,47],[57,50,25,52],[57,55,25,57],[57,56,25,58],[57,59,25,61],[57,64,25,66],[57,65,25,67],[57,68,25,70,"onSizeChanged"],[57,81,25,83],[57,82,25,84,"index"],[57,87,25,89],[57,89,25,91,"event"],[57,94,25,96],[57,95,25,97,"nativeEvent"],[57,106,25,108],[57,107,25,109,"layout"],[57,113,25,115],[57,114,25,116],[58,4,26,4],[58,5,26,5],[58,7,26,7],[58,8,26,8,"index"],[58,13,26,13],[58,15,26,15,"onSizeChanged"],[58,28,26,28],[58,29,26,29],[58,30,26,30],[59,4,27,4],[59,10,27,10,"separator"],[59,19,27,19],[59,22,27,22],[59,26,27,22,"useMemo"],[59,32,27,29],[59,33,27,29,"useMemo"],[59,40,27,29],[59,42,27,30],[59,48,27,36],[60,6,28,8],[60,13,28,15,"ItemSeparatorComponent"],[60,35,28,37],[60,39,28,41,"trailingItem"],[60,51,28,53],[60,56,28,58,"undefined"],[60,65,28,67],[60,82,28,71,"React"],[60,87,28,76],[60,88,28,76,"default"],[60,95,28,76],[60,96,28,77,"createElement"],[60,109,28,90],[60,110,28,91,"ItemSeparatorComponent"],[60,132,28,113],[60,134,28,115],[61,8,28,117,"leadingItem"],[61,19,28,128],[61,21,28,130,"item"],[61,25,28,134],[62,8,28,136,"trailingItem"],[62,20,28,148],[62,22,28,150,"trailingItem"],[63,6,28,163],[63,7,28,164],[63,8,28,165],[63,12,28,169],[63,16,28,173],[64,4,29,4],[64,5,29,5],[64,7,29,7],[64,8,29,8,"ItemSeparatorComponent"],[64,30,29,30],[64,32,29,32,"item"],[64,36,29,36],[64,38,29,38,"trailingItem"],[64,50,29,50],[64,51,29,51],[64,52,29,52],[65,4,30,4],[66,4,31,4],[66,10,31,10,"children"],[66,18,31,18],[66,21,31,21],[66,25,31,21,"useMemo"],[66,31,31,28],[66,32,31,28,"useMemo"],[66,39,31,28],[66,41,31,29],[66,47,31,35],[67,6,32,8],[67,10,32,12,"_a"],[67,12,32,14],[68,6,33,8],[68,13,33,15],[68,14,33,16,"_a"],[68,16,33,18],[68,19,33,21,"renderItem"],[68,29,33,31],[68,34,33,36],[68,38,33,40],[68,42,33,44,"renderItem"],[68,52,33,54],[68,57,33,59],[68,62,33,64],[68,63,33,65],[68,66,33,68],[68,71,33,73],[68,72,33,74],[68,75,33,77,"renderItem"],[68,85,33,87],[68,86,33,88],[69,8,33,90,"item"],[69,12,33,94],[70,8,33,96,"index"],[70,13,33,101],[71,8,33,103,"extraData"],[71,17,33,112],[72,8,33,114,"target"],[73,6,33,121],[73,7,33,122],[73,8,33,123],[73,14,33,129],[73,18,33,133],[73,22,33,137,"_a"],[73,24,33,139],[73,29,33,144],[73,34,33,149],[73,35,33,150],[73,38,33,153,"_a"],[73,40,33,155],[73,43,33,158],[73,47,33,162],[74,6,34,8],[75,6,35,8],[76,6,36,8],[77,4,37,4],[77,5,37,5],[77,7,37,7],[77,8,37,8,"item"],[77,12,37,12],[77,14,37,14,"extraData"],[77,23,37,23],[77,25,37,25,"target"],[77,31,37,31],[77,33,37,33,"renderItem"],[77,43,37,43],[77,44,37,44],[77,45,37,45],[78,4,38,4],[78,10,38,10,"style"],[78,15,38,15],[78,18,38,18],[79,6,39,8,"flexDirection"],[79,19,39,21],[79,21,39,23,"horizontal"],[79,31,39,33],[79,34,39,36],[79,39,39,41],[79,42,39,44],[79,50,39,52],[80,6,40,8,"position"],[80,14,40,16],[80,16,40,18,"target"],[80,22,40,24],[80,27,40,29],[80,41,40,43],[80,44,40,46],[80,54,40,56],[80,57,40,59],[80,67,40,69],[81,6,41,8,"width"],[81,11,41,13],[81,13,41,15,"layout"],[81,19,41,21],[81,20,41,22,"enforcedWidth"],[81,33,41,35],[81,36,41,38,"layout"],[81,42,41,44],[81,43,41,45,"width"],[81,48,41,50],[81,51,41,53,"undefined"],[81,60,41,62],[82,6,42,8,"height"],[82,12,42,14],[82,14,42,16,"layout"],[82,20,42,22],[82,21,42,23,"enforcedHeight"],[82,35,42,37],[82,38,42,40,"layout"],[82,44,42,46],[82,45,42,47,"height"],[82,51,42,53],[82,54,42,56,"undefined"],[82,63,42,65],[83,6,43,8,"minHeight"],[83,15,43,17],[83,17,43,19,"layout"],[83,23,43,25],[83,24,43,26,"minHeight"],[83,33,43,35],[84,6,44,8,"minWidth"],[84,14,44,16],[84,16,44,18,"layout"],[84,22,44,24],[84,23,44,25,"minWidth"],[84,31,44,33],[85,6,45,8,"maxHeight"],[85,15,45,17],[85,17,45,19,"layout"],[85,23,45,25],[85,24,45,26,"maxHeight"],[85,33,45,35],[86,6,46,8,"maxWidth"],[86,14,46,16],[86,16,46,18,"layout"],[86,22,46,24],[86,23,46,25,"maxWidth"],[86,31,46,33],[87,6,47,8,"left"],[87,10,47,12],[87,12,47,14,"layout"],[87,18,47,20],[87,19,47,21,"x"],[87,20,47,22],[88,6,48,8,"top"],[88,9,48,11],[88,11,48,13,"layout"],[88,17,48,19],[88,18,48,20,"y"],[89,4,49,4],[89,5,49,5],[90,4,50,4],[91,4,51,4],[91,10,51,10,"CompatContainer"],[91,25,51,25],[91,28,51,29,"CellRendererComponent"],[91,49,51,50],[91,54,51,55],[91,58,51,59],[91,62,51,63,"CellRendererComponent"],[91,83,51,84],[91,88,51,89],[91,93,51,94],[91,94,51,95],[91,97,51,98,"CellRendererComponent"],[91,118,51,119],[91,121,51,122,"CompatView"],[91,142,51,132],[91,143,51,132,"CompatView"],[91,153,51,133],[92,4,52,4],[92,24,52,12,"React"],[92,29,52,17],[92,30,52,17,"default"],[92,37,52,17],[92,38,52,18,"createElement"],[92,51,52,31],[92,52,52,32,"CompatContainer"],[92,67,52,47],[92,69,52,49],[93,6,52,51,"ref"],[93,9,52,54],[93,11,52,56,"viewRef"],[93,18,52,63],[94,6,52,65,"onLayout"],[94,14,52,73],[94,16,52,75,"onLayout"],[94,24,52,83],[95,6,52,85,"style"],[95,11,52,90],[95,13,52,92,"style"],[95,18,52,97],[96,6,52,99,"index"],[96,11,52,104],[96,13,52,106,"index"],[97,4,52,112],[97,5,52,113],[97,7,53,8,"children"],[97,15,53,16],[97,17,54,8,"separator"],[97,26,54,17],[97,27,54,18],[98,2,55,0],[98,3,55,1],[99,2,56,0],[100,0,57,0],[101,0,58,0],[102,0,59,0],[103,2,60,7],[103,8,60,13,"ViewHolder"],[103,18,60,23],[103,34,60,26,"React"],[103,39,60,31],[103,40,60,31,"default"],[103,47,60,31],[103,48,60,32,"memo"],[103,52,60,36],[103,53,60,37,"ViewHolderInternal"],[103,71,60,55],[103,73,60,57],[103,74,60,58,"prevProps"],[103,83,60,67],[103,85,60,69,"nextProps"],[103,94,60,78],[103,99,60,83],[104,4,61,4],[105,4,62,4],[105,11,62,12,"prevProps"],[105,20,62,21],[105,21,62,22,"index"],[105,26,62,27],[105,31,62,32,"nextProps"],[105,40,62,41],[105,41,62,42,"index"],[105,46,62,47],[105,50,63,8,"areLayoutsEqual"],[105,65,63,23],[105,66,63,24,"prevProps"],[105,75,63,33],[105,76,63,34,"layout"],[105,82,63,40],[105,84,63,42,"nextProps"],[105,93,63,51],[105,94,63,52,"layout"],[105,100,63,58],[105,101,63,59],[105,105,64,8,"prevProps"],[105,114,64,17],[105,115,64,18,"refHolder"],[105,124,64,27],[105,129,64,32,"nextProps"],[105,138,64,41],[105,139,64,42,"refHolder"],[105,148,64,51],[105,152,65,8,"prevProps"],[105,161,65,17],[105,162,65,18,"onSizeChanged"],[105,175,65,31],[105,180,65,36,"nextProps"],[105,189,65,45],[105,190,65,46,"onSizeChanged"],[105,203,65,59],[105,207,66,8,"prevProps"],[105,216,66,17],[105,217,66,18,"extraData"],[105,226,66,27],[105,231,66,32,"nextProps"],[105,240,66,41],[105,241,66,42,"extraData"],[105,250,66,51],[105,254,67,8,"prevProps"],[105,263,67,17],[105,264,67,18,"target"],[105,270,67,24],[105,275,67,29,"nextProps"],[105,284,67,38],[105,285,67,39,"target"],[105,291,67,45],[105,295,68,8,"prevProps"],[105,304,68,17],[105,305,68,18,"item"],[105,309,68,22],[105,314,68,27,"nextProps"],[105,323,68,36],[105,324,68,37,"item"],[105,328,68,41],[105,332,69,8,"prevProps"],[105,341,69,17],[105,342,69,18,"renderItem"],[105,352,69,28],[105,357,69,33,"nextProps"],[105,366,69,42],[105,367,69,43,"renderItem"],[105,377,69,53],[105,381,70,8,"prevProps"],[105,390,70,17],[105,391,70,18,"CellRendererComponent"],[105,412,70,39],[105,417,70,44,"nextProps"],[105,426,70,53],[105,427,70,54,"CellRendererComponent"],[105,448,70,75],[105,452,71,8,"prevProps"],[105,461,71,17],[105,462,71,18,"ItemSeparatorComponent"],[105,484,71,40],[105,489,71,45,"nextProps"],[105,498,71,54],[105,499,71,55,"ItemSeparatorComponent"],[105,521,71,77],[105,525,72,8,"prevProps"],[105,534,72,17],[105,535,72,18,"trailingItem"],[105,547,72,30],[105,552,72,35,"nextProps"],[105,561,72,44],[105,562,72,45,"trailingItem"],[105,574,72,57],[105,578,73,8,"prevProps"],[105,587,73,17],[105,588,73,18,"horizontal"],[105,598,73,28],[105,603,73,33,"nextProps"],[105,612,73,42],[105,613,73,43,"horizontal"],[105,623,73,53],[106,2,74,0],[106,3,74,1],[106,4,74,2],[107,2,75,0],[108,0,76,0],[109,0,77,0],[110,0,78,0],[111,0,79,0],[112,0,80,0],[113,0,81,0],[114,2,82,0],[114,11,82,9,"areLayoutsEqual"],[114,26,82,24,"areLayoutsEqual"],[114,27,82,25,"prevLayout"],[114,37,82,35],[114,39,82,37,"nextLayout"],[114,49,82,47],[114,51,82,49],[115,4,83,4],[115,11,83,12,"prevLayout"],[115,21,83,22],[115,22,83,23,"x"],[115,23,83,24],[115,28,83,29,"nextLayout"],[115,38,83,39],[115,39,83,40,"x"],[115,40,83,41],[115,44,84,8,"prevLayout"],[115,54,84,18],[115,55,84,19,"y"],[115,56,84,20],[115,61,84,25,"nextLayout"],[115,71,84,35],[115,72,84,36,"y"],[115,73,84,37],[115,77,85,8,"prevLayout"],[115,87,85,18],[115,88,85,19,"width"],[115,93,85,24],[115,98,85,29,"nextLayout"],[115,108,85,39],[115,109,85,40,"width"],[115,114,85,45],[115,118,86,8,"prevLayout"],[115,128,86,18],[115,129,86,19,"height"],[115,135,86,25],[115,140,86,30,"nextLayout"],[115,150,86,40],[115,151,86,41,"height"],[115,157,86,47],[115,161,87,8,"prevLayout"],[115,171,87,18],[115,172,87,19,"enforcedWidth"],[115,185,87,32],[115,190,87,37,"nextLayout"],[115,200,87,47],[115,201,87,48,"enforcedWidth"],[115,214,87,61],[115,218,88,8,"prevLayout"],[115,228,88,18],[115,229,88,19,"enforcedHeight"],[115,243,88,33],[115,248,88,38,"nextLayout"],[115,258,88,48],[115,259,88,49,"enforcedHeight"],[115,273,88,63],[115,277,89,8,"prevLayout"],[115,287,89,18],[115,288,89,19,"minWidth"],[115,296,89,27],[115,301,89,32,"nextLayout"],[115,311,89,42],[115,312,89,43,"minWidth"],[115,320,89,51],[115,324,90,8,"prevLayout"],[115,334,90,18],[115,335,90,19,"minHeight"],[115,344,90,28],[115,349,90,33,"nextLayout"],[115,359,90,43],[115,360,90,44,"minHeight"],[115,369,90,53],[115,373,91,8,"prevLayout"],[115,383,91,18],[115,384,91,19,"maxWidth"],[115,392,91,27],[115,397,91,32,"nextLayout"],[115,407,91,42],[115,408,91,43,"maxWidth"],[115,416,91,51],[115,420,92,8,"prevLayout"],[115,430,92,18],[115,431,92,19,"maxHeight"],[115,440,92,28],[115,445,92,33,"nextLayout"],[115,455,92,43],[115,456,92,44,"maxHeight"],[115,465,92,53],[116,2,93,0],[117,0,93,1],[117,3]],"functionMap":{"names":["<global>","ViewHolderInternal","useLayoutEffect$argument_0","<anonymous>","onLayout","useMemo$argument_0","React.memo$argument_1","areLayoutsEqual"],"mappings":"AAA;2BCW;oBCI;eCE;SDI;KDC;iCGC;KHE;8BIC;KJE;6BIE;KJM;CDkB;yDMK;CNc;AOQ;CPW"},"hasCjsExports":false},"type":"js/module"}]}