{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":209},"end":{"line":6,"column":103,"index":312}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../ViewHolder","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":313},"end":{"line":7,"column":43,"index":356}}],"key":"sn+MeiS0NSfDRweeAMac7nlsfzA=","exportNames":["*"],"imports":1}},{"name":"./CompatView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":357},"end":{"line":8,"column":50,"index":407}}],"key":"UYNe4cBg9IyRt0L6BcG5qaaTje4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"StickyHeaders\", {\n    enumerable: true,\n    get: function () {\n      return StickyHeaders;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _ViewHolder = require(_dependencyMap[1], \"../ViewHolder\");\n  var _CompatView = require(_dependencyMap[2], \"./CompatView\");\n  /**\n   * StickyHeaders component manages the sticky header behavior in a FlashList.\n   * It handles the animation and positioning of headers that should remain fixed\n   * at the top of the list while scrolling.\n   */\n\n  const StickyHeaders = ({\n    stickyHeaderIndices,\n    renderItem,\n    stickyHeaderRef,\n    recyclerViewManager,\n    scrollY,\n    data,\n    extraData\n  }) => {\n    const [stickyHeaderState, setStickyHeaderState] = (0, _react.useState)({\n      currentStickyIndex: -1,\n      pushStartsAt: Number.MAX_SAFE_INTEGER\n    });\n    const {\n      currentStickyIndex,\n      pushStartsAt\n    } = stickyHeaderState;\n    // sort indices and memoize compute\n    const sortedIndices = (0, _react.useMemo)(() => {\n      return [...stickyHeaderIndices].sort((first, second) => first - second);\n    }, [stickyHeaderIndices]);\n    const legthInvalid = sortedIndices.length === 0 || recyclerViewManager.getDataLength() <= sortedIndices[sortedIndices.length - 1];\n    const compute = (0, _react.useCallback)(() => {\n      var _a, _b, _c, _d, _e, _f;\n      if (legthInvalid) {\n        return;\n      }\n      const adjustedScrollOffset = recyclerViewManager.getLastScrollOffset();\n      // Binary search for current sticky index\n      const currentIndexInArray = findCurrentStickyIndex(sortedIndices, adjustedScrollOffset, index => recyclerViewManager.getLayout(index).y);\n      const newStickyIndex = (_a = sortedIndices[currentIndexInArray]) !== null && _a !== void 0 ? _a : -1;\n      let newNextStickyIndex = (_b = sortedIndices[currentIndexInArray + 1]) !== null && _b !== void 0 ? _b : -1;\n      if (newNextStickyIndex > recyclerViewManager.getEngagedIndices().endIndex) {\n        newNextStickyIndex = -1;\n      }\n      // To make sure header offset is 0 in the interpolate compute\n      const newNextStickyY = newNextStickyIndex === -1 ? Number.MAX_SAFE_INTEGER : ((_d = (_c = recyclerViewManager.tryGetLayout(newNextStickyIndex)) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : 0) + recyclerViewManager.firstItemOffset;\n      const newCurrentStickyHeight = (_f = (_e = recyclerViewManager.tryGetLayout(newStickyIndex)) === null || _e === void 0 ? void 0 : _e.height) !== null && _f !== void 0 ? _f : 0;\n      const newPushStartsAt = newNextStickyY - newCurrentStickyHeight;\n      if (newStickyIndex !== currentStickyIndex || newPushStartsAt !== pushStartsAt) {\n        setStickyHeaderState({\n          currentStickyIndex: newStickyIndex,\n          pushStartsAt: newPushStartsAt\n        });\n      }\n    }, [legthInvalid, recyclerViewManager, sortedIndices, currentStickyIndex, pushStartsAt]);\n    (0, _react.useEffect)(() => {\n      compute();\n    }, [compute]);\n    // Optimized scroll handler using binary search pattern\n    (0, _react.useImperativeHandle)(stickyHeaderRef, () => ({\n      reportScrollEvent: () => {\n        compute();\n      }\n    }), [compute]);\n    const refHolder = (0, _react.useRef)(new Map()).current;\n    const translateY = (0, _react.useMemo)(() => {\n      var _a, _b;\n      const currentStickyHeight = (_b = (_a = recyclerViewManager.tryGetLayout(currentStickyIndex)) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n      return scrollY.interpolate({\n        inputRange: [pushStartsAt, pushStartsAt + currentStickyHeight],\n        outputRange: [0, -currentStickyHeight],\n        extrapolate: \"clamp\"\n      });\n    }, [recyclerViewManager, currentStickyIndex, scrollY, pushStartsAt]);\n    // Memoize header content\n    const headerContent = (0, _react.useMemo)(() => {\n      return /*#__PURE__*/React.default.createElement(_CompatView.CompatAnimatedView, {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 1,\n          transform: [{\n            translateY\n          }]\n        }\n      }, currentStickyIndex !== -1 && currentStickyIndex < data.length ? (/*#__PURE__*/React.default.createElement(_ViewHolder.ViewHolder, {\n        index: currentStickyIndex,\n        item: data[currentStickyIndex],\n        renderItem: renderItem,\n        layout: {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        },\n        refHolder: refHolder,\n        extraData: extraData,\n        trailingItem: null,\n        target: \"StickyHeader\"\n      })) : null);\n    }, [translateY, currentStickyIndex, data, renderItem, refHolder, extraData]);\n    return headerContent;\n  };\n  /**\n   * Binary search utility to find the current sticky header index based on scroll position\n   * @param sortedIndices - Array of indices sorted by Y position\n   * @param adjustedValue - Current scroll position\n   * @param getY - Function to get Y position for an index\n   * @returns Index of the current sticky header\n   */\n  function findCurrentStickyIndex(sortedIndices, adjustedValue, getY) {\n    let left = 0;\n    let right = sortedIndices.length - 1;\n    let result = -1;\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      const currentY = getY(sortedIndices[mid]);\n      if (currentY <= adjustedValue) {\n        result = mid;\n        left = mid + 1;\n      } else {\n        right = mid - 1;\n      }\n    }\n    return result;\n  }\n});","lineCount":147,"map":[[12,2,9,0,"Object"],[12,8,9,0],[12,9,9,0,"defineProperty"],[12,23,9,0],[12,24,9,0,"exports"],[12,31,9,0],[13,4,9,0,"enumerable"],[13,14,9,0],[14,4,9,0,"get"],[14,7,9,0],[14,18,9,0,"get"],[14,19,9,0],[15,6,9,0],[15,13,9,0,"StickyHeaders"],[15,26,9,0],[16,4,9,0],[17,2,9,0],[18,2,6,0],[18,6,6,0,"_react"],[18,12,6,0],[18,15,6,0,"require"],[18,22,6,0],[18,23,6,0,"_dependencyMap"],[18,37,6,0],[19,2,6,0],[19,6,6,0,"React"],[19,11,6,0],[19,14,6,0,"_interopDefault"],[19,29,6,0],[19,30,6,0,"_react"],[19,36,6,0],[20,2,7,0],[20,6,7,0,"_ViewHolder"],[20,17,7,0],[20,20,7,0,"require"],[20,27,7,0],[20,28,7,0,"_dependencyMap"],[20,42,7,0],[21,2,8,0],[21,6,8,0,"_CompatView"],[21,17,8,0],[21,20,8,0,"require"],[21,27,8,0],[21,28,8,0,"_dependencyMap"],[21,42,8,0],[22,2,1,0],[23,0,2,0],[24,0,3,0],[25,0,4,0],[26,0,5,0],[28,2,9,7],[28,8,9,13,"StickyHeaders"],[28,21,9,26],[28,24,9,29,"StickyHeaders"],[28,25,9,30],[29,4,9,32,"stickyHeaderIndices"],[29,23,9,51],[30,4,9,53,"renderItem"],[30,14,9,63],[31,4,9,65,"stickyHeaderRef"],[31,19,9,80],[32,4,9,82,"recyclerViewManager"],[32,23,9,101],[33,4,9,103,"scrollY"],[33,11,9,110],[34,4,9,112,"data"],[34,8,9,116],[35,4,9,118,"extraData"],[36,2,9,129],[36,3,9,130],[36,8,9,135],[37,4,10,4],[37,10,10,10],[37,11,10,11,"stickyHeaderState"],[37,28,10,28],[37,30,10,30,"setStickyHeaderState"],[37,50,10,50],[37,51,10,51],[37,54,10,54],[37,58,10,54,"useState"],[37,64,10,62],[37,65,10,62,"useState"],[37,73,10,62],[37,75,10,63],[38,6,11,8,"currentStickyIndex"],[38,24,11,26],[38,26,11,28],[38,27,11,29],[38,28,11,30],[39,6,12,8,"pushStartsAt"],[39,18,12,20],[39,20,12,22,"Number"],[39,26,12,28],[39,27,12,29,"MAX_SAFE_INTEGER"],[40,4,13,4],[40,5,13,5],[40,6,13,6],[41,4,14,4],[41,10,14,10],[42,6,14,12,"currentStickyIndex"],[42,24,14,30],[43,6,14,32,"pushStartsAt"],[44,4,14,45],[44,5,14,46],[44,8,14,49,"stickyHeaderState"],[44,25,14,66],[45,4,15,4],[46,4,16,4],[46,10,16,10,"sortedIndices"],[46,23,16,23],[46,26,16,26],[46,30,16,26,"useMemo"],[46,36,16,33],[46,37,16,33,"useMemo"],[46,44,16,33],[46,46,16,34],[46,52,16,40],[47,6,17,8],[47,13,17,15],[47,14,17,16],[47,17,17,19,"stickyHeaderIndices"],[47,36,17,38],[47,37,17,39],[47,38,17,40,"sort"],[47,42,17,44],[47,43,17,45],[47,44,17,46,"first"],[47,49,17,51],[47,51,17,53,"second"],[47,57,17,59],[47,62,17,64,"first"],[47,67,17,69],[47,70,17,72,"second"],[47,76,17,78],[47,77,17,79],[48,4,18,4],[48,5,18,5],[48,7,18,7],[48,8,18,8,"stickyHeaderIndices"],[48,27,18,27],[48,28,18,28],[48,29,18,29],[49,4,19,4],[49,10,19,10,"legthInvalid"],[49,22,19,22],[49,25,19,25,"sortedIndices"],[49,38,19,38],[49,39,19,39,"length"],[49,45,19,45],[49,50,19,50],[49,51,19,51],[49,55,20,8,"recyclerViewManager"],[49,74,20,27],[49,75,20,28,"getDataLength"],[49,88,20,41],[49,89,20,42],[49,90,20,43],[49,94,21,12,"sortedIndices"],[49,107,21,25],[49,108,21,26,"sortedIndices"],[49,121,21,39],[49,122,21,40,"length"],[49,128,21,46],[49,131,21,49],[49,132,21,50],[49,133,21,51],[50,4,22,4],[50,10,22,10,"compute"],[50,17,22,17],[50,20,22,20],[50,24,22,20,"useCallback"],[50,30,22,31],[50,31,22,31,"useCallback"],[50,42,22,31],[50,44,22,32],[50,50,22,38],[51,6,23,8],[51,10,23,12,"_a"],[51,12,23,14],[51,14,23,16,"_b"],[51,16,23,18],[51,18,23,20,"_c"],[51,20,23,22],[51,22,23,24,"_d"],[51,24,23,26],[51,26,23,28,"_e"],[51,28,23,30],[51,30,23,32,"_f"],[51,32,23,34],[52,6,24,8],[52,10,24,12,"legthInvalid"],[52,22,24,24],[52,24,24,26],[53,8,25,12],[54,6,26,8],[55,6,27,8],[55,12,27,14,"adjustedScrollOffset"],[55,32,27,34],[55,35,27,37,"recyclerViewManager"],[55,54,27,56],[55,55,27,57,"getLastScrollOffset"],[55,74,27,76],[55,75,27,77],[55,76,27,78],[56,6,28,8],[57,6,29,8],[57,12,29,14,"currentIndexInArray"],[57,31,29,33],[57,34,29,36,"findCurrentStickyIndex"],[57,56,29,58],[57,57,29,59,"sortedIndices"],[57,70,29,72],[57,72,29,74,"adjustedScrollOffset"],[57,92,29,94],[57,94,29,97,"index"],[57,99,29,102],[57,103,29,107,"recyclerViewManager"],[57,122,29,126],[57,123,29,127,"getLayout"],[57,132,29,136],[57,133,29,137,"index"],[57,138,29,142],[57,139,29,143],[57,140,29,144,"y"],[57,141,29,145],[57,142,29,146],[58,6,30,8],[58,12,30,14,"newStickyIndex"],[58,26,30,28],[58,29,30,31],[58,30,30,32,"_a"],[58,32,30,34],[58,35,30,37,"sortedIndices"],[58,48,30,50],[58,49,30,51,"currentIndexInArray"],[58,68,30,70],[58,69,30,71],[58,75,30,77],[58,79,30,81],[58,83,30,85,"_a"],[58,85,30,87],[58,90,30,92],[58,95,30,97],[58,96,30,98],[58,99,30,101,"_a"],[58,101,30,103],[58,104,30,106],[58,105,30,107],[58,106,30,108],[59,6,31,8],[59,10,31,12,"newNextStickyIndex"],[59,28,31,30],[59,31,31,33],[59,32,31,34,"_b"],[59,34,31,36],[59,37,31,39,"sortedIndices"],[59,50,31,52],[59,51,31,53,"currentIndexInArray"],[59,70,31,72],[59,73,31,75],[59,74,31,76],[59,75,31,77],[59,81,31,83],[59,85,31,87],[59,89,31,91,"_b"],[59,91,31,93],[59,96,31,98],[59,101,31,103],[59,102,31,104],[59,105,31,107,"_b"],[59,107,31,109],[59,110,31,112],[59,111,31,113],[59,112,31,114],[60,6,32,8],[60,10,32,12,"newNextStickyIndex"],[60,28,32,30],[60,31,32,33,"recyclerViewManager"],[60,50,32,52],[60,51,32,53,"getEngagedIndices"],[60,68,32,70],[60,69,32,71],[60,70,32,72],[60,71,32,73,"endIndex"],[60,79,32,81],[60,81,32,83],[61,8,33,12,"newNextStickyIndex"],[61,26,33,30],[61,29,33,33],[61,30,33,34],[61,31,33,35],[62,6,34,8],[63,6,35,8],[64,6,36,8],[64,12,36,14,"newNextStickyY"],[64,26,36,28],[64,29,36,31,"newNextStickyIndex"],[64,47,36,49],[64,52,36,54],[64,53,36,55],[64,54,36,56],[64,57,37,14,"Number"],[64,63,37,20],[64,64,37,21,"MAX_SAFE_INTEGER"],[64,80,37,37],[64,83,38,14],[64,84,38,15],[64,85,38,16,"_d"],[64,87,38,18],[64,90,38,21],[64,91,38,22,"_c"],[64,93,38,24],[64,96,38,27,"recyclerViewManager"],[64,115,38,46],[64,116,38,47,"tryGetLayout"],[64,128,38,59],[64,129,38,60,"newNextStickyIndex"],[64,147,38,78],[64,148,38,79],[64,154,38,85],[64,158,38,89],[64,162,38,93,"_c"],[64,164,38,95],[64,169,38,100],[64,174,38,105],[64,175,38,106],[64,178,38,109],[64,183,38,114],[64,184,38,115],[64,187,38,118,"_c"],[64,189,38,120],[64,190,38,121,"y"],[64,191,38,122],[64,197,38,128],[64,201,38,132],[64,205,38,136,"_d"],[64,207,38,138],[64,212,38,143],[64,217,38,148],[64,218,38,149],[64,221,38,152,"_d"],[64,223,38,154],[64,226,38,157],[64,227,38,158],[64,231,39,16,"recyclerViewManager"],[64,250,39,35],[64,251,39,36,"firstItemOffset"],[64,266,39,51],[65,6,40,8],[65,12,40,14,"newCurrentStickyHeight"],[65,34,40,36],[65,37,40,39],[65,38,40,40,"_f"],[65,40,40,42],[65,43,40,45],[65,44,40,46,"_e"],[65,46,40,48],[65,49,40,51,"recyclerViewManager"],[65,68,40,70],[65,69,40,71,"tryGetLayout"],[65,81,40,83],[65,82,40,84,"newStickyIndex"],[65,96,40,98],[65,97,40,99],[65,103,40,105],[65,107,40,109],[65,111,40,113,"_e"],[65,113,40,115],[65,118,40,120],[65,123,40,125],[65,124,40,126],[65,127,40,129],[65,132,40,134],[65,133,40,135],[65,136,40,138,"_e"],[65,138,40,140],[65,139,40,141,"height"],[65,145,40,147],[65,151,40,153],[65,155,40,157],[65,159,40,161,"_f"],[65,161,40,163],[65,166,40,168],[65,171,40,173],[65,172,40,174],[65,175,40,177,"_f"],[65,177,40,179],[65,180,40,182],[65,181,40,183],[66,6,41,8],[66,12,41,14,"newPushStartsAt"],[66,27,41,29],[66,30,41,32,"newNextStickyY"],[66,44,41,46],[66,47,41,49,"newCurrentStickyHeight"],[66,69,41,71],[67,6,42,8],[67,10,42,12,"newStickyIndex"],[67,24,42,26],[67,29,42,31,"currentStickyIndex"],[67,47,42,49],[67,51,43,12,"newPushStartsAt"],[67,66,43,27],[67,71,43,32,"pushStartsAt"],[67,83,43,44],[67,85,43,46],[68,8,44,12,"setStickyHeaderState"],[68,28,44,32],[68,29,44,33],[69,10,45,16,"currentStickyIndex"],[69,28,45,34],[69,30,45,36,"newStickyIndex"],[69,44,45,50],[70,10,46,16,"pushStartsAt"],[70,22,46,28],[70,24,46,30,"newPushStartsAt"],[71,8,47,12],[71,9,47,13],[71,10,47,14],[72,6,48,8],[73,4,49,4],[73,5,49,5],[73,7,49,7],[73,8,50,8,"legthInvalid"],[73,20,50,20],[73,22,51,8,"recyclerViewManager"],[73,41,51,27],[73,43,52,8,"sortedIndices"],[73,56,52,21],[73,58,53,8,"currentStickyIndex"],[73,76,53,26],[73,78,54,8,"pushStartsAt"],[73,90,54,20],[73,91,55,5],[73,92,55,6],[74,4,56,4],[74,8,56,4,"useEffect"],[74,14,56,13],[74,15,56,13,"useEffect"],[74,24,56,13],[74,26,56,14],[74,32,56,20],[75,6,57,8,"compute"],[75,13,57,15],[75,14,57,16],[75,15,57,17],[76,4,58,4],[76,5,58,5],[76,7,58,7],[76,8,58,8,"compute"],[76,15,58,15],[76,16,58,16],[76,17,58,17],[77,4,59,4],[78,4,60,4],[78,8,60,4,"useImperativeHandle"],[78,14,60,23],[78,15,60,23,"useImperativeHandle"],[78,34,60,23],[78,36,60,24,"stickyHeaderRef"],[78,51,60,39],[78,53,60,41],[78,60,60,48],[79,6,61,8,"reportScrollEvent"],[79,23,61,25],[79,25,61,27,"reportScrollEvent"],[79,26,61,27],[79,31,61,33],[80,8,62,12,"compute"],[80,15,62,19],[80,16,62,20],[80,17,62,21],[81,6,63,8],[82,4,64,4],[82,5,64,5],[82,6,64,6],[82,8,64,8],[82,9,64,9,"compute"],[82,16,64,16],[82,17,64,17],[82,18,64,18],[83,4,65,4],[83,10,65,10,"refHolder"],[83,19,65,19],[83,22,65,22],[83,26,65,22,"useRef"],[83,32,65,28],[83,33,65,28,"useRef"],[83,39,65,28],[83,41,65,29],[83,45,65,33,"Map"],[83,48,65,36],[83,49,65,37],[83,50,65,38],[83,51,65,39],[83,52,65,40,"current"],[83,59,65,47],[84,4,66,4],[84,10,66,10,"translateY"],[84,20,66,20],[84,23,66,23],[84,27,66,23,"useMemo"],[84,33,66,30],[84,34,66,30,"useMemo"],[84,41,66,30],[84,43,66,31],[84,49,66,37],[85,6,67,8],[85,10,67,12,"_a"],[85,12,67,14],[85,14,67,16,"_b"],[85,16,67,18],[86,6,68,8],[86,12,68,14,"currentStickyHeight"],[86,31,68,33],[86,34,68,36],[86,35,68,37,"_b"],[86,37,68,39],[86,40,68,42],[86,41,68,43,"_a"],[86,43,68,45],[86,46,68,48,"recyclerViewManager"],[86,65,68,67],[86,66,68,68,"tryGetLayout"],[86,78,68,80],[86,79,68,81,"currentStickyIndex"],[86,97,68,99],[86,98,68,100],[86,104,68,106],[86,108,68,110],[86,112,68,114,"_a"],[86,114,68,116],[86,119,68,121],[86,124,68,126],[86,125,68,127],[86,128,68,130],[86,133,68,135],[86,134,68,136],[86,137,68,139,"_a"],[86,139,68,141],[86,140,68,142,"height"],[86,146,68,148],[86,152,68,154],[86,156,68,158],[86,160,68,162,"_b"],[86,162,68,164],[86,167,68,169],[86,172,68,174],[86,173,68,175],[86,176,68,178,"_b"],[86,178,68,180],[86,181,68,183],[86,182,68,184],[87,6,69,8],[87,13,69,15,"scrollY"],[87,20,69,22],[87,21,69,23,"interpolate"],[87,32,69,34],[87,33,69,35],[88,8,70,12,"inputRange"],[88,18,70,22],[88,20,70,24],[88,21,70,25,"pushStartsAt"],[88,33,70,37],[88,35,70,39,"pushStartsAt"],[88,47,70,51],[88,50,70,54,"currentStickyHeight"],[88,69,70,73],[88,70,70,74],[89,8,71,12,"outputRange"],[89,19,71,23],[89,21,71,25],[89,22,71,26],[89,23,71,27],[89,25,71,29],[89,26,71,30,"currentStickyHeight"],[89,45,71,49],[89,46,71,50],[90,8,72,12,"extrapolate"],[90,19,72,23],[90,21,72,25],[91,6,73,8],[91,7,73,9],[91,8,73,10],[92,4,74,4],[92,5,74,5],[92,7,74,7],[92,8,74,8,"recyclerViewManager"],[92,27,74,27],[92,29,74,29,"currentStickyIndex"],[92,47,74,47],[92,49,74,49,"scrollY"],[92,56,74,56],[92,58,74,58,"pushStartsAt"],[92,70,74,70],[92,71,74,71],[92,72,74,72],[93,4,75,4],[94,4,76,4],[94,10,76,10,"headerContent"],[94,23,76,23],[94,26,76,26],[94,30,76,26,"useMemo"],[94,36,76,33],[94,37,76,33,"useMemo"],[94,44,76,33],[94,46,76,34],[94,52,76,40],[95,6,77,8],[95,26,77,16,"React"],[95,31,77,21],[95,32,77,21,"default"],[95,39,77,21],[95,40,77,22,"createElement"],[95,53,77,35],[95,54,77,36,"CompatAnimatedView"],[95,65,77,54],[95,66,77,54,"CompatAnimatedView"],[95,84,77,54],[95,86,77,56],[96,8,77,58,"style"],[96,13,77,63],[96,15,77,65],[97,10,78,16,"position"],[97,18,78,24],[97,20,78,26],[97,30,78,36],[98,10,79,16,"top"],[98,13,79,19],[98,15,79,21],[98,16,79,22],[99,10,80,16,"left"],[99,14,80,20],[99,16,80,22],[99,17,80,23],[100,10,81,16,"right"],[100,15,81,21],[100,17,81,23],[100,18,81,24],[101,10,82,16,"zIndex"],[101,16,82,22],[101,18,82,24],[101,19,82,25],[102,10,83,16,"transform"],[102,19,83,25],[102,21,83,27],[102,22,83,28],[103,12,83,30,"translateY"],[104,10,83,41],[104,11,83,42],[105,8,84,12],[106,6,84,14],[106,7,84,15],[106,9,84,17,"currentStickyIndex"],[106,27,84,35],[106,32,84,40],[106,33,84,41],[106,34,84,42],[106,38,84,46,"currentStickyIndex"],[106,56,84,64],[106,59,84,67,"data"],[106,63,84,71],[106,64,84,72,"length"],[106,70,84,78],[106,87,84,82,"React"],[106,92,84,87],[106,93,84,87,"default"],[106,100,84,87],[106,101,84,88,"createElement"],[106,114,84,101],[106,115,84,102,"ViewHolder"],[106,126,84,112],[106,127,84,112,"ViewHolder"],[106,137,84,112],[106,139,84,114],[107,8,84,116,"index"],[107,13,84,121],[107,15,84,123,"currentStickyIndex"],[107,33,84,141],[108,8,84,143,"item"],[108,12,84,147],[108,14,84,149,"data"],[108,18,84,153],[108,19,84,154,"currentStickyIndex"],[108,37,84,172],[108,38,84,173],[109,8,84,175,"renderItem"],[109,18,84,185],[109,20,84,187,"renderItem"],[109,30,84,197],[110,8,84,199,"layout"],[110,14,84,205],[110,16,84,207],[111,10,84,209,"x"],[111,11,84,210],[111,13,84,212],[111,14,84,213],[112,10,84,215,"y"],[112,11,84,216],[112,13,84,218],[112,14,84,219],[113,10,84,221,"width"],[113,15,84,226],[113,17,84,228],[113,18,84,229],[114,10,84,231,"height"],[114,16,84,237],[114,18,84,239],[115,8,84,241],[115,9,84,242],[116,8,84,244,"refHolder"],[116,17,84,253],[116,19,84,255,"refHolder"],[116,28,84,264],[117,8,84,266,"extraData"],[117,17,84,275],[117,19,84,277,"extraData"],[117,28,84,286],[118,8,84,288,"trailingItem"],[118,20,84,300],[118,22,84,302],[118,26,84,306],[119,8,84,308,"target"],[119,14,84,314],[119,16,84,316],[120,6,84,331],[120,7,84,332],[120,8,84,333],[120,12,84,337],[120,16,84,341],[120,17,84,342],[121,4,85,4],[121,5,85,5],[121,7,85,7],[121,8,85,8,"translateY"],[121,18,85,18],[121,20,85,20,"currentStickyIndex"],[121,38,85,38],[121,40,85,40,"data"],[121,44,85,44],[121,46,85,46,"renderItem"],[121,56,85,56],[121,58,85,58,"refHolder"],[121,67,85,67],[121,69,85,69,"extraData"],[121,78,85,78],[121,79,85,79],[121,80,85,80],[122,4,86,4],[122,11,86,11,"headerContent"],[122,24,86,24],[123,2,87,0],[123,3,87,1],[124,2,88,0],[125,0,89,0],[126,0,90,0],[127,0,91,0],[128,0,92,0],[129,0,93,0],[130,0,94,0],[131,2,95,0],[131,11,95,9,"findCurrentStickyIndex"],[131,33,95,31,"findCurrentStickyIndex"],[131,34,95,32,"sortedIndices"],[131,47,95,45],[131,49,95,47,"adjustedValue"],[131,62,95,60],[131,64,95,62,"getY"],[131,68,95,66],[131,70,95,68],[132,4,96,4],[132,8,96,8,"left"],[132,12,96,12],[132,15,96,15],[132,16,96,16],[133,4,97,4],[133,8,97,8,"right"],[133,13,97,13],[133,16,97,16,"sortedIndices"],[133,29,97,29],[133,30,97,30,"length"],[133,36,97,36],[133,39,97,39],[133,40,97,40],[134,4,98,4],[134,8,98,8,"result"],[134,14,98,14],[134,17,98,17],[134,18,98,18],[134,19,98,19],[135,4,99,4],[135,11,99,11,"left"],[135,15,99,15],[135,19,99,19,"right"],[135,24,99,24],[135,26,99,26],[136,6,100,8],[136,12,100,14,"mid"],[136,15,100,17],[136,18,100,20,"Math"],[136,22,100,24],[136,23,100,25,"floor"],[136,28,100,30],[136,29,100,31],[136,30,100,32,"left"],[136,34,100,36],[136,37,100,39,"right"],[136,42,100,44],[136,46,100,48],[136,47,100,49],[136,48,100,50],[137,6,101,8],[137,12,101,14,"currentY"],[137,20,101,22],[137,23,101,25,"getY"],[137,27,101,29],[137,28,101,30,"sortedIndices"],[137,41,101,43],[137,42,101,44,"mid"],[137,45,101,47],[137,46,101,48],[137,47,101,49],[138,6,102,8],[138,10,102,12,"currentY"],[138,18,102,20],[138,22,102,24,"adjustedValue"],[138,35,102,37],[138,37,102,39],[139,8,103,12,"result"],[139,14,103,18],[139,17,103,21,"mid"],[139,20,103,24],[140,8,104,12,"left"],[140,12,104,16],[140,15,104,19,"mid"],[140,18,104,22],[140,21,104,25],[140,22,104,26],[141,6,105,8],[141,7,105,9],[141,13,106,13],[142,8,107,12,"right"],[142,13,107,17],[142,16,107,20,"mid"],[142,19,107,23],[142,22,107,26],[142,23,107,27],[143,6,108,8],[144,4,109,4],[145,4,110,4],[145,11,110,11,"result"],[145,17,110,17],[146,2,111,0],[147,0,111,1],[147,3]],"functionMap":{"names":["<global>","StickyHeaders","useMemo$argument_0","sort$argument_0","compute","findCurrentStickyIndex$argument_2","useEffect$argument_0","useImperativeHandle$argument_1","reportScrollEvent","findCurrentStickyIndex"],"mappings":"AAA;6BCQ;kCCO;6CCC,iCD;KDC;gCGI;gGCO,iDD;KHoB;cKO;KLE;yCME;2BCC;SDE;MNC;+BCE;KDQ;kCCE;KDS;CDE;ASQ;CTgB"},"hasCjsExports":false},"type":"js/module"}]}