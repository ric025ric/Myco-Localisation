{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":300},"end":{"line":8,"column":52,"index":335}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":353},"end":{"line":9,"column":32,"index":369}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./NativeTabsTriggerTabBar","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":34,"index":405},"end":{"line":10,"column":70,"index":441}}],"key":"WVwnFVa4tbZlC8q45AzhMA62QpY=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":459},"end":{"line":11,"column":34,"index":477}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../../link/preview/PreviewRouteContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":30,"index":509},"end":{"line":12,"column":79,"index":558}}],"key":"RjOiGG3bmFq3DQhcV/pBDiHQb00=","exportNames":["*"],"imports":1}},{"name":"../../views/useSafeLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":30,"index":590},"end":{"line":13,"column":72,"index":632}}],"key":"+Bqbcz5xwcnBwCK/TVf05V4tLZ8=","exportNames":["*"],"imports":1}},{"name":"../common/elements","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":653},"end":{"line":14,"column":48,"index":682}}],"key":"1RFkZDeCNqyJBPS3jQJ086fMimI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeTabTrigger = void 0;\n  exports.convertTabPropsToOptions = convertTabPropsToOptions;\n  exports.appendIconOptions = appendIconOptions;\n  exports.isNativeTabTrigger = isNativeTabTrigger;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = require(_dependencyMap[1], \"react\");\n  const NativeTabsTriggerTabBar_1 = require(_dependencyMap[2], \"./NativeTabsTriggerTabBar\");\n  const utils_1 = require(_dependencyMap[3], \"./utils\");\n  const PreviewRouteContext_1 = require(_dependencyMap[4], \"../../link/preview/PreviewRouteContext\");\n  const useSafeLayoutEffect_1 = require(_dependencyMap[5], \"../../views/useSafeLayoutEffect\");\n  const elements_1 = require(_dependencyMap[6], \"../common/elements\");\n  /**\n   * The component used to customize the native tab options both in the _layout file and from the tab screen.\n   *\n   * When used in the _layout file, you need to provide a `name` prop.\n   * When used in the tab screen, the `name` prop takes no effect.\n   *\n   * @example\n   * ```tsx\n   * // In _layout file\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function Layout() {\n   *   return (\n   *     <NativeTabs>\n   *       <NativeTabs.Trigger name=\"home\" />\n   *       <NativeTabs.Trigger name=\"settings\" />\n   *     </NativeTabs>\n   *   );\n   * }\n   * ```\n   *\n   * @example\n   * ```tsx\n   * // In a tab screen\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function HomeScreen() {\n   *   return (\n   *     <View>\n   *       <NativeTabs.Trigger>\n   *         <Label>Home</Label>\n   *       </NativeTabs.Trigger>\n   *       <Text>This is home screen!</Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * > **Note:** You can use the alias `NativeTabs.Trigger` for this component.\n   */\n  function NativeTabTriggerImpl(props) {\n    const route = (0, native_1.useRoute)();\n    const navigation = (0, native_1.useNavigation)();\n    const isFocused = navigation.isFocused();\n    const isInPreview = (0, PreviewRouteContext_1.useIsPreview)();\n    (0, useSafeLayoutEffect_1.useSafeLayoutEffect)(() => {\n      // This will cause the tab to update only when it is focused.\n      // As long as all tabs are loaded at the start, we don't need this check.\n      // It is here to ensure similar behavior to stack\n      if (isFocused && !isInPreview) {\n        if (navigation.getState()?.type !== 'tab') {\n          throw new Error(`Trigger component can only be used in the tab screen. Current route: ${route.name}`);\n        }\n        const options = convertTabPropsToOptions(props, true);\n        navigation.setOptions(options);\n      }\n    }, [isFocused, props, isInPreview]);\n    return null;\n  }\n  exports.NativeTabTrigger = Object.assign(NativeTabTriggerImpl, {\n    TabBar: NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar\n  });\n  function convertTabPropsToOptions({\n    options,\n    hidden,\n    children,\n    role,\n    disablePopToTop,\n    disableScrollToTop\n  }, isDynamic = false) {\n    const initialOptions = isDynamic ? Object.assign({}, options) : Object.assign({}, options, {\n      hidden: !!hidden,\n      specialEffects: {\n        repeatedTabSelection: {\n          popToRoot: !disablePopToTop,\n          scrollToTop: !disableScrollToTop\n        }\n      },\n      role: role ?? options?.role\n    });\n    const allowedChildren = (0, utils_1.filterAllowedChildrenElements)(children, [elements_1.Badge, elements_1.Label, elements_1.Icon, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar]);\n    return allowedChildren.reduce((acc, child) => {\n      if ((0, utils_1.isChildOfType)(child, elements_1.Badge)) {\n        appendBadgeOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Label)) {\n        appendLabelOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Icon)) {\n        appendIconOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar)) {\n        appendTabBarOptions(acc, child.props);\n      }\n      return acc;\n    }, Object.assign({}, initialOptions));\n  }\n  function appendBadgeOptions(options, props) {\n    if (props.children) {\n      options.badgeValue = String(props.children);\n      options.selectedBadgeBackgroundColor = props.selectedBackgroundColor;\n    } else if (!props.hidden) {\n      // If no value is provided, we set it to a space to show the badge\n      // Otherwise, the `react-native-screens` will interpret it as a hidden badge\n      // https://github.com/software-mansion/react-native-screens/blob/b4358fd95dd0736fc54df6bb97f210dc89edf24c/ios/bottom-tabs/RNSBottomTabsScreenComponentView.mm#L172\n      options.badgeValue = ' ';\n    }\n  }\n  function appendLabelOptions(options, props) {\n    if (props.hidden) {\n      options.title = '';\n    } else {\n      options.title = props.children;\n      options.selectedLabelStyle = props.selectedStyle;\n    }\n  }\n  function appendIconOptions(options, props) {\n    if ('src' in props && props.src) {\n      const icon = convertIconSrcToIconOption(props);\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('sf' in props && false) {\n      if (typeof props.sf === 'string') {\n        options.icon = props.sf ? {\n          sf: props.sf\n        } : undefined;\n        options.selectedIcon = undefined;\n      } else if (props.sf) {\n        options.icon = props.sf.default ? {\n          sf: props.sf.default\n        } : undefined;\n        options.selectedIcon = props.sf.selected ? {\n          sf: props.sf.selected\n        } : undefined;\n      }\n    } else if ('androidSrc' in props && false) {\n      const icon = convertIconSrcToIconOption({\n        src: props.androidSrc\n      });\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('drawable' in props && false) {\n      options.icon = {\n        drawable: props.drawable\n      };\n      options.selectedIcon = undefined;\n    }\n    options.selectedIconColor = props.selectedColor;\n  }\n  function convertIconSrcToIconOption(icon) {\n    if (icon && icon.src) {\n      const {\n        defaultIcon,\n        selected\n      } = typeof icon.src === 'object' && 'selected' in icon.src ? {\n        defaultIcon: icon.src.default,\n        selected: icon.src.selected\n      } : {\n        defaultIcon: icon.src\n      };\n      const options = {};\n      options.icon = convertSrcOrComponentToSrc(defaultIcon);\n      options.selectedIcon = convertSrcOrComponentToSrc(selected);\n      return options;\n    }\n    return undefined;\n  }\n  function convertSrcOrComponentToSrc(src) {\n    if (src) {\n      if ((0, react_1.isValidElement)(src)) {\n        if (src.type === elements_1.VectorIcon) {\n          const props = src.props;\n          return {\n            src: props.family.getImageSource(props.name, 24, 'white')\n          };\n        } else {\n          console.warn('Only VectorIcon is supported as a React element in Icon.src');\n        }\n      } else {\n        return {\n          src\n        };\n      }\n    }\n    return undefined;\n  }\n  function appendTabBarOptions(options, props) {\n    const {\n      backgroundColor,\n      blurEffect,\n      iconColor,\n      disableTransparentOnScrollEdge,\n      badgeBackgroundColor,\n      badgeTextColor,\n      indicatorColor,\n      labelStyle,\n      shadowColor\n    } = props;\n    if (backgroundColor) {\n      options.backgroundColor = backgroundColor;\n    }\n    // We need better native integration of this on Android\n    // Simulating from JS side creates ugly transitions\n    if (true) {\n      if (blurEffect) {\n        options.blurEffect = blurEffect;\n      }\n      if (shadowColor) {\n        options.shadowColor = shadowColor;\n      }\n      if (iconColor) {\n        options.iconColor = iconColor;\n      }\n      if (disableTransparentOnScrollEdge !== undefined) {\n        options.disableTransparentOnScrollEdge = disableTransparentOnScrollEdge;\n      }\n      if (badgeBackgroundColor) {\n        options.badgeBackgroundColor = badgeBackgroundColor;\n      }\n      if (badgeTextColor) {\n        options.badgeTextColor = badgeTextColor;\n      }\n      if (indicatorColor) {\n        options.indicatorColor = indicatorColor;\n      }\n      if (labelStyle) {\n        options.labelStyle = labelStyle;\n      }\n    }\n  }\n  function isNativeTabTrigger(child, contextKey) {\n    if ((0, react_1.isValidElement)(child) && child && child.type === exports.NativeTabTrigger) {\n      if (typeof child.props === 'object' && child.props && 'name' in child.props && !child.props.name) {\n        throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (['component', 'getComponent'].some(key => child.props && typeof child.props === 'object' && key in child.props)) {\n          throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`component\\` or \\`getComponent\\` prop when used as a child of a Layout Route`);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n});","lineCount":260,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"NativeTabTrigger"],[8,26,4,24],[8,29,4,27],[8,34,4,32],[8,35,4,33],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"convertTabPropsToOptions"],[9,34,5,32],[9,37,5,35,"convertTabPropsToOptions"],[9,61,5,59],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"appendIconOptions"],[10,27,6,25],[10,30,6,28,"appendIconOptions"],[10,47,6,45],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"isNativeTabTrigger"],[11,28,7,26],[11,31,7,29,"isNativeTabTrigger"],[11,49,7,47],[12,2,8,0],[12,8,8,6,"native_1"],[12,16,8,14],[12,19,8,17,"require"],[12,26,8,24],[12,27,8,24,"_dependencyMap"],[12,41,8,24],[12,72,8,51],[12,73,8,52],[13,2,9,0],[13,8,9,6,"react_1"],[13,15,9,13],[13,18,9,16,"require"],[13,25,9,23],[13,26,9,23,"_dependencyMap"],[13,40,9,23],[13,52,9,31],[13,53,9,32],[14,2,10,0],[14,8,10,6,"NativeTabsTriggerTabBar_1"],[14,33,10,31],[14,36,10,34,"require"],[14,43,10,41],[14,44,10,41,"_dependencyMap"],[14,58,10,41],[14,90,10,69],[14,91,10,70],[15,2,11,0],[15,8,11,6,"utils_1"],[15,15,11,13],[15,18,11,16,"require"],[15,25,11,23],[15,26,11,23,"_dependencyMap"],[15,40,11,23],[15,54,11,33],[15,55,11,34],[16,2,12,0],[16,8,12,6,"PreviewRouteContext_1"],[16,29,12,27],[16,32,12,30,"require"],[16,39,12,37],[16,40,12,37,"_dependencyMap"],[16,54,12,37],[16,99,12,78],[16,100,12,79],[17,2,13,0],[17,8,13,6,"useSafeLayoutEffect_1"],[17,29,13,27],[17,32,13,30,"require"],[17,39,13,37],[17,40,13,37,"_dependencyMap"],[17,54,13,37],[17,92,13,71],[17,93,13,72],[18,2,14,0],[18,8,14,6,"elements_1"],[18,18,14,16],[18,21,14,19,"require"],[18,28,14,26],[18,29,14,26,"_dependencyMap"],[18,43,14,26],[18,68,14,47],[18,69,14,48],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,2,55,0],[59,11,55,9,"NativeTabTriggerImpl"],[59,31,55,29,"NativeTabTriggerImpl"],[59,32,55,30,"props"],[59,37,55,35],[59,39,55,37],[60,4,56,4],[60,10,56,10,"route"],[60,15,56,15],[60,18,56,18],[60,19,56,19],[60,20,56,20],[60,22,56,22,"native_1"],[60,30,56,30],[60,31,56,31,"useRoute"],[60,39,56,39],[60,41,56,41],[60,42,56,42],[61,4,57,4],[61,10,57,10,"navigation"],[61,20,57,20],[61,23,57,23],[61,24,57,24],[61,25,57,25],[61,27,57,27,"native_1"],[61,35,57,35],[61,36,57,36,"useNavigation"],[61,49,57,49],[61,51,57,51],[61,52,57,52],[62,4,58,4],[62,10,58,10,"isFocused"],[62,19,58,19],[62,22,58,22,"navigation"],[62,32,58,32],[62,33,58,33,"isFocused"],[62,42,58,42],[62,43,58,43],[62,44,58,44],[63,4,59,4],[63,10,59,10,"isInPreview"],[63,21,59,21],[63,24,59,24],[63,25,59,25],[63,26,59,26],[63,28,59,28,"PreviewRouteContext_1"],[63,49,59,49],[63,50,59,50,"useIsPreview"],[63,62,59,62],[63,64,59,64],[63,65,59,65],[64,4,60,4],[64,5,60,5],[64,6,60,6],[64,8,60,8,"useSafeLayoutEffect_1"],[64,29,60,29],[64,30,60,30,"useSafeLayoutEffect"],[64,49,60,49],[64,51,60,51],[64,57,60,57],[65,6,61,8],[66,6,62,8],[67,6,63,8],[68,6,64,8],[68,10,64,12,"isFocused"],[68,19,64,21],[68,23,64,25],[68,24,64,26,"isInPreview"],[68,35,64,37],[68,37,64,39],[69,8,65,12],[69,12,65,16,"navigation"],[69,22,65,26],[69,23,65,27,"getState"],[69,31,65,35],[69,32,65,36],[69,33,65,37],[69,35,65,39,"type"],[69,39,65,43],[69,44,65,48],[69,49,65,53],[69,51,65,55],[70,10,66,16],[70,16,66,22],[70,20,66,26,"Error"],[70,25,66,31],[70,26,66,32],[70,98,66,104,"route"],[70,103,66,109],[70,104,66,110,"name"],[70,108,66,114],[70,110,66,116],[70,111,66,117],[71,8,67,12],[72,8,68,12],[72,14,68,18,"options"],[72,21,68,25],[72,24,68,28,"convertTabPropsToOptions"],[72,48,68,52],[72,49,68,53,"props"],[72,54,68,58],[72,56,68,60],[72,60,68,64],[72,61,68,65],[73,8,69,12,"navigation"],[73,18,69,22],[73,19,69,23,"setOptions"],[73,29,69,33],[73,30,69,34,"options"],[73,37,69,41],[73,38,69,42],[74,6,70,8],[75,4,71,4],[75,5,71,5],[75,7,71,7],[75,8,71,8,"isFocused"],[75,17,71,17],[75,19,71,19,"props"],[75,24,71,24],[75,26,71,26,"isInPreview"],[75,37,71,37],[75,38,71,38],[75,39,71,39],[76,4,72,4],[76,11,72,11],[76,15,72,15],[77,2,73,0],[78,2,74,0,"exports"],[78,9,74,7],[78,10,74,8,"NativeTabTrigger"],[78,26,74,24],[78,29,74,27,"Object"],[78,35,74,33],[78,36,74,34,"assign"],[78,42,74,40],[78,43,74,41,"NativeTabTriggerImpl"],[78,63,74,61],[78,65,74,63],[79,4,75,4,"TabBar"],[79,10,75,10],[79,12,75,12,"NativeTabsTriggerTabBar_1"],[79,37,75,37],[79,38,75,38,"NativeTabsTriggerTabBar"],[80,2,76,0],[80,3,76,1],[80,4,76,2],[81,2,77,0],[81,11,77,9,"convertTabPropsToOptions"],[81,35,77,33,"convertTabPropsToOptions"],[81,36,77,34],[82,4,77,36,"options"],[82,11,77,43],[83,4,77,45,"hidden"],[83,10,77,51],[84,4,77,53,"children"],[84,12,77,61],[85,4,77,63,"role"],[85,8,77,67],[86,4,77,69,"disablePopToTop"],[86,19,77,84],[87,4,77,86,"disableScrollToTop"],[88,2,77,105],[88,3,77,106],[88,5,77,108,"isDynamic"],[88,14,77,117],[88,17,77,120],[88,22,77,125],[88,24,77,127],[89,4,78,4],[89,10,78,10,"initialOptions"],[89,24,78,24],[89,27,78,27,"isDynamic"],[89,36,78,36],[89,39,78,36,"Object"],[89,45,78,36],[89,46,78,36,"assign"],[89,52,78,36],[89,57,79,15,"options"],[89,64,79,22],[89,68,79,22,"Object"],[89,74,79,22],[89,75,79,22,"assign"],[89,81,79,22],[89,86,81,15,"options"],[89,93,81,22],[90,6,82,12,"hidden"],[90,12,82,18],[90,14,82,20],[90,15,82,21],[90,16,82,22,"hidden"],[90,22,82,28],[91,6,83,12,"specialEffects"],[91,20,83,26],[91,22,83,28],[92,8,84,16,"repeatedTabSelection"],[92,28,84,36],[92,30,84,38],[93,10,85,20,"popToRoot"],[93,19,85,29],[93,21,85,31],[93,22,85,32,"disablePopToTop"],[93,37,85,47],[94,10,86,20,"scrollToTop"],[94,21,86,31],[94,23,86,33],[94,24,86,34,"disableScrollToTop"],[95,8,87,16],[96,6,88,12],[96,7,88,13],[97,6,89,12,"role"],[97,10,89,16],[97,12,89,18,"role"],[97,16,89,22],[97,20,89,26,"options"],[97,27,89,33],[97,29,89,35,"role"],[98,4,89,39],[98,6,90,9],[99,4,91,4],[99,10,91,10,"allowedChildren"],[99,25,91,25],[99,28,91,28],[99,29,91,29],[99,30,91,30],[99,32,91,32,"utils_1"],[99,39,91,39],[99,40,91,40,"filterAllowedChildrenElements"],[99,69,91,69],[99,71,91,71,"children"],[99,79,91,79],[99,81,91,81],[99,82,92,8,"elements_1"],[99,92,92,18],[99,93,92,19,"Badge"],[99,98,92,24],[99,100,93,8,"elements_1"],[99,110,93,18],[99,111,93,19,"Label"],[99,116,93,24],[99,118,94,8,"elements_1"],[99,128,94,18],[99,129,94,19,"Icon"],[99,133,94,23],[99,135,95,8,"NativeTabsTriggerTabBar_1"],[99,160,95,33],[99,161,95,34,"NativeTabsTriggerTabBar"],[99,184,95,57],[99,185,96,5],[99,186,96,6],[100,4,97,4],[100,11,97,11,"allowedChildren"],[100,26,97,26],[100,27,97,27,"reduce"],[100,33,97,33],[100,34,97,34],[100,35,97,35,"acc"],[100,38,97,38],[100,40,97,40,"child"],[100,45,97,45],[100,50,97,50],[101,6,98,8],[101,10,98,12],[101,11,98,13],[101,12,98,14],[101,14,98,16,"utils_1"],[101,21,98,23],[101,22,98,24,"isChildOfType"],[101,35,98,37],[101,37,98,39,"child"],[101,42,98,44],[101,44,98,46,"elements_1"],[101,54,98,56],[101,55,98,57,"Badge"],[101,60,98,62],[101,61,98,63],[101,63,98,65],[102,8,99,12,"appendBadgeOptions"],[102,26,99,30],[102,27,99,31,"acc"],[102,30,99,34],[102,32,99,36,"child"],[102,37,99,41],[102,38,99,42,"props"],[102,43,99,47],[102,44,99,48],[103,6,100,8],[103,7,100,9],[103,13,101,13],[103,17,101,17],[103,18,101,18],[103,19,101,19],[103,21,101,21,"utils_1"],[103,28,101,28],[103,29,101,29,"isChildOfType"],[103,42,101,42],[103,44,101,44,"child"],[103,49,101,49],[103,51,101,51,"elements_1"],[103,61,101,61],[103,62,101,62,"Label"],[103,67,101,67],[103,68,101,68],[103,70,101,70],[104,8,102,12,"appendLabelOptions"],[104,26,102,30],[104,27,102,31,"acc"],[104,30,102,34],[104,32,102,36,"child"],[104,37,102,41],[104,38,102,42,"props"],[104,43,102,47],[104,44,102,48],[105,6,103,8],[105,7,103,9],[105,13,104,13],[105,17,104,17],[105,18,104,18],[105,19,104,19],[105,21,104,21,"utils_1"],[105,28,104,28],[105,29,104,29,"isChildOfType"],[105,42,104,42],[105,44,104,44,"child"],[105,49,104,49],[105,51,104,51,"elements_1"],[105,61,104,61],[105,62,104,62,"Icon"],[105,66,104,66],[105,67,104,67],[105,69,104,69],[106,8,105,12,"appendIconOptions"],[106,25,105,29],[106,26,105,30,"acc"],[106,29,105,33],[106,31,105,35,"child"],[106,36,105,40],[106,37,105,41,"props"],[106,42,105,46],[106,43,105,47],[107,6,106,8],[107,7,106,9],[107,13,107,13],[107,17,107,17],[107,18,107,18],[107,19,107,19],[107,21,107,21,"utils_1"],[107,28,107,28],[107,29,107,29,"isChildOfType"],[107,42,107,42],[107,44,107,44,"child"],[107,49,107,49],[107,51,107,51,"NativeTabsTriggerTabBar_1"],[107,76,107,76],[107,77,107,77,"NativeTabsTriggerTabBar"],[107,100,107,100],[107,101,107,101],[107,103,107,103],[108,8,108,12,"appendTabBarOptions"],[108,27,108,31],[108,28,108,32,"acc"],[108,31,108,35],[108,33,108,37,"child"],[108,38,108,42],[108,39,108,43,"props"],[108,44,108,48],[108,45,108,49],[109,6,109,8],[110,6,110,8],[110,13,110,15,"acc"],[110,16,110,18],[111,4,111,4],[111,5,111,5],[111,7,111,5,"Object"],[111,13,111,5],[111,14,111,5,"assign"],[111,20,111,5],[111,25,111,12,"initialOptions"],[111,39,111,26],[111,40,111,28],[111,41,111,29],[112,2,112,0],[113,2,113,0],[113,11,113,9,"appendBadgeOptions"],[113,29,113,27,"appendBadgeOptions"],[113,30,113,28,"options"],[113,37,113,35],[113,39,113,37,"props"],[113,44,113,42],[113,46,113,44],[114,4,114,4],[114,8,114,8,"props"],[114,13,114,13],[114,14,114,14,"children"],[114,22,114,22],[114,24,114,24],[115,6,115,8,"options"],[115,13,115,15],[115,14,115,16,"badgeValue"],[115,24,115,26],[115,27,115,29,"String"],[115,33,115,35],[115,34,115,36,"props"],[115,39,115,41],[115,40,115,42,"children"],[115,48,115,50],[115,49,115,51],[116,6,116,8,"options"],[116,13,116,15],[116,14,116,16,"selectedBadgeBackgroundColor"],[116,42,116,44],[116,45,116,47,"props"],[116,50,116,52],[116,51,116,53,"selectedBackgroundColor"],[116,74,116,76],[117,4,117,4],[117,5,117,5],[117,11,118,9],[117,15,118,13],[117,16,118,14,"props"],[117,21,118,19],[117,22,118,20,"hidden"],[117,28,118,26],[117,30,118,28],[118,6,119,8],[119,6,120,8],[120,6,121,8],[121,6,122,8,"options"],[121,13,122,15],[121,14,122,16,"badgeValue"],[121,24,122,26],[121,27,122,29],[121,30,122,32],[122,4,123,4],[123,2,124,0],[124,2,125,0],[124,11,125,9,"appendLabelOptions"],[124,29,125,27,"appendLabelOptions"],[124,30,125,28,"options"],[124,37,125,35],[124,39,125,37,"props"],[124,44,125,42],[124,46,125,44],[125,4,126,4],[125,8,126,8,"props"],[125,13,126,13],[125,14,126,14,"hidden"],[125,20,126,20],[125,22,126,22],[126,6,127,8,"options"],[126,13,127,15],[126,14,127,16,"title"],[126,19,127,21],[126,22,127,24],[126,24,127,26],[127,4,128,4],[127,5,128,5],[127,11,129,9],[128,6,130,8,"options"],[128,13,130,15],[128,14,130,16,"title"],[128,19,130,21],[128,22,130,24,"props"],[128,27,130,29],[128,28,130,30,"children"],[128,36,130,38],[129,6,131,8,"options"],[129,13,131,15],[129,14,131,16,"selectedLabelStyle"],[129,32,131,34],[129,35,131,37,"props"],[129,40,131,42],[129,41,131,43,"selectedStyle"],[129,54,131,56],[130,4,132,4],[131,2,133,0],[132,2,134,0],[132,11,134,9,"appendIconOptions"],[132,28,134,26,"appendIconOptions"],[132,29,134,27,"options"],[132,36,134,34],[132,38,134,36,"props"],[132,43,134,41],[132,45,134,43],[133,4,135,4],[133,8,135,8],[133,13,135,13],[133,17,135,17,"props"],[133,22,135,22],[133,26,135,26,"props"],[133,31,135,31],[133,32,135,32,"src"],[133,35,135,35],[133,37,135,37],[134,6,136,8],[134,12,136,14,"icon"],[134,16,136,18],[134,19,136,21,"convertIconSrcToIconOption"],[134,45,136,47],[134,46,136,48,"props"],[134,51,136,53],[134,52,136,54],[135,6,137,8,"options"],[135,13,137,15],[135,14,137,16,"icon"],[135,18,137,20],[135,21,137,23,"icon"],[135,25,137,27],[135,27,137,29,"icon"],[135,31,137,33],[136,6,138,8,"options"],[136,13,138,15],[136,14,138,16,"selectedIcon"],[136,26,138,28],[136,29,138,31,"icon"],[136,33,138,35],[136,35,138,37,"selectedIcon"],[136,47,138,49],[137,4,139,4],[137,5,139,5],[137,11,140,9],[137,15,140,13],[137,19,140,17],[137,23,140,21,"props"],[137,28,140,26],[137,37,140,59],[137,39,140,61],[138,6,141,8],[138,10,141,12],[138,17,141,19,"props"],[138,22,141,24],[138,23,141,25,"sf"],[138,25,141,27],[138,30,141,32],[138,38,141,40],[138,40,141,42],[139,8,142,12,"options"],[139,15,142,19],[139,16,142,20,"icon"],[139,20,142,24],[139,23,142,27,"props"],[139,28,142,32],[139,29,142,33,"sf"],[139,31,142,35],[139,34,143,18],[140,10,144,20,"sf"],[140,12,144,22],[140,14,144,24,"props"],[140,19,144,29],[140,20,144,30,"sf"],[141,8,145,16],[141,9,145,17],[141,12,146,18,"undefined"],[141,21,146,27],[142,8,147,12,"options"],[142,15,147,19],[142,16,147,20,"selectedIcon"],[142,28,147,32],[142,31,147,35,"undefined"],[142,40,147,44],[143,6,148,8],[143,7,148,9],[143,13,149,13],[143,17,149,17,"props"],[143,22,149,22],[143,23,149,23,"sf"],[143,25,149,25],[143,27,149,27],[144,8,150,12,"options"],[144,15,150,19],[144,16,150,20,"icon"],[144,20,150,24],[144,23,150,27,"props"],[144,28,150,32],[144,29,150,33,"sf"],[144,31,150,35],[144,32,150,36,"default"],[144,39,150,43],[144,42,151,18],[145,10,152,20,"sf"],[145,12,152,22],[145,14,152,24,"props"],[145,19,152,29],[145,20,152,30,"sf"],[145,22,152,32],[145,23,152,33,"default"],[146,8,153,16],[146,9,153,17],[146,12,154,18,"undefined"],[146,21,154,27],[147,8,155,12,"options"],[147,15,155,19],[147,16,155,20,"selectedIcon"],[147,28,155,32],[147,31,155,35,"props"],[147,36,155,40],[147,37,155,41,"sf"],[147,39,155,43],[147,40,155,44,"selected"],[147,48,155,52],[147,51,156,18],[148,10,157,20,"sf"],[148,12,157,22],[148,14,157,24,"props"],[148,19,157,29],[148,20,157,30,"sf"],[148,22,157,32],[148,23,157,33,"selected"],[149,8,158,16],[149,9,158,17],[149,12,159,18,"undefined"],[149,21,159,27],[150,6,160,8],[151,4,161,4],[151,5,161,5],[151,11,162,9],[151,15,162,13],[151,27,162,25],[151,31,162,29,"props"],[151,36,162,34],[151,45,162,71],[151,47,162,73],[152,6,163,8],[152,12,163,14,"icon"],[152,16,163,18],[152,19,163,21,"convertIconSrcToIconOption"],[152,45,163,47],[152,46,163,48],[153,8,163,50,"src"],[153,11,163,53],[153,13,163,55,"props"],[153,18,163,60],[153,19,163,61,"androidSrc"],[154,6,163,72],[154,7,163,73],[154,8,163,74],[155,6,164,8,"options"],[155,13,164,15],[155,14,164,16,"icon"],[155,18,164,20],[155,21,164,23,"icon"],[155,25,164,27],[155,27,164,29,"icon"],[155,31,164,33],[156,6,165,8,"options"],[156,13,165,15],[156,14,165,16,"selectedIcon"],[156,26,165,28],[156,29,165,31,"icon"],[156,33,165,35],[156,35,165,37,"selectedIcon"],[156,47,165,49],[157,4,166,4],[157,5,166,5],[157,11,167,9],[157,15,167,13],[157,25,167,23],[157,29,167,27,"props"],[157,34,167,32],[157,43,167,69],[157,45,167,71],[158,6,168,8,"options"],[158,13,168,15],[158,14,168,16,"icon"],[158,18,168,20],[158,21,168,23],[159,8,168,25,"drawable"],[159,16,168,33],[159,18,168,35,"props"],[159,23,168,40],[159,24,168,41,"drawable"],[160,6,168,50],[160,7,168,51],[161,6,169,8,"options"],[161,13,169,15],[161,14,169,16,"selectedIcon"],[161,26,169,28],[161,29,169,31,"undefined"],[161,38,169,40],[162,4,170,4],[163,4,171,4,"options"],[163,11,171,11],[163,12,171,12,"selectedIconColor"],[163,29,171,29],[163,32,171,32,"props"],[163,37,171,37],[163,38,171,38,"selectedColor"],[163,51,171,51],[164,2,172,0],[165,2,173,0],[165,11,173,9,"convertIconSrcToIconOption"],[165,37,173,35,"convertIconSrcToIconOption"],[165,38,173,36,"icon"],[165,42,173,40],[165,44,173,42],[166,4,174,4],[166,8,174,8,"icon"],[166,12,174,12],[166,16,174,16,"icon"],[166,20,174,20],[166,21,174,21,"src"],[166,24,174,24],[166,26,174,26],[167,6,175,8],[167,12,175,14],[168,8,175,16,"defaultIcon"],[168,19,175,27],[169,8,175,29,"selected"],[170,6,175,38],[170,7,175,39],[170,10,175,42],[170,17,175,49,"icon"],[170,21,175,53],[170,22,175,54,"src"],[170,25,175,57],[170,30,175,62],[170,38,175,70],[170,42,175,74],[170,52,175,84],[170,56,175,88,"icon"],[170,60,175,92],[170,61,175,93,"src"],[170,64,175,96],[170,67,176,14],[171,8,176,16,"defaultIcon"],[171,19,176,27],[171,21,176,29,"icon"],[171,25,176,33],[171,26,176,34,"src"],[171,29,176,37],[171,30,176,38,"default"],[171,37,176,45],[172,8,176,47,"selected"],[172,16,176,55],[172,18,176,57,"icon"],[172,22,176,61],[172,23,176,62,"src"],[172,26,176,65],[172,27,176,66,"selected"],[173,6,176,75],[173,7,176,76],[173,10,177,14],[174,8,177,16,"defaultIcon"],[174,19,177,27],[174,21,177,29,"icon"],[174,25,177,33],[174,26,177,34,"src"],[175,6,177,38],[175,7,177,39],[176,6,178,8],[176,12,178,14,"options"],[176,19,178,21],[176,22,178,24],[176,23,178,25],[176,24,178,26],[177,6,179,8,"options"],[177,13,179,15],[177,14,179,16,"icon"],[177,18,179,20],[177,21,179,23,"convertSrcOrComponentToSrc"],[177,47,179,49],[177,48,179,50,"defaultIcon"],[177,59,179,61],[177,60,179,62],[178,6,180,8,"options"],[178,13,180,15],[178,14,180,16,"selectedIcon"],[178,26,180,28],[178,29,180,31,"convertSrcOrComponentToSrc"],[178,55,180,57],[178,56,180,58,"selected"],[178,64,180,66],[178,65,180,67],[179,6,181,8],[179,13,181,15,"options"],[179,20,181,22],[180,4,182,4],[181,4,183,4],[181,11,183,11,"undefined"],[181,20,183,20],[182,2,184,0],[183,2,185,0],[183,11,185,9,"convertSrcOrComponentToSrc"],[183,37,185,35,"convertSrcOrComponentToSrc"],[183,38,185,36,"src"],[183,41,185,39],[183,43,185,41],[184,4,186,4],[184,8,186,8,"src"],[184,11,186,11],[184,13,186,13],[185,6,187,8],[185,10,187,12],[185,11,187,13],[185,12,187,14],[185,14,187,16,"react_1"],[185,21,187,23],[185,22,187,24,"isValidElement"],[185,36,187,38],[185,38,187,40,"src"],[185,41,187,43],[185,42,187,44],[185,44,187,46],[186,8,188,12],[186,12,188,16,"src"],[186,15,188,19],[186,16,188,20,"type"],[186,20,188,24],[186,25,188,29,"elements_1"],[186,35,188,39],[186,36,188,40,"VectorIcon"],[186,46,188,50],[186,48,188,52],[187,10,189,16],[187,16,189,22,"props"],[187,21,189,27],[187,24,189,30,"src"],[187,27,189,33],[187,28,189,34,"props"],[187,33,189,39],[188,10,190,16],[188,17,190,23],[189,12,190,25,"src"],[189,15,190,28],[189,17,190,30,"props"],[189,22,190,35],[189,23,190,36,"family"],[189,29,190,42],[189,30,190,43,"getImageSource"],[189,44,190,57],[189,45,190,58,"props"],[189,50,190,63],[189,51,190,64,"name"],[189,55,190,68],[189,57,190,70],[189,59,190,72],[189,61,190,74],[189,68,190,81],[190,10,190,83],[190,11,190,84],[191,8,191,12],[191,9,191,13],[191,15,192,17],[192,10,193,16,"console"],[192,17,193,23],[192,18,193,24,"warn"],[192,22,193,28],[192,23,193,29],[192,84,193,90],[192,85,193,91],[193,8,194,12],[194,6,195,8],[194,7,195,9],[194,13,196,13],[195,8,197,12],[195,15,197,19],[196,10,197,21,"src"],[197,8,197,25],[197,9,197,26],[198,6,198,8],[199,4,199,4],[200,4,200,4],[200,11,200,11,"undefined"],[200,20,200,20],[201,2,201,0],[202,2,202,0],[202,11,202,9,"appendTabBarOptions"],[202,30,202,28,"appendTabBarOptions"],[202,31,202,29,"options"],[202,38,202,36],[202,40,202,38,"props"],[202,45,202,43],[202,47,202,45],[203,4,203,4],[203,10,203,10],[204,6,203,12,"backgroundColor"],[204,21,203,27],[205,6,203,29,"blurEffect"],[205,16,203,39],[206,6,203,41,"iconColor"],[206,15,203,50],[207,6,203,52,"disableTransparentOnScrollEdge"],[207,36,203,82],[208,6,203,84,"badgeBackgroundColor"],[208,26,203,104],[209,6,203,106,"badgeTextColor"],[209,20,203,120],[210,6,203,122,"indicatorColor"],[210,20,203,136],[211,6,203,138,"labelStyle"],[211,16,203,148],[212,6,203,150,"shadowColor"],[213,4,203,163],[213,5,203,164],[213,8,203,167,"props"],[213,13,203,172],[214,4,204,4],[214,8,204,8,"backgroundColor"],[214,23,204,23],[214,25,204,25],[215,6,205,8,"options"],[215,13,205,15],[215,14,205,16,"backgroundColor"],[215,29,205,31],[215,32,205,34,"backgroundColor"],[215,47,205,49],[216,4,206,4],[217,4,207,4],[218,4,208,4],[219,4,209,4],[219,14,209,43],[220,6,210,8],[220,10,210,12,"blurEffect"],[220,20,210,22],[220,22,210,24],[221,8,211,12,"options"],[221,15,211,19],[221,16,211,20,"blurEffect"],[221,26,211,30],[221,29,211,33,"blurEffect"],[221,39,211,43],[222,6,212,8],[223,6,213,8],[223,10,213,12,"shadowColor"],[223,21,213,23],[223,23,213,25],[224,8,214,12,"options"],[224,15,214,19],[224,16,214,20,"shadowColor"],[224,27,214,31],[224,30,214,34,"shadowColor"],[224,41,214,45],[225,6,215,8],[226,6,216,8],[226,10,216,12,"iconColor"],[226,19,216,21],[226,21,216,23],[227,8,217,12,"options"],[227,15,217,19],[227,16,217,20,"iconColor"],[227,25,217,29],[227,28,217,32,"iconColor"],[227,37,217,41],[228,6,218,8],[229,6,219,8],[229,10,219,12,"disableTransparentOnScrollEdge"],[229,40,219,42],[229,45,219,47,"undefined"],[229,54,219,56],[229,56,219,58],[230,8,220,12,"options"],[230,15,220,19],[230,16,220,20,"disableTransparentOnScrollEdge"],[230,46,220,50],[230,49,220,53,"disableTransparentOnScrollEdge"],[230,79,220,83],[231,6,221,8],[232,6,222,8],[232,10,222,12,"badgeBackgroundColor"],[232,30,222,32],[232,32,222,34],[233,8,223,12,"options"],[233,15,223,19],[233,16,223,20,"badgeBackgroundColor"],[233,36,223,40],[233,39,223,43,"badgeBackgroundColor"],[233,59,223,63],[234,6,224,8],[235,6,225,8],[235,10,225,12,"badgeTextColor"],[235,24,225,26],[235,26,225,28],[236,8,226,12,"options"],[236,15,226,19],[236,16,226,20,"badgeTextColor"],[236,30,226,34],[236,33,226,37,"badgeTextColor"],[236,47,226,51],[237,6,227,8],[238,6,228,8],[238,10,228,12,"indicatorColor"],[238,24,228,26],[238,26,228,28],[239,8,229,12,"options"],[239,15,229,19],[239,16,229,20,"indicatorColor"],[239,30,229,34],[239,33,229,37,"indicatorColor"],[239,47,229,51],[240,6,230,8],[241,6,231,8],[241,10,231,12,"labelStyle"],[241,20,231,22],[241,22,231,24],[242,8,232,12,"options"],[242,15,232,19],[242,16,232,20,"labelStyle"],[242,26,232,30],[242,29,232,33,"labelStyle"],[242,39,232,43],[243,6,233,8],[244,4,234,4],[245,2,235,0],[246,2,236,0],[246,11,236,9,"isNativeTabTrigger"],[246,29,236,27,"isNativeTabTrigger"],[246,30,236,28,"child"],[246,35,236,33],[246,37,236,35,"contextKey"],[246,47,236,45],[246,49,236,47],[247,4,237,4],[247,8,237,8],[247,9,237,9],[247,10,237,10],[247,12,237,12,"react_1"],[247,19,237,19],[247,20,237,20,"isValidElement"],[247,34,237,34],[247,36,237,36,"child"],[247,41,237,41],[247,42,237,42],[247,46,237,46,"child"],[247,51,237,51],[247,55,237,55,"child"],[247,60,237,60],[247,61,237,61,"type"],[247,65,237,65],[247,70,237,70,"exports"],[247,77,237,77],[247,78,237,78,"NativeTabTrigger"],[247,94,237,94],[247,96,237,96],[248,6,238,8],[248,10,238,12],[248,17,238,19,"child"],[248,22,238,24],[248,23,238,25,"props"],[248,28,238,30],[248,33,238,35],[248,41,238,43],[248,45,239,12,"child"],[248,50,239,17],[248,51,239,18,"props"],[248,56,239,23],[248,60,240,12],[248,66,240,18],[248,70,240,22,"child"],[248,75,240,27],[248,76,240,28,"props"],[248,81,240,33],[248,85,241,12],[248,86,241,13,"child"],[248,91,241,18],[248,92,241,19,"props"],[248,97,241,24],[248,98,241,25,"name"],[248,102,241,29],[248,104,241,31],[249,8,242,12],[249,14,242,18],[249,18,242,22,"Error"],[249,23,242,27],[249,24,242,28],[249,79,242,83,"contextKey"],[249,89,242,93],[249,167,242,171],[249,168,242,172],[250,6,243,8],[251,6,244,8],[251,10,244,12,"process"],[251,17,244,19],[251,18,244,20,"env"],[251,21,244,23],[251,22,244,24,"NODE_ENV"],[251,30,244,32],[251,35,244,37],[251,47,244,49],[251,49,244,51],[252,8,245,12],[252,12,245,16],[252,13,245,17],[252,24,245,28],[252,26,245,30],[252,40,245,44],[252,41,245,45],[252,42,245,46,"some"],[252,46,245,50],[252,47,245,52,"key"],[252,50,245,55],[252,54,245,60,"child"],[252,59,245,65],[252,60,245,66,"props"],[252,65,245,71],[252,69,245,75],[252,76,245,82,"child"],[252,81,245,87],[252,82,245,88,"props"],[252,87,245,93],[252,92,245,98],[252,100,245,106],[252,104,245,110,"key"],[252,107,245,113],[252,111,245,117,"child"],[252,116,245,122],[252,117,245,123,"props"],[252,122,245,128],[252,123,245,129],[252,125,245,131],[253,10,246,16],[253,16,246,22],[253,20,246,26,"Error"],[253,25,246,31],[253,26,246,32],[253,81,246,87,"contextKey"],[253,91,246,97],[253,197,246,203],[253,198,246,204],[254,8,247,12],[255,6,248,8],[256,6,249,8],[256,13,249,15],[256,17,249,19],[257,4,250,4],[258,4,251,4],[258,11,251,11],[258,16,251,16],[259,2,252,0],[260,0,252,1],[260,3]],"functionMap":{"names":["<global>","NativeTabTriggerImpl","<anonymous>","convertTabPropsToOptions","allowedChildren.reduce$argument_0","appendBadgeOptions","appendLabelOptions","appendIconOptions","convertIconSrcToIconOption","convertSrcOrComponentToSrc","appendTabBarOptions","isNativeTabTrigger","some$argument_0"],"mappings":"AAA;ACsD;mDCK;KDW;CDE;AGI;kCCoB;KDc;CHC;AKC;CLW;AMC;CNQ;AOC;CPsC;AQC;CRW;ASC;CTgB;AUC;CViC;AWC;mDCS,6ED;CXO"},"hasCjsExports":true},"type":"js/module"}]}