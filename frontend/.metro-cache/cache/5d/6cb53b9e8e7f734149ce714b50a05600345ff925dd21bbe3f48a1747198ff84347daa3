{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":32,"index":32}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"fs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":68,"column":13,"index":1473},"end":{"line":68,"column":26,"index":1486}}],"key":"/446D+0IZVMo9Qz4Ixqnyf8fty0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  const Utils = require(_dependencyMap[0], \"./utils\");\n  const BLOCK_CHAR = {\n    WW: ' ',\n    WB: '▄',\n    BB: '█',\n    BW: '▀'\n  };\n  const INVERTED_BLOCK_CHAR = {\n    BB: ' ',\n    BW: '▄',\n    WW: '█',\n    WB: '▀'\n  };\n  function getBlockChar(top, bottom, blocks) {\n    if (top && bottom) return blocks.BB;\n    if (top && !bottom) return blocks.BW;\n    if (!top && bottom) return blocks.WB;\n    return blocks.WW;\n  }\n  exports.render = function (qrData, options, cb) {\n    const opts = Utils.getOptions(options);\n    let blocks = BLOCK_CHAR;\n    if (opts.color.dark.hex === '#ffffff' || opts.color.light.hex === '#000000') {\n      blocks = INVERTED_BLOCK_CHAR;\n    }\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n    let output = '';\n    let hMargin = Array(size + opts.margin * 2 + 1).join(blocks.WW);\n    hMargin = Array(opts.margin / 2 + 1).join(hMargin + '\\n');\n    const vMargin = Array(opts.margin + 1).join(blocks.WW);\n    output += hMargin;\n    for (let i = 0; i < size; i += 2) {\n      output += vMargin;\n      for (let j = 0; j < size; j++) {\n        const topModule = data[i * size + j];\n        const bottomModule = data[(i + 1) * size + j];\n        output += getBlockChar(topModule, bottomModule, blocks);\n      }\n      output += vMargin + '\\n';\n    }\n    output += hMargin.slice(0, -1);\n    if (typeof cb === 'function') {\n      cb(null, output);\n    }\n    return output;\n  };\n  exports.renderToFile = function renderToFile(path, qrData, options, cb) {\n    if (typeof cb === 'undefined') {\n      cb = options;\n      options = undefined;\n    }\n    const fs = require(_dependencyMap[1], \"fs\");\n    const utf8 = exports.render(qrData, options);\n    fs.writeFile(path, utf8, cb);\n  };\n});","lineCount":58,"map":[[2,2,1,0],[2,8,1,6,"Utils"],[2,13,1,11],[2,16,1,14,"require"],[2,23,1,21],[2,24,1,21,"_dependencyMap"],[2,38,1,21],[2,52,1,31],[2,53,1,32],[3,2,3,0],[3,8,3,6,"BLOCK_CHAR"],[3,18,3,16],[3,21,3,19],[4,4,4,2,"WW"],[4,6,4,4],[4,8,4,6],[4,11,4,9],[5,4,5,2,"WB"],[5,6,5,4],[5,8,5,6],[5,11,5,9],[6,4,6,2,"BB"],[6,6,6,4],[6,8,6,6],[6,11,6,9],[7,4,7,2,"BW"],[7,6,7,4],[7,8,7,6],[8,2,8,0],[8,3,8,1],[9,2,10,0],[9,8,10,6,"INVERTED_BLOCK_CHAR"],[9,27,10,25],[9,30,10,28],[10,4,11,2,"BB"],[10,6,11,4],[10,8,11,6],[10,11,11,9],[11,4,12,2,"BW"],[11,6,12,4],[11,8,12,6],[11,11,12,9],[12,4,13,2,"WW"],[12,6,13,4],[12,8,13,6],[12,11,13,9],[13,4,14,2,"WB"],[13,6,14,4],[13,8,14,6],[14,2,15,0],[14,3,15,1],[15,2,17,0],[15,11,17,9,"getBlockChar"],[15,23,17,21,"getBlockChar"],[15,24,17,23,"top"],[15,27,17,26],[15,29,17,28,"bottom"],[15,35,17,34],[15,37,17,36,"blocks"],[15,43,17,42],[15,45,17,44],[16,4,18,2],[16,8,18,6,"top"],[16,11,18,9],[16,15,18,13,"bottom"],[16,21,18,19],[16,23,18,21],[16,30,18,28,"blocks"],[16,36,18,34],[16,37,18,35,"BB"],[16,39,18,37],[17,4,19,2],[17,8,19,6,"top"],[17,11,19,9],[17,15,19,13],[17,16,19,14,"bottom"],[17,22,19,20],[17,24,19,22],[17,31,19,29,"blocks"],[17,37,19,35],[17,38,19,36,"BW"],[17,40,19,38],[18,4,20,2],[18,8,20,6],[18,9,20,7,"top"],[18,12,20,10],[18,16,20,14,"bottom"],[18,22,20,20],[18,24,20,22],[18,31,20,29,"blocks"],[18,37,20,35],[18,38,20,36,"WB"],[18,40,20,38],[19,4,21,2],[19,11,21,9,"blocks"],[19,17,21,15],[19,18,21,16,"WW"],[19,20,21,18],[20,2,22,0],[21,2,24,0,"exports"],[21,9,24,7],[21,10,24,8,"render"],[21,16,24,14],[21,19,24,17],[21,29,24,27,"qrData"],[21,35,24,33],[21,37,24,35,"options"],[21,44,24,42],[21,46,24,44,"cb"],[21,48,24,46],[21,50,24,48],[22,4,25,2],[22,10,25,8,"opts"],[22,14,25,12],[22,17,25,15,"Utils"],[22,22,25,20],[22,23,25,21,"getOptions"],[22,33,25,31],[22,34,25,32,"options"],[22,41,25,39],[22,42,25,40],[23,4,26,2],[23,8,26,6,"blocks"],[23,14,26,12],[23,17,26,15,"BLOCK_CHAR"],[23,27,26,25],[24,4,27,2],[24,8,27,6,"opts"],[24,12,27,10],[24,13,27,11,"color"],[24,18,27,16],[24,19,27,17,"dark"],[24,23,27,21],[24,24,27,22,"hex"],[24,27,27,25],[24,32,27,30],[24,41,27,39],[24,45,27,43,"opts"],[24,49,27,47],[24,50,27,48,"color"],[24,55,27,53],[24,56,27,54,"light"],[24,61,27,59],[24,62,27,60,"hex"],[24,65,27,63],[24,70,27,68],[24,79,27,77],[24,81,27,79],[25,6,28,4,"blocks"],[25,12,28,10],[25,15,28,13,"INVERTED_BLOCK_CHAR"],[25,34,28,32],[26,4,29,2],[27,4,31,2],[27,10,31,8,"size"],[27,14,31,12],[27,17,31,15,"qrData"],[27,23,31,21],[27,24,31,22,"modules"],[27,31,31,29],[27,32,31,30,"size"],[27,36,31,34],[28,4,32,2],[28,10,32,8,"data"],[28,14,32,12],[28,17,32,15,"qrData"],[28,23,32,21],[28,24,32,22,"modules"],[28,31,32,29],[28,32,32,30,"data"],[28,36,32,34],[29,4,34,2],[29,8,34,6,"output"],[29,14,34,12],[29,17,34,15],[29,19,34,17],[30,4,35,2],[30,8,35,6,"hMargin"],[30,15,35,13],[30,18,35,16,"Array"],[30,23,35,21],[30,24,35,22,"size"],[30,28,35,26],[30,31,35,30,"opts"],[30,35,35,34],[30,36,35,35,"margin"],[30,42,35,41],[30,45,35,44],[30,46,35,46],[30,49,35,49],[30,50,35,50],[30,51,35,51],[30,52,35,52,"join"],[30,56,35,56],[30,57,35,57,"blocks"],[30,63,35,63],[30,64,35,64,"WW"],[30,66,35,66],[30,67,35,67],[31,4,36,2,"hMargin"],[31,11,36,9],[31,14,36,12,"Array"],[31,19,36,17],[31,20,36,19,"opts"],[31,24,36,23],[31,25,36,24,"margin"],[31,31,36,30],[31,34,36,33],[31,35,36,34],[31,38,36,38],[31,39,36,39],[31,40,36,40],[31,41,36,41,"join"],[31,45,36,45],[31,46,36,46,"hMargin"],[31,53,36,53],[31,56,36,56],[31,60,36,60],[31,61,36,61],[32,4,38,2],[32,10,38,8,"vMargin"],[32,17,38,15],[32,20,38,18,"Array"],[32,25,38,23],[32,26,38,24,"opts"],[32,30,38,28],[32,31,38,29,"margin"],[32,37,38,35],[32,40,38,38],[32,41,38,39],[32,42,38,40],[32,43,38,41,"join"],[32,47,38,45],[32,48,38,46,"blocks"],[32,54,38,52],[32,55,38,53,"WW"],[32,57,38,55],[32,58,38,56],[33,4,40,2,"output"],[33,10,40,8],[33,14,40,12,"hMargin"],[33,21,40,19],[34,4,41,2],[34,9,41,7],[34,13,41,11,"i"],[34,14,41,12],[34,17,41,15],[34,18,41,16],[34,20,41,18,"i"],[34,21,41,19],[34,24,41,22,"size"],[34,28,41,26],[34,30,41,28,"i"],[34,31,41,29],[34,35,41,33],[34,36,41,34],[34,38,41,36],[35,6,42,4,"output"],[35,12,42,10],[35,16,42,14,"vMargin"],[35,23,42,21],[36,6,43,4],[36,11,43,9],[36,15,43,13,"j"],[36,16,43,14],[36,19,43,17],[36,20,43,18],[36,22,43,20,"j"],[36,23,43,21],[36,26,43,24,"size"],[36,30,43,28],[36,32,43,30,"j"],[36,33,43,31],[36,35,43,33],[36,37,43,35],[37,8,44,6],[37,14,44,12,"topModule"],[37,23,44,21],[37,26,44,24,"data"],[37,30,44,28],[37,31,44,29,"i"],[37,32,44,30],[37,35,44,33,"size"],[37,39,44,37],[37,42,44,40,"j"],[37,43,44,41],[37,44,44,42],[38,8,45,6],[38,14,45,12,"bottomModule"],[38,26,45,24],[38,29,45,27,"data"],[38,33,45,31],[38,34,45,32],[38,35,45,33,"i"],[38,36,45,34],[38,39,45,37],[38,40,45,38],[38,44,45,42,"size"],[38,48,45,46],[38,51,45,49,"j"],[38,52,45,50],[38,53,45,51],[39,8,47,6,"output"],[39,14,47,12],[39,18,47,16,"getBlockChar"],[39,30,47,28],[39,31,47,29,"topModule"],[39,40,47,38],[39,42,47,40,"bottomModule"],[39,54,47,52],[39,56,47,54,"blocks"],[39,62,47,60],[39,63,47,61],[40,6,48,4],[41,6,50,4,"output"],[41,12,50,10],[41,16,50,14,"vMargin"],[41,23,50,21],[41,26,50,24],[41,30,50,28],[42,4,51,2],[43,4,53,2,"output"],[43,10,53,8],[43,14,53,12,"hMargin"],[43,21,53,19],[43,22,53,20,"slice"],[43,27,53,25],[43,28,53,26],[43,29,53,27],[43,31,53,29],[43,32,53,30],[43,33,53,31],[43,34,53,32],[44,4,55,2],[44,8,55,6],[44,15,55,13,"cb"],[44,17,55,15],[44,22,55,20],[44,32,55,30],[44,34,55,32],[45,6,56,4,"cb"],[45,8,56,6],[45,9,56,7],[45,13,56,11],[45,15,56,13,"output"],[45,21,56,19],[45,22,56,20],[46,4,57,2],[47,4,59,2],[47,11,59,9,"output"],[47,17,59,15],[48,2,60,0],[48,3,60,1],[49,2,62,0,"exports"],[49,9,62,7],[49,10,62,8,"renderToFile"],[49,22,62,20],[49,25,62,23],[49,34,62,32,"renderToFile"],[49,46,62,44,"renderToFile"],[49,47,62,46,"path"],[49,51,62,50],[49,53,62,52,"qrData"],[49,59,62,58],[49,61,62,60,"options"],[49,68,62,67],[49,70,62,69,"cb"],[49,72,62,71],[49,74,62,73],[50,4,63,2],[50,8,63,6],[50,15,63,13,"cb"],[50,17,63,15],[50,22,63,20],[50,33,63,31],[50,35,63,33],[51,6,64,4,"cb"],[51,8,64,6],[51,11,64,9,"options"],[51,18,64,16],[52,6,65,4,"options"],[52,13,65,11],[52,16,65,14,"undefined"],[52,25,65,23],[53,4,66,2],[54,4,68,2],[54,10,68,8,"fs"],[54,12,68,10],[54,15,68,13,"require"],[54,22,68,20],[54,23,68,20,"_dependencyMap"],[54,37,68,20],[54,46,68,25],[54,47,68,26],[55,4,69,2],[55,10,69,8,"utf8"],[55,14,69,12],[55,17,69,15,"exports"],[55,24,69,22],[55,25,69,23,"render"],[55,31,69,29],[55,32,69,30,"qrData"],[55,38,69,36],[55,40,69,38,"options"],[55,47,69,45],[55,48,69,46],[56,4,70,2,"fs"],[56,6,70,4],[56,7,70,5,"writeFile"],[56,16,70,14],[56,17,70,15,"path"],[56,21,70,19],[56,23,70,21,"utf8"],[56,27,70,25],[56,29,70,27,"cb"],[56,31,70,29],[56,32,70,30],[57,2,71,0],[57,3,71,1],[58,0,71,1],[58,3]],"functionMap":{"names":["<global>","getBlockChar","exports.render","renderToFile"],"mappings":"AAA;ACgB;CDK;iBEE;CFoC;uBGE;CHS"},"hasCjsExports":true},"type":"js/module"}]}