{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":107,"index":305}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Animated","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dNPzxVfn0yBoRxvhD+vE+lN7k4Q=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/I18nManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YXFxy1JKR54teS+Ykb7Z7cVZrH8=","exportNames":["*"],"imports":1}},{"name":"../errors/ErrorMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":361},"end":{"line":7,"column":56,"index":417}}],"key":"APtQ1ObkEMvvpKEHNjwmitGcEgw=","exportNames":["*"],"imports":1}},{"name":"../errors/WarningMessages","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":418},"end":{"line":8,"column":60,"index":478}}],"key":"wy3OtbKRfRgcFiIo5RwdXKEdHsA=","exportNames":["*"],"imports":1}},{"name":"./utils/measureLayout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":479},"end":{"line":9,"column":126,"index":605}}],"key":"EpOtT1YPrrvjrJBdb086HVW0HdI=","exportNames":["*"],"imports":1}},{"name":"./RecyclerViewContextProvider","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":606},"end":{"line":10,"column":101,"index":707}}],"key":"xkzKodpiEh9PM1d4t93OubNRFfg=","exportNames":["*"],"imports":1}},{"name":"./hooks/useLayoutState","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":708},"end":{"line":11,"column":56,"index":764}}],"key":"Vcep8FqPfs/hXqg5S+FWbcib3GA=","exportNames":["*"],"imports":1}},{"name":"./hooks/useRecyclerViewManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":765},"end":{"line":12,"column":72,"index":837}}],"key":"V/mC/swWBTtNdzSj/CBra84ztLs=","exportNames":["*"],"imports":1}},{"name":"./hooks/useOnLoad","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":838},"end":{"line":13,"column":50,"index":888}}],"key":"2n0jkphyq+izLpfQhMlceADPMeg=","exportNames":["*"],"imports":1}},{"name":"./ViewHolderCollection","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":889},"end":{"line":14,"column":63,"index":952}}],"key":"ZKXdCiImyeHeOjcYk5PiYCPP64U=","exportNames":["*"],"imports":1}},{"name":"./components/CompatView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":953},"end":{"line":15,"column":53,"index":1006}}],"key":"x3xyTyYEOkCA+EAT5e8aUviD1aY=","exportNames":["*"],"imports":1}},{"name":"./hooks/useBoundDetection","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":1007},"end":{"line":16,"column":62,"index":1069}}],"key":"P4pwyQUDYGEsD578iRPBYN/c7uw=","exportNames":["*"],"imports":1}},{"name":"./utils/adjustOffsetForRTL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1070},"end":{"line":17,"column":64,"index":1134}}],"key":"Rol5sfq3t0ssADFFrVqHFxOSuZo=","exportNames":["*"],"imports":1}},{"name":"./hooks/useSecondaryProps","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1135},"end":{"line":18,"column":62,"index":1197}}],"key":"r3iyqeBdlNRDTr8C5eQsbQHOCMw=","exportNames":["*"],"imports":1}},{"name":"./components/StickyHeaders","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1198},"end":{"line":19,"column":59,"index":1257}}],"key":"EKnJqKcVAeYUJmRXqLELG6tQSLE=","exportNames":["*"],"imports":1}},{"name":"./components/ScrollAnchor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":1258},"end":{"line":20,"column":57,"index":1315}}],"key":"k9UPUXLnf7kSub3foD+a50TV3fs=","exportNames":["*"],"imports":1}},{"name":"./hooks/useRecyclerViewController","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":1316},"end":{"line":21,"column":78,"index":1394}}],"key":"IJVb3EIjQZB0A+B7l4o02rk8CiM=","exportNames":["*"],"imports":1}},{"name":"./helpers/RenderTimeTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1395},"end":{"line":22,"column":64,"index":1459}}],"key":"XYDSeETg0KF2POdlsVP/+SUzw6E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"RecyclerView\", {\n    enumerable: true,\n    get: function () {\n      return RecyclerView;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsAnimated = require(_dependencyMap[1], \"react-native-web/dist/exports/Animated\");\n  var Animated = _interopDefault(_reactNativeWebDistExportsAnimated);\n  var _reactNativeWebDistExportsI18nManager = require(_dependencyMap[2], \"react-native-web/dist/exports/I18nManager\");\n  var I18nManager = _interopDefault(_reactNativeWebDistExportsI18nManager);\n  var _errorsErrorMessages = require(_dependencyMap[3], \"../errors/ErrorMessages\");\n  var _errorsWarningMessages = require(_dependencyMap[4], \"../errors/WarningMessages\");\n  var _utilsMeasureLayout = require(_dependencyMap[5], \"./utils/measureLayout\");\n  var _RecyclerViewContextProvider = require(_dependencyMap[6], \"./RecyclerViewContextProvider\");\n  var _hooksUseLayoutState = require(_dependencyMap[7], \"./hooks/useLayoutState\");\n  var _hooksUseRecyclerViewManager = require(_dependencyMap[8], \"./hooks/useRecyclerViewManager\");\n  var _hooksUseOnLoad = require(_dependencyMap[9], \"./hooks/useOnLoad\");\n  var _ViewHolderCollection = require(_dependencyMap[10], \"./ViewHolderCollection\");\n  var _componentsCompatView = require(_dependencyMap[11], \"./components/CompatView\");\n  var _hooksUseBoundDetection = require(_dependencyMap[12], \"./hooks/useBoundDetection\");\n  var _utilsAdjustOffsetForRTL = require(_dependencyMap[13], \"./utils/adjustOffsetForRTL\");\n  var _hooksUseSecondaryProps = require(_dependencyMap[14], \"./hooks/useSecondaryProps\");\n  var _componentsStickyHeaders = require(_dependencyMap[15], \"./components/StickyHeaders\");\n  var _componentsScrollAnchor = require(_dependencyMap[16], \"./components/ScrollAnchor\");\n  var _hooksUseRecyclerViewController = require(_dependencyMap[17], \"./hooks/useRecyclerViewController\");\n  var _helpersRenderTimeTracker = require(_dependencyMap[18], \"./helpers/RenderTimeTracker\");\n  /**\n   * RecyclerView is a high-performance list component that efficiently renders and recycles list items.\n   * It's designed to handle large lists with optimal memory usage and smooth scrolling.\n   */\n\n  /**\n   * Main RecyclerView component that handles list rendering, scrolling, and item recycling.\n   * @template T - The type of items in the list\n   */\n  const RecyclerViewComponent = (props, ref) => {\n    var _a;\n    // Destructure props and initialize refs\n    const {\n      horizontal,\n      renderItem,\n      data,\n      extraData,\n      onLoad,\n      CellRendererComponent,\n      overrideProps,\n      refreshing,\n      onRefresh,\n      progressViewOffset,\n      ListEmptyComponent,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ItemSeparatorComponent,\n      renderScrollComponent,\n      style,\n      stickyHeaderIndices,\n      maintainVisibleContentPosition,\n      onCommitLayoutEffect,\n      ...rest\n    } = props;\n    const [renderTimeTracker] = (0, _react.useState)(() => new _helpersRenderTimeTracker.RenderTimeTracker());\n    renderTimeTracker.startTracking();\n    // Core refs for managing scroll view, internal view, and child container\n    const scrollViewRef = (0, _react.useRef)(null);\n    const internalViewRef = (0, _react.useRef)(null);\n    const firstChildViewRef = (0, _react.useRef)(null);\n    const containerViewSizeRef = (0, _react.useRef)(undefined);\n    const pendingChildIds = (0, _react.useRef)(new Set()).current;\n    // Track scroll position\n    const scrollY = (0, _react.useRef)(new Animated.default.Value(0)).current;\n    // Refs for sticky headers and scroll anchoring\n    const stickyHeaderRef = (0, _react.useRef)(null);\n    const scrollAnchorRef = (0, _react.useRef)(null);\n    // State for managing layout and render updates\n    const [_, setLayoutTreeId] = (0, _hooksUseLayoutState.useLayoutState)(0);\n    const [__, setRenderId] = (0, _react.useState)(0);\n    // Map to store refs for each item in the list\n    const refHolder = (0, _react.useMemo)(() => new Map(), []);\n    // Initialize core RecyclerView manager and content offset management\n    const {\n      recyclerViewManager,\n      velocityTracker\n    } = (0, _hooksUseRecyclerViewManager.useRecyclerViewManager)(props);\n    const {\n      applyOffsetCorrection,\n      computeFirstVisibleIndexForOffsetCorrection,\n      applyInitialScrollIndex,\n      handlerMethods\n    } = (0, _hooksUseRecyclerViewController.useRecyclerViewController)(recyclerViewManager, ref, scrollViewRef, scrollAnchorRef);\n    // Initialize view holder collection ref\n    const viewHolderCollectionRef = (0, _react.useRef)(null);\n    // Hook to handle list loading\n    (0, _hooksUseOnLoad.useOnListLoad)(recyclerViewManager, onLoad);\n    // Hook to detect when scrolling reaches list bounds\n    const {\n      checkBounds\n    } = (0, _hooksUseBoundDetection.useBoundDetection)(recyclerViewManager, scrollViewRef);\n    const isHorizontalRTL = I18nManager.default.isRTL && horizontal;\n    /**\n     * Initialize the RecyclerView by measuring and setting up the window size\n     * This effect runs when the component mounts or when layout changes\n     */\n    (0, _react.useLayoutEffect)(() => {\n      if (internalViewRef.current && firstChildViewRef.current) {\n        // Measure the outer and inner container layouts\n        const outerViewLayout = (0, _utilsMeasureLayout.measureParentSize)(internalViewRef.current);\n        const firstChildViewLayout = (0, _utilsMeasureLayout.measureFirstChildLayout)(firstChildViewRef.current, internalViewRef.current);\n        containerViewSizeRef.current = outerViewLayout;\n        // Calculate offset of first item\n        const firstItemOffset = horizontal ? firstChildViewLayout.x - outerViewLayout.x : firstChildViewLayout.y - outerViewLayout.y;\n        // Update the RecyclerView manager with window dimensions\n        recyclerViewManager.updateLayoutParams({\n          width: horizontal ? outerViewLayout.width : firstChildViewLayout.width,\n          height: horizontal ? firstChildViewLayout.height : outerViewLayout.height\n        }, isHorizontalRTL && recyclerViewManager.hasLayout() ? firstItemOffset - recyclerViewManager.getChildContainerDimensions().width : firstItemOffset);\n      }\n    });\n    /**\n     * Effect to handle layout updates for list items\n     * This ensures proper positioning and recycling of items\n     */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    (0, _react.useLayoutEffect)(() => {\n      var _a, _b;\n      if (pendingChildIds.size > 0) {\n        return;\n      }\n      const layoutInfo = Array.from(refHolder, ([index, viewHolderRef]) => {\n        const layout = (0, _utilsMeasureLayout.measureItemLayout)(viewHolderRef.current, recyclerViewManager.tryGetLayout(index));\n        // comapre height with stored layout\n        // const storedLayout = recyclerViewManager.getLayout(index);\n        // if (\n        //   storedLayout.height !== layout.height &&\n        //   storedLayout.isHeightMeasured\n        // ) {\n        //   console.log(\n        //     \"height changed\",\n        //     index,\n        //     layout.height,\n        //     storedLayout.height\n        //   );\n        // }\n        return {\n          index,\n          dimensions: layout\n        };\n      });\n      const hasExceededMaxRendersWithoutCommit = renderTimeTracker.hasExceededMaxRendersWithoutCommit();\n      if (hasExceededMaxRendersWithoutCommit) {\n        console.warn(_errorsWarningMessages.WarningMessages.exceededMaxRendersWithoutCommit);\n      }\n      if (recyclerViewManager.modifyChildrenLayout(layoutInfo, (_a = data === null || data === void 0 ? void 0 : data.length) !== null && _a !== void 0 ? _a : 0) && !hasExceededMaxRendersWithoutCommit) {\n        // Trigger re-render if layout modifications were made\n        setRenderId(prev => prev + 1);\n      } else {\n        (_b = viewHolderCollectionRef.current) === null || _b === void 0 ? void 0 : _b.commitLayout();\n        applyOffsetCorrection();\n      }\n      if (horizontal && recyclerViewManager.hasLayout() && recyclerViewManager.getWindowSize().height > 0) {\n        // We want the parent FlashList to continue rendering the next batch of items as soon as height is available.\n        // Waiting for each horizontal list to finish might cause too many setState calls.\n        // This will help avoid \"Maximum update depth exceeded\" error.\n        parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.unmarkChildLayoutAsPending(recyclerViewId);\n      }\n    });\n    /**\n     * Scroll event handler that manages scroll position, velocity, and RTL support\n     */\n    const onScrollHandler = (0, _react.useCallback)(event => {\n      var _a, _b, _c;\n      if (recyclerViewManager.ignoreScrollEvents) {\n        return;\n      }\n      let scrollOffset = horizontal ? event.nativeEvent.contentOffset.x : event.nativeEvent.contentOffset.y;\n      // Handle RTL (Right-to-Left) layout adjustments\n      if (isHorizontalRTL) {\n        scrollOffset = (0, _utilsAdjustOffsetForRTL.adjustOffsetForRTL)(scrollOffset, event.nativeEvent.contentSize.width, event.nativeEvent.layoutMeasurement.width);\n      }\n      velocityTracker.computeVelocity(scrollOffset, recyclerViewManager.getAbsoluteLastScrollOffset(), Boolean(horizontal), (velocity, isMomentumEnd) => {\n        if (recyclerViewManager.ignoreScrollEvents) {\n          return;\n        }\n        if (isMomentumEnd) {\n          computeFirstVisibleIndexForOffsetCorrection();\n          if (!recyclerViewManager.isOffsetProjectionEnabled) {\n            return;\n          }\n          recyclerViewManager.resetVelocityCompute();\n        }\n        // Update scroll position and trigger re-render if needed\n        if (recyclerViewManager.updateScrollOffset(scrollOffset, velocity)) {\n          setRenderId(prev => prev + 1);\n        }\n      });\n      // Update sticky headers and check bounds\n      (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.reportScrollEvent(event.nativeEvent);\n      checkBounds();\n      // Record interaction and compute item visibility\n      recyclerViewManager.recordInteraction();\n      recyclerViewManager.computeItemViewability();\n      // Call user-provided onScroll handler\n      (_c = (_b = recyclerViewManager.props).onScroll) === null || _c === void 0 ? void 0 : _c.call(_b, event);\n    }, [checkBounds, computeFirstVisibleIndexForOffsetCorrection, horizontal, isHorizontalRTL, recyclerViewManager, velocityTracker]);\n    const parentRecyclerViewContext = (0, _RecyclerViewContextProvider.useRecyclerViewContext)();\n    const recyclerViewId = (0, _react.useId)();\n    // Create context for child components\n    const recyclerViewContext = (0, _react.useMemo)(() => {\n      return {\n        layout: () => {\n          setLayoutTreeId(prev => prev + 1);\n        },\n        getRef: () => {\n          if (recyclerViewManager.isDisposed) {\n            return null;\n          }\n          return handlerMethods;\n        },\n        getParentRef: () => {\n          var _a;\n          return (_a = parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.getRef()) !== null && _a !== void 0 ? _a : null;\n        },\n        getParentScrollViewRef: () => {\n          var _a;\n          return (_a = parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.getScrollViewRef()) !== null && _a !== void 0 ? _a : null;\n        },\n        getScrollViewRef: () => {\n          return scrollViewRef.current;\n        },\n        markChildLayoutAsPending: id => {\n          pendingChildIds.add(id);\n        },\n        unmarkChildLayoutAsPending: id => {\n          if (pendingChildIds.has(id)) {\n            pendingChildIds.delete(id);\n            recyclerViewContext.layout();\n          }\n        }\n      };\n    }, [handlerMethods, parentRecyclerViewContext, pendingChildIds, recyclerViewManager.isDisposed, setLayoutTreeId]);\n    /**\n     * Validates that item dimensions match the expected layout\n     */\n    const validateItemSize = (0, _react.useCallback)((index, size) => {\n      var _a, _b, _c, _d;\n      const layout = recyclerViewManager.getLayout(index);\n      const width = Math.max(Math.min(layout.width, (_a = layout.maxWidth) !== null && _a !== void 0 ? _a : Infinity), (_b = layout.minWidth) !== null && _b !== void 0 ? _b : 0);\n      const height = Math.max(Math.min(layout.height, (_c = layout.maxHeight) !== null && _c !== void 0 ? _c : Infinity), (_d = layout.minHeight) !== null && _d !== void 0 ? _d : 0);\n      if ((0, _utilsMeasureLayout.areDimensionsNotEqual)(width, size.width) || (0, _utilsMeasureLayout.areDimensionsNotEqual)(height, size.height)) {\n        // console.log(\n        //   \"invalid size\",\n        //   index,\n        //   width,\n        //   size.width,\n        //   height,\n        //   size.height\n        // );\n        // TODO: Add a warning for missing useLayoutState\n        recyclerViewContext.layout();\n      }\n    }, [recyclerViewContext, recyclerViewManager]);\n    // Get secondary props and components\n    const {\n      refreshControl,\n      renderHeader,\n      renderFooter,\n      renderEmpty,\n      CompatScrollView\n    } = (0, _hooksUseSecondaryProps.useSecondaryProps)(props);\n    if (!recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.getDataLength() > 0) {\n      parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.markChildLayoutAsPending(recyclerViewId);\n    }\n    // Render sticky headers if configured\n    const stickyHeaders = (0, _react.useMemo)(() => {\n      if (data && data.length > 0 && stickyHeaderIndices && stickyHeaderIndices.length > 0) {\n        if (horizontal) {\n          throw new Error(_errorsErrorMessages.ErrorMessages.stickyHeadersNotSupportedForHorizontal);\n        }\n        return /*#__PURE__*/React.default.createElement(_componentsStickyHeaders.StickyHeaders, {\n          stickyHeaderIndices: stickyHeaderIndices,\n          data: data,\n          renderItem: renderItem,\n          scrollY: scrollY,\n          stickyHeaderRef: stickyHeaderRef,\n          recyclerViewManager: recyclerViewManager,\n          extraData: extraData\n        });\n      }\n      return null;\n    }, [data, stickyHeaderIndices, renderItem, scrollY, horizontal, recyclerViewManager, extraData]);\n    // Set up scroll event handling with animation support for sticky headers\n    const animatedEvent = (0, _react.useMemo)(() => {\n      if (stickyHeaders) {\n        return Animated.default.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true,\n          listener: onScrollHandler\n        });\n      }\n      return onScrollHandler;\n    }, [onScrollHandler, scrollY, stickyHeaders]);\n    const shouldMaintainVisibleContentPosition = recyclerViewManager.shouldMaintainVisibleContentPosition();\n    const maintainVisibleContentPositionInternal = (0, _react.useMemo)(() => {\n      if (shouldMaintainVisibleContentPosition) {\n        return {\n          ...maintainVisibleContentPosition,\n          minIndexForVisible: 0\n        };\n      }\n      return undefined;\n    }, [maintainVisibleContentPosition, shouldMaintainVisibleContentPosition]);\n    const shouldRenderFromBottom = recyclerViewManager.getDataLength() > 0 && ((_a = maintainVisibleContentPosition === null || maintainVisibleContentPosition === void 0 ? void 0 : maintainVisibleContentPosition.startRenderingFromBottom) !== null && _a !== void 0 ? _a : false);\n    // Create view for measuring bounded size\n    const viewToMeasureBoundedSize = (0, _react.useMemo)(() => {\n      return /*#__PURE__*/React.default.createElement(_componentsCompatView.CompatView, {\n        style: {\n          height: horizontal ? undefined : 0,\n          width: horizontal ? 0 : undefined\n        },\n        ref: firstChildViewRef\n      });\n    }, [horizontal]);\n    const scrollAnchor = (0, _react.useMemo)(() => {\n      if (shouldMaintainVisibleContentPosition) {\n        return /*#__PURE__*/React.default.createElement(_componentsScrollAnchor.ScrollAnchor, {\n          horizontal: Boolean(horizontal),\n          scrollAnchorRef: scrollAnchorRef\n        });\n      }\n      return null;\n    }, [horizontal, shouldMaintainVisibleContentPosition]);\n    // console.log(\"render\", recyclerViewManager.getRenderStack());\n    // Render the main RecyclerView structure\n    return /*#__PURE__*/React.default.createElement(_RecyclerViewContextProvider.RecyclerViewContextProvider, {\n      value: recyclerViewContext\n    }, /*#__PURE__*/React.default.createElement(_componentsCompatView.CompatView, {\n      style: [{\n        flex: horizontal ? undefined : 1,\n        overflow: \"hidden\"\n      }, style],\n      ref: internalViewRef,\n      collapsable: false,\n      onLayout: event => {\n        var _a, _b, _c, _d;\n        if ((0, _utilsMeasureLayout.areDimensionsNotEqual)(event.nativeEvent.layout.width, (_b = (_a = containerViewSizeRef.current) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0) || (0, _utilsMeasureLayout.areDimensionsNotEqual)(event.nativeEvent.layout.height, (_d = (_c = containerViewSizeRef.current) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 0)) {\n          // console.log(\n          //   \"onLayout\",\n          //   recyclerViewManager.getWindowSize(),\n          //   event.nativeEvent.layout\n          // );\n          recyclerViewContext.layout();\n        }\n      }\n    }, /*#__PURE__*/React.default.createElement(CompatScrollView, {\n      ...rest,\n      horizontal: horizontal,\n      ref: scrollViewRef,\n      onScroll: animatedEvent,\n      maintainVisibleContentPosition: maintainVisibleContentPositionInternal,\n      refreshControl: refreshControl,\n      ...overrideProps\n    }, scrollAnchor, isHorizontalRTL && viewToMeasureBoundedSize, renderHeader, !isHorizontalRTL && viewToMeasureBoundedSize, /*#__PURE__*/React.default.createElement(_ViewHolderCollection.ViewHolderCollection, {\n      viewHolderCollectionRef: viewHolderCollectionRef,\n      data: data,\n      horizontal: horizontal,\n      renderStack: recyclerViewManager.getRenderStack(),\n      getLayout: index => recyclerViewManager.getLayout(index),\n      getAdjustmentMargin: () => {\n        if (!shouldRenderFromBottom || !recyclerViewManager.hasLayout()) {\n          return 0;\n        }\n        const windowSize = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n        const childContainerSize = horizontal ? recyclerViewManager.getChildContainerDimensions().width : recyclerViewManager.getChildContainerDimensions().height;\n        return Math.max(0, windowSize - childContainerSize - recyclerViewManager.firstItemOffset);\n      },\n      refHolder: refHolder,\n      onSizeChanged: validateItemSize,\n      renderItem: renderItem,\n      extraData: extraData,\n      onCommitLayoutEffect: () => {\n        applyInitialScrollIndex();\n        parentRecyclerViewContext === null || parentRecyclerViewContext === void 0 ? void 0 : parentRecyclerViewContext.unmarkChildLayoutAsPending(recyclerViewId);\n        onCommitLayoutEffect === null || onCommitLayoutEffect === void 0 ? void 0 : onCommitLayoutEffect();\n      },\n      onCommitEffect: () => {\n        renderTimeTracker.markRenderComplete();\n        recyclerViewManager.updateAverageRenderTime(renderTimeTracker.getAverageRenderTime());\n        applyInitialScrollIndex();\n        checkBounds();\n        recyclerViewManager.computeItemViewability();\n        recyclerViewManager.animationOptimizationsEnabled = false;\n      },\n      CellRendererComponent: CellRendererComponent,\n      ItemSeparatorComponent: ItemSeparatorComponent,\n      getChildContainerLayout: () => recyclerViewManager.hasLayout() ? recyclerViewManager.getChildContainerDimensions() : undefined\n    }), renderEmpty, renderFooter), stickyHeaders));\n  };\n  // Set displayName for the inner component\n  RecyclerViewComponent.displayName = \"FlashList\";\n  // Create and export the memoized, forwarded ref component\n  const RecyclerView = /*#__PURE__*/React.default.memo(/*#__PURE__*/(0, _react.forwardRef)(RecyclerViewComponent));\n});","lineCount":421,"map":[[12,2,367,0,"Object"],[12,8,367,0],[12,9,367,0,"defineProperty"],[12,23,367,0],[12,24,367,0,"exports"],[12,31,367,0],[13,4,367,0,"enumerable"],[13,14,367,0],[14,4,367,0,"get"],[14,7,367,0],[14,18,367,0,"get"],[14,19,367,0],[15,6,367,0],[15,13,367,9,"RecyclerView"],[15,25,367,21],[16,4,367,21],[17,2,367,21],[18,2,5,0],[18,6,5,0,"_react"],[18,12,5,0],[18,15,5,0,"require"],[18,22,5,0],[18,23,5,0,"_dependencyMap"],[18,37,5,0],[19,2,5,0],[19,6,5,0,"React"],[19,11,5,0],[19,14,5,0,"_interopDefault"],[19,29,5,0],[19,30,5,0,"_react"],[19,36,5,0],[20,2,5,107],[20,6,5,107,"_reactNativeWebDistExportsAnimated"],[20,40,5,107],[20,43,5,107,"require"],[20,50,5,107],[20,51,5,107,"_dependencyMap"],[20,65,5,107],[21,2,5,107],[21,6,5,107,"Animated"],[21,14,5,107],[21,17,5,107,"_interopDefault"],[21,32,5,107],[21,33,5,107,"_reactNativeWebDistExportsAnimated"],[21,67,5,107],[22,2,5,107],[22,6,5,107,"_reactNativeWebDistExportsI18nManager"],[22,43,5,107],[22,46,5,107,"require"],[22,53,5,107],[22,54,5,107,"_dependencyMap"],[22,68,5,107],[23,2,5,107],[23,6,5,107,"I18nManager"],[23,17,5,107],[23,20,5,107,"_interopDefault"],[23,35,5,107],[23,36,5,107,"_reactNativeWebDistExportsI18nManager"],[23,73,5,107],[24,2,7,0],[24,6,7,0,"_errorsErrorMessages"],[24,26,7,0],[24,29,7,0,"require"],[24,36,7,0],[24,37,7,0,"_dependencyMap"],[24,51,7,0],[25,2,8,0],[25,6,8,0,"_errorsWarningMessages"],[25,28,8,0],[25,31,8,0,"require"],[25,38,8,0],[25,39,8,0,"_dependencyMap"],[25,53,8,0],[26,2,9,0],[26,6,9,0,"_utilsMeasureLayout"],[26,25,9,0],[26,28,9,0,"require"],[26,35,9,0],[26,36,9,0,"_dependencyMap"],[26,50,9,0],[27,2,10,0],[27,6,10,0,"_RecyclerViewContextProvider"],[27,34,10,0],[27,37,10,0,"require"],[27,44,10,0],[27,45,10,0,"_dependencyMap"],[27,59,10,0],[28,2,11,0],[28,6,11,0,"_hooksUseLayoutState"],[28,26,11,0],[28,29,11,0,"require"],[28,36,11,0],[28,37,11,0,"_dependencyMap"],[28,51,11,0],[29,2,12,0],[29,6,12,0,"_hooksUseRecyclerViewManager"],[29,34,12,0],[29,37,12,0,"require"],[29,44,12,0],[29,45,12,0,"_dependencyMap"],[29,59,12,0],[30,2,13,0],[30,6,13,0,"_hooksUseOnLoad"],[30,21,13,0],[30,24,13,0,"require"],[30,31,13,0],[30,32,13,0,"_dependencyMap"],[30,46,13,0],[31,2,14,0],[31,6,14,0,"_ViewHolderCollection"],[31,27,14,0],[31,30,14,0,"require"],[31,37,14,0],[31,38,14,0,"_dependencyMap"],[31,52,14,0],[32,2,15,0],[32,6,15,0,"_componentsCompatView"],[32,27,15,0],[32,30,15,0,"require"],[32,37,15,0],[32,38,15,0,"_dependencyMap"],[32,52,15,0],[33,2,16,0],[33,6,16,0,"_hooksUseBoundDetection"],[33,29,16,0],[33,32,16,0,"require"],[33,39,16,0],[33,40,16,0,"_dependencyMap"],[33,54,16,0],[34,2,17,0],[34,6,17,0,"_utilsAdjustOffsetForRTL"],[34,30,17,0],[34,33,17,0,"require"],[34,40,17,0],[34,41,17,0,"_dependencyMap"],[34,55,17,0],[35,2,18,0],[35,6,18,0,"_hooksUseSecondaryProps"],[35,29,18,0],[35,32,18,0,"require"],[35,39,18,0],[35,40,18,0,"_dependencyMap"],[35,54,18,0],[36,2,19,0],[36,6,19,0,"_componentsStickyHeaders"],[36,30,19,0],[36,33,19,0,"require"],[36,40,19,0],[36,41,19,0,"_dependencyMap"],[36,55,19,0],[37,2,20,0],[37,6,20,0,"_componentsScrollAnchor"],[37,29,20,0],[37,32,20,0,"require"],[37,39,20,0],[37,40,20,0,"_dependencyMap"],[37,54,20,0],[38,2,21,0],[38,6,21,0,"_hooksUseRecyclerViewController"],[38,37,21,0],[38,40,21,0,"require"],[38,47,21,0],[38,48,21,0,"_dependencyMap"],[38,62,21,0],[39,2,22,0],[39,6,22,0,"_helpersRenderTimeTracker"],[39,31,22,0],[39,34,22,0,"require"],[39,41,22,0],[39,42,22,0,"_dependencyMap"],[39,56,22,0],[40,2,1,0],[41,0,2,0],[42,0,3,0],[43,0,4,0],[45,2,23,0],[46,0,24,0],[47,0,25,0],[48,0,26,0],[49,2,27,0],[49,8,27,6,"RecyclerViewComponent"],[49,29,27,27],[49,32,27,30,"RecyclerViewComponent"],[49,33,27,31,"props"],[49,38,27,36],[49,40,27,38,"ref"],[49,43,27,41],[49,48,27,46],[50,4,28,4],[50,8,28,8,"_a"],[50,10,28,10],[51,4,29,4],[52,4,30,4],[52,10,30,10],[53,6,30,12,"horizontal"],[53,16,30,22],[54,6,30,24,"renderItem"],[54,16,30,34],[55,6,30,36,"data"],[55,10,30,40],[56,6,30,42,"extraData"],[56,15,30,51],[57,6,30,53,"onLoad"],[57,12,30,59],[58,6,30,61,"CellRendererComponent"],[58,27,30,82],[59,6,30,84,"overrideProps"],[59,19,30,97],[60,6,30,99,"refreshing"],[60,16,30,109],[61,6,30,111,"onRefresh"],[61,15,30,120],[62,6,30,122,"progressViewOffset"],[62,24,30,140],[63,6,30,142,"ListEmptyComponent"],[63,24,30,160],[64,6,30,162,"ListHeaderComponent"],[64,25,30,181],[65,6,30,183,"ListHeaderComponentStyle"],[65,30,30,207],[66,6,30,209,"ListFooterComponent"],[66,25,30,228],[67,6,30,230,"ListFooterComponentStyle"],[67,30,30,254],[68,6,30,256,"ItemSeparatorComponent"],[68,28,30,278],[69,6,30,280,"renderScrollComponent"],[69,27,30,301],[70,6,30,303,"style"],[70,11,30,308],[71,6,30,310,"stickyHeaderIndices"],[71,25,30,329],[72,6,30,331,"maintainVisibleContentPosition"],[72,36,30,361],[73,6,30,363,"onCommitLayoutEffect"],[73,26,30,383],[74,6,30,385],[74,9,30,388,"rest"],[75,4,30,393],[75,5,30,394],[75,8,30,397,"props"],[75,13,30,402],[76,4,31,4],[76,10,31,10],[76,11,31,11,"renderTimeTracker"],[76,28,31,28],[76,29,31,29],[76,32,31,32],[76,36,31,32,"useState"],[76,42,31,40],[76,43,31,40,"useState"],[76,51,31,40],[76,53,31,41],[76,59,31,47],[76,63,31,51,"RenderTimeTracker"],[76,88,31,68],[76,89,31,68,"RenderTimeTracker"],[76,106,31,68],[76,107,31,69],[76,108,31,70],[76,109,31,71],[77,4,32,4,"renderTimeTracker"],[77,21,32,21],[77,22,32,22,"startTracking"],[77,35,32,35],[77,36,32,36],[77,37,32,37],[78,4,33,4],[79,4,34,4],[79,10,34,10,"scrollViewRef"],[79,23,34,23],[79,26,34,26],[79,30,34,26,"useRef"],[79,36,34,32],[79,37,34,32,"useRef"],[79,43,34,32],[79,45,34,33],[79,49,34,37],[79,50,34,38],[80,4,35,4],[80,10,35,10,"internalViewRef"],[80,25,35,25],[80,28,35,28],[80,32,35,28,"useRef"],[80,38,35,34],[80,39,35,34,"useRef"],[80,45,35,34],[80,47,35,35],[80,51,35,39],[80,52,35,40],[81,4,36,4],[81,10,36,10,"firstChildViewRef"],[81,27,36,27],[81,30,36,30],[81,34,36,30,"useRef"],[81,40,36,36],[81,41,36,36,"useRef"],[81,47,36,36],[81,49,36,37],[81,53,36,41],[81,54,36,42],[82,4,37,4],[82,10,37,10,"containerViewSizeRef"],[82,30,37,30],[82,33,37,33],[82,37,37,33,"useRef"],[82,43,37,39],[82,44,37,39,"useRef"],[82,50,37,39],[82,52,37,40,"undefined"],[82,61,37,49],[82,62,37,50],[83,4,38,4],[83,10,38,10,"pendingChildIds"],[83,25,38,25],[83,28,38,28],[83,32,38,28,"useRef"],[83,38,38,34],[83,39,38,34,"useRef"],[83,45,38,34],[83,47,38,35],[83,51,38,39,"Set"],[83,54,38,42],[83,55,38,43],[83,56,38,44],[83,57,38,45],[83,58,38,46,"current"],[83,65,38,53],[84,4,39,4],[85,4,40,4],[85,10,40,10,"scrollY"],[85,17,40,17],[85,20,40,20],[85,24,40,20,"useRef"],[85,30,40,26],[85,31,40,26,"useRef"],[85,37,40,26],[85,39,40,27],[85,43,40,31,"Animated"],[85,51,40,39],[85,52,40,39,"default"],[85,59,40,39],[85,60,40,40,"Value"],[85,65,40,45],[85,66,40,46],[85,67,40,47],[85,68,40,48],[85,69,40,49],[85,70,40,50,"current"],[85,77,40,57],[86,4,41,4],[87,4,42,4],[87,10,42,10,"stickyHeaderRef"],[87,25,42,25],[87,28,42,28],[87,32,42,28,"useRef"],[87,38,42,34],[87,39,42,34,"useRef"],[87,45,42,34],[87,47,42,35],[87,51,42,39],[87,52,42,40],[88,4,43,4],[88,10,43,10,"scrollAnchorRef"],[88,25,43,25],[88,28,43,28],[88,32,43,28,"useRef"],[88,38,43,34],[88,39,43,34,"useRef"],[88,45,43,34],[88,47,43,35],[88,51,43,39],[88,52,43,40],[89,4,44,4],[90,4,45,4],[90,10,45,10],[90,11,45,11,"_"],[90,12,45,12],[90,14,45,14,"setLayoutTreeId"],[90,29,45,29],[90,30,45,30],[90,33,45,33],[90,37,45,33,"useLayoutState"],[90,57,45,47],[90,58,45,47,"useLayoutState"],[90,72,45,47],[90,74,45,48],[90,75,45,49],[90,76,45,50],[91,4,46,4],[91,10,46,10],[91,11,46,11,"__"],[91,13,46,13],[91,15,46,15,"setRenderId"],[91,26,46,26],[91,27,46,27],[91,30,46,30],[91,34,46,30,"useState"],[91,40,46,38],[91,41,46,38,"useState"],[91,49,46,38],[91,51,46,39],[91,52,46,40],[91,53,46,41],[92,4,47,4],[93,4,48,4],[93,10,48,10,"refHolder"],[93,19,48,19],[93,22,48,22],[93,26,48,22,"useMemo"],[93,32,48,29],[93,33,48,29,"useMemo"],[93,40,48,29],[93,42,48,30],[93,48,48,36],[93,52,48,40,"Map"],[93,55,48,43],[93,56,48,44],[93,57,48,45],[93,59,48,47],[93,61,48,49],[93,62,48,50],[94,4,49,4],[95,4,50,4],[95,10,50,10],[96,6,50,12,"recyclerViewManager"],[96,25,50,31],[97,6,50,33,"velocityTracker"],[98,4,50,49],[98,5,50,50],[98,8,50,53],[98,12,50,53,"useRecyclerViewManager"],[98,40,50,75],[98,41,50,75,"useRecyclerViewManager"],[98,63,50,75],[98,65,50,76,"props"],[98,70,50,81],[98,71,50,82],[99,4,51,4],[99,10,51,10],[100,6,51,12,"applyOffsetCorrection"],[100,27,51,33],[101,6,51,35,"computeFirstVisibleIndexForOffsetCorrection"],[101,49,51,78],[102,6,51,80,"applyInitialScrollIndex"],[102,29,51,103],[103,6,51,105,"handlerMethods"],[104,4,51,121],[104,5,51,122],[104,8,51,125],[104,12,51,125,"useRecyclerViewController"],[104,43,51,150],[104,44,51,150,"useRecyclerViewController"],[104,69,51,150],[104,71,51,151,"recyclerViewManager"],[104,90,51,170],[104,92,51,172,"ref"],[104,95,51,175],[104,97,51,177,"scrollViewRef"],[104,110,51,190],[104,112,51,192,"scrollAnchorRef"],[104,127,51,207],[104,128,51,208],[105,4,52,4],[106,4,53,4],[106,10,53,10,"viewHolderCollectionRef"],[106,33,53,33],[106,36,53,36],[106,40,53,36,"useRef"],[106,46,53,42],[106,47,53,42,"useRef"],[106,53,53,42],[106,55,53,43],[106,59,53,47],[106,60,53,48],[107,4,54,4],[108,4,55,4],[108,8,55,4,"useOnListLoad"],[108,23,55,17],[108,24,55,17,"useOnListLoad"],[108,37,55,17],[108,39,55,18,"recyclerViewManager"],[108,58,55,37],[108,60,55,39,"onLoad"],[108,66,55,45],[108,67,55,46],[109,4,56,4],[110,4,57,4],[110,10,57,10],[111,6,57,12,"checkBounds"],[112,4,57,24],[112,5,57,25],[112,8,57,28],[112,12,57,28,"useBoundDetection"],[112,35,57,45],[112,36,57,45,"useBoundDetection"],[112,53,57,45],[112,55,57,46,"recyclerViewManager"],[112,74,57,65],[112,76,57,67,"scrollViewRef"],[112,89,57,80],[112,90,57,81],[113,4,58,4],[113,10,58,10,"isHorizontalRTL"],[113,25,58,25],[113,28,58,28,"I18nManager"],[113,39,58,39],[113,40,58,39,"default"],[113,47,58,39],[113,48,58,40,"isRTL"],[113,53,58,45],[113,57,58,49,"horizontal"],[113,67,58,59],[114,4,59,4],[115,0,60,0],[116,0,61,0],[117,0,62,0],[118,4,63,4],[118,8,63,4,"useLayoutEffect"],[118,14,63,19],[118,15,63,19,"useLayoutEffect"],[118,30,63,19],[118,32,63,20],[118,38,63,26],[119,6,64,8],[119,10,64,12,"internalViewRef"],[119,25,64,27],[119,26,64,28,"current"],[119,33,64,35],[119,37,64,39,"firstChildViewRef"],[119,54,64,56],[119,55,64,57,"current"],[119,62,64,64],[119,64,64,66],[120,8,65,12],[121,8,66,12],[121,14,66,18,"outerViewLayout"],[121,29,66,33],[121,32,66,36],[121,36,66,36,"measureParentSize"],[121,55,66,53],[121,56,66,53,"measureParentSize"],[121,73,66,53],[121,75,66,54,"internalViewRef"],[121,90,66,69],[121,91,66,70,"current"],[121,98,66,77],[121,99,66,78],[122,8,67,12],[122,14,67,18,"firstChildViewLayout"],[122,34,67,38],[122,37,67,41],[122,41,67,41,"measureFirstChildLayout"],[122,60,67,64],[122,61,67,64,"measureFirstChildLayout"],[122,84,67,64],[122,86,67,65,"firstChildViewRef"],[122,103,67,82],[122,104,67,83,"current"],[122,111,67,90],[122,113,67,92,"internalViewRef"],[122,128,67,107],[122,129,67,108,"current"],[122,136,67,115],[122,137,67,116],[123,8,68,12,"containerViewSizeRef"],[123,28,68,32],[123,29,68,33,"current"],[123,36,68,40],[123,39,68,43,"outerViewLayout"],[123,54,68,58],[124,8,69,12],[125,8,70,12],[125,14,70,18,"firstItemOffset"],[125,29,70,33],[125,32,70,36,"horizontal"],[125,42,70,46],[125,45,71,18,"firstChildViewLayout"],[125,65,71,38],[125,66,71,39,"x"],[125,67,71,40],[125,70,71,43,"outerViewLayout"],[125,85,71,58],[125,86,71,59,"x"],[125,87,71,60],[125,90,72,18,"firstChildViewLayout"],[125,110,72,38],[125,111,72,39,"y"],[125,112,72,40],[125,115,72,43,"outerViewLayout"],[125,130,72,58],[125,131,72,59,"y"],[125,132,72,60],[126,8,73,12],[127,8,74,12,"recyclerViewManager"],[127,27,74,31],[127,28,74,32,"updateLayoutParams"],[127,46,74,50],[127,47,74,51],[128,10,75,16,"width"],[128,15,75,21],[128,17,75,23,"horizontal"],[128,27,75,33],[128,30,76,22,"outerViewLayout"],[128,45,76,37],[128,46,76,38,"width"],[128,51,76,43],[128,54,77,22,"firstChildViewLayout"],[128,74,77,42],[128,75,77,43,"width"],[128,80,77,48],[129,10,78,16,"height"],[129,16,78,22],[129,18,78,24,"horizontal"],[129,28,78,34],[129,31,79,22,"firstChildViewLayout"],[129,51,79,42],[129,52,79,43,"height"],[129,58,79,49],[129,61,80,22,"outerViewLayout"],[129,76,80,37],[129,77,80,38,"height"],[130,8,81,12],[130,9,81,13],[130,11,81,15,"isHorizontalRTL"],[130,26,81,30],[130,30,81,34,"recyclerViewManager"],[130,49,81,53],[130,50,81,54,"hasLayout"],[130,59,81,63],[130,60,81,64],[130,61,81,65],[130,64,82,18,"firstItemOffset"],[130,79,82,33],[130,82,83,20,"recyclerViewManager"],[130,101,83,39],[130,102,83,40,"getChildContainerDimensions"],[130,129,83,67],[130,130,83,68],[130,131,83,69],[130,132,83,70,"width"],[130,137,83,75],[130,140,84,18,"firstItemOffset"],[130,155,84,33],[130,156,84,34],[131,6,85,8],[132,4,86,4],[132,5,86,5],[132,6,86,6],[133,4,87,4],[134,0,88,0],[135,0,89,0],[136,0,90,0],[137,4,91,4],[138,4,92,4],[138,8,92,4,"useLayoutEffect"],[138,14,92,19],[138,15,92,19,"useLayoutEffect"],[138,30,92,19],[138,32,92,20],[138,38,92,26],[139,6,93,8],[139,10,93,12,"_a"],[139,12,93,14],[139,14,93,16,"_b"],[139,16,93,18],[140,6,94,8],[140,10,94,12,"pendingChildIds"],[140,25,94,27],[140,26,94,28,"size"],[140,30,94,32],[140,33,94,35],[140,34,94,36],[140,36,94,38],[141,8,95,12],[142,6,96,8],[143,6,97,8],[143,12,97,14,"layoutInfo"],[143,22,97,24],[143,25,97,27,"Array"],[143,30,97,32],[143,31,97,33,"from"],[143,35,97,37],[143,36,97,38,"refHolder"],[143,45,97,47],[143,47,97,49],[143,48,97,50],[143,49,97,51,"index"],[143,54,97,56],[143,56,97,58,"viewHolderRef"],[143,69,97,71],[143,70,97,72],[143,75,97,77],[144,8,98,12],[144,14,98,18,"layout"],[144,20,98,24],[144,23,98,27],[144,27,98,27,"measureItemLayout"],[144,46,98,44],[144,47,98,44,"measureItemLayout"],[144,64,98,44],[144,66,98,45,"viewHolderRef"],[144,79,98,58],[144,80,98,59,"current"],[144,87,98,66],[144,89,98,68,"recyclerViewManager"],[144,108,98,87],[144,109,98,88,"tryGetLayout"],[144,121,98,100],[144,122,98,101,"index"],[144,127,98,106],[144,128,98,107],[144,129,98,108],[145,8,99,12],[146,8,100,12],[147,8,101,12],[148,8,102,12],[149,8,103,12],[150,8,104,12],[151,8,105,12],[152,8,106,12],[153,8,107,12],[154,8,108,12],[155,8,109,12],[156,8,110,12],[157,8,111,12],[158,8,112,12],[158,15,112,19],[159,10,112,21,"index"],[159,15,112,26],[160,10,112,28,"dimensions"],[160,20,112,38],[160,22,112,40,"layout"],[161,8,112,47],[161,9,112,48],[162,6,113,8],[162,7,113,9],[162,8,113,10],[163,6,114,8],[163,12,114,14,"hasExceededMaxRendersWithoutCommit"],[163,46,114,48],[163,49,114,51,"renderTimeTracker"],[163,66,114,68],[163,67,114,69,"hasExceededMaxRendersWithoutCommit"],[163,101,114,103],[163,102,114,104],[163,103,114,105],[164,6,115,8],[164,10,115,12,"hasExceededMaxRendersWithoutCommit"],[164,44,115,46],[164,46,115,48],[165,8,116,12,"console"],[165,15,116,19],[165,16,116,20,"warn"],[165,20,116,24],[165,21,116,25,"WarningMessages"],[165,43,116,40],[165,44,116,40,"WarningMessages"],[165,59,116,40],[165,60,116,41,"exceededMaxRendersWithoutCommit"],[165,91,116,72],[165,92,116,73],[166,6,117,8],[167,6,118,8],[167,10,118,12,"recyclerViewManager"],[167,29,118,31],[167,30,118,32,"modifyChildrenLayout"],[167,50,118,52],[167,51,118,53,"layoutInfo"],[167,61,118,63],[167,63,118,65],[167,64,118,66,"_a"],[167,66,118,68],[167,69,118,71,"data"],[167,73,118,75],[167,78,118,80],[167,82,118,84],[167,86,118,88,"data"],[167,90,118,92],[167,95,118,97],[167,100,118,102],[167,101,118,103],[167,104,118,106],[167,109,118,111],[167,110,118,112],[167,113,118,115,"data"],[167,117,118,119],[167,118,118,120,"length"],[167,124,118,126],[167,130,118,132],[167,134,118,136],[167,138,118,140,"_a"],[167,140,118,142],[167,145,118,147],[167,150,118,152],[167,151,118,153],[167,154,118,156,"_a"],[167,156,118,158],[167,159,118,161],[167,160,118,162],[167,161,118,163],[167,165,119,12],[167,166,119,13,"hasExceededMaxRendersWithoutCommit"],[167,200,119,47],[167,202,119,49],[168,8,120,12],[169,8,121,12,"setRenderId"],[169,19,121,23],[169,20,121,25,"prev"],[169,24,121,29],[169,28,121,34,"prev"],[169,32,121,38],[169,35,121,41],[169,36,121,42],[169,37,121,43],[170,6,122,8],[170,7,122,9],[170,13,123,13],[171,8,124,12],[171,9,124,13,"_b"],[171,11,124,15],[171,14,124,18,"viewHolderCollectionRef"],[171,37,124,41],[171,38,124,42,"current"],[171,45,124,49],[171,51,124,55],[171,55,124,59],[171,59,124,63,"_b"],[171,61,124,65],[171,66,124,70],[171,71,124,75],[171,72,124,76],[171,75,124,79],[171,80,124,84],[171,81,124,85],[171,84,124,88,"_b"],[171,86,124,90],[171,87,124,91,"commitLayout"],[171,99,124,103],[171,100,124,104],[171,101,124,105],[172,8,125,12,"applyOffsetCorrection"],[172,29,125,33],[172,30,125,34],[172,31,125,35],[173,6,126,8],[174,6,127,8],[174,10,127,12,"horizontal"],[174,20,127,22],[174,24,128,12,"recyclerViewManager"],[174,43,128,31],[174,44,128,32,"hasLayout"],[174,53,128,41],[174,54,128,42],[174,55,128,43],[174,59,129,12,"recyclerViewManager"],[174,78,129,31],[174,79,129,32,"getWindowSize"],[174,92,129,45],[174,93,129,46],[174,94,129,47],[174,95,129,48,"height"],[174,101,129,54],[174,104,129,57],[174,105,129,58],[174,107,129,60],[175,8,130,12],[176,8,131,12],[177,8,132,12],[178,8,133,12,"parentRecyclerViewContext"],[178,33,133,37],[178,38,133,42],[178,42,133,46],[178,46,133,50,"parentRecyclerViewContext"],[178,71,133,75],[178,76,133,80],[178,81,133,85],[178,82,133,86],[178,85,133,89],[178,90,133,94],[178,91,133,95],[178,94,133,98,"parentRecyclerViewContext"],[178,119,133,123],[178,120,133,124,"unmarkChildLayoutAsPending"],[178,146,133,150],[178,147,133,151,"recyclerViewId"],[178,161,133,165],[178,162,133,166],[179,6,134,8],[180,4,135,4],[180,5,135,5],[180,6,135,6],[181,4,136,4],[182,0,137,0],[183,0,138,0],[184,4,139,4],[184,10,139,10,"onScrollHandler"],[184,25,139,25],[184,28,139,28],[184,32,139,28,"useCallback"],[184,38,139,39],[184,39,139,39,"useCallback"],[184,50,139,39],[184,52,139,41,"event"],[184,57,139,46],[184,61,139,51],[185,6,140,8],[185,10,140,12,"_a"],[185,12,140,14],[185,14,140,16,"_b"],[185,16,140,18],[185,18,140,20,"_c"],[185,20,140,22],[186,6,141,8],[186,10,141,12,"recyclerViewManager"],[186,29,141,31],[186,30,141,32,"ignoreScrollEvents"],[186,48,141,50],[186,50,141,52],[187,8,142,12],[188,6,143,8],[189,6,144,8],[189,10,144,12,"scrollOffset"],[189,22,144,24],[189,25,144,27,"horizontal"],[189,35,144,37],[189,38,145,14,"event"],[189,43,145,19],[189,44,145,20,"nativeEvent"],[189,55,145,31],[189,56,145,32,"contentOffset"],[189,69,145,45],[189,70,145,46,"x"],[189,71,145,47],[189,74,146,14,"event"],[189,79,146,19],[189,80,146,20,"nativeEvent"],[189,91,146,31],[189,92,146,32,"contentOffset"],[189,105,146,45],[189,106,146,46,"y"],[189,107,146,47],[190,6,147,8],[191,6,148,8],[191,10,148,12,"isHorizontalRTL"],[191,25,148,27],[191,27,148,29],[192,8,149,12,"scrollOffset"],[192,20,149,24],[192,23,149,27],[192,27,149,27,"adjustOffsetForRTL"],[192,51,149,45],[192,52,149,45,"adjustOffsetForRTL"],[192,70,149,45],[192,72,149,46,"scrollOffset"],[192,84,149,58],[192,86,149,60,"event"],[192,91,149,65],[192,92,149,66,"nativeEvent"],[192,103,149,77],[192,104,149,78,"contentSize"],[192,115,149,89],[192,116,149,90,"width"],[192,121,149,95],[192,123,149,97,"event"],[192,128,149,102],[192,129,149,103,"nativeEvent"],[192,140,149,114],[192,141,149,115,"layoutMeasurement"],[192,158,149,132],[192,159,149,133,"width"],[192,164,149,138],[192,165,149,139],[193,6,150,8],[194,6,151,8,"velocityTracker"],[194,21,151,23],[194,22,151,24,"computeVelocity"],[194,37,151,39],[194,38,151,40,"scrollOffset"],[194,50,151,52],[194,52,151,54,"recyclerViewManager"],[194,71,151,73],[194,72,151,74,"getAbsoluteLastScrollOffset"],[194,99,151,101],[194,100,151,102],[194,101,151,103],[194,103,151,105,"Boolean"],[194,110,151,112],[194,111,151,113,"horizontal"],[194,121,151,123],[194,122,151,124],[194,124,151,126],[194,125,151,127,"velocity"],[194,133,151,135],[194,135,151,137,"isMomentumEnd"],[194,148,151,150],[194,153,151,155],[195,8,152,12],[195,12,152,16,"recyclerViewManager"],[195,31,152,35],[195,32,152,36,"ignoreScrollEvents"],[195,50,152,54],[195,52,152,56],[196,10,153,16],[197,8,154,12],[198,8,155,12],[198,12,155,16,"isMomentumEnd"],[198,25,155,29],[198,27,155,31],[199,10,156,16,"computeFirstVisibleIndexForOffsetCorrection"],[199,53,156,59],[199,54,156,60],[199,55,156,61],[200,10,157,16],[200,14,157,20],[200,15,157,21,"recyclerViewManager"],[200,34,157,40],[200,35,157,41,"isOffsetProjectionEnabled"],[200,60,157,66],[200,62,157,68],[201,12,158,20],[202,10,159,16],[203,10,160,16,"recyclerViewManager"],[203,29,160,35],[203,30,160,36,"resetVelocityCompute"],[203,50,160,56],[203,51,160,57],[203,52,160,58],[204,8,161,12],[205,8,162,12],[206,8,163,12],[206,12,163,16,"recyclerViewManager"],[206,31,163,35],[206,32,163,36,"updateScrollOffset"],[206,50,163,54],[206,51,163,55,"scrollOffset"],[206,63,163,67],[206,65,163,69,"velocity"],[206,73,163,77],[206,74,163,78],[206,76,163,80],[207,10,164,16,"setRenderId"],[207,21,164,27],[207,22,164,29,"prev"],[207,26,164,33],[207,30,164,38,"prev"],[207,34,164,42],[207,37,164,45],[207,38,164,46],[207,39,164,47],[208,8,165,12],[209,6,166,8],[209,7,166,9],[209,8,166,10],[210,6,167,8],[211,6,168,8],[211,7,168,9,"_a"],[211,9,168,11],[211,12,168,14,"stickyHeaderRef"],[211,27,168,29],[211,28,168,30,"current"],[211,35,168,37],[211,41,168,43],[211,45,168,47],[211,49,168,51,"_a"],[211,51,168,53],[211,56,168,58],[211,61,168,63],[211,62,168,64],[211,65,168,67],[211,70,168,72],[211,71,168,73],[211,74,168,76,"_a"],[211,76,168,78],[211,77,168,79,"reportScrollEvent"],[211,94,168,96],[211,95,168,97,"event"],[211,100,168,102],[211,101,168,103,"nativeEvent"],[211,112,168,114],[211,113,168,115],[212,6,169,8,"checkBounds"],[212,17,169,19],[212,18,169,20],[212,19,169,21],[213,6,170,8],[214,6,171,8,"recyclerViewManager"],[214,25,171,27],[214,26,171,28,"recordInteraction"],[214,43,171,45],[214,44,171,46],[214,45,171,47],[215,6,172,8,"recyclerViewManager"],[215,25,172,27],[215,26,172,28,"computeItemViewability"],[215,48,172,50],[215,49,172,51],[215,50,172,52],[216,6,173,8],[217,6,174,8],[217,7,174,9,"_c"],[217,9,174,11],[217,12,174,14],[217,13,174,15,"_b"],[217,15,174,17],[217,18,174,20,"recyclerViewManager"],[217,37,174,39],[217,38,174,40,"props"],[217,43,174,45],[217,45,174,47,"onScroll"],[217,53,174,55],[217,59,174,61],[217,63,174,65],[217,67,174,69,"_c"],[217,69,174,71],[217,74,174,76],[217,79,174,81],[217,80,174,82],[217,83,174,85],[217,88,174,90],[217,89,174,91],[217,92,174,94,"_c"],[217,94,174,96],[217,95,174,97,"call"],[217,99,174,101],[217,100,174,102,"_b"],[217,102,174,104],[217,104,174,106,"event"],[217,109,174,111],[217,110,174,112],[218,4,175,4],[218,5,175,5],[218,7,175,7],[218,8,176,8,"checkBounds"],[218,19,176,19],[218,21,177,8,"computeFirstVisibleIndexForOffsetCorrection"],[218,64,177,51],[218,66,178,8,"horizontal"],[218,76,178,18],[218,78,179,8,"isHorizontalRTL"],[218,93,179,23],[218,95,180,8,"recyclerViewManager"],[218,114,180,27],[218,116,181,8,"velocityTracker"],[218,131,181,23],[218,132,182,5],[218,133,182,6],[219,4,183,4],[219,10,183,10,"parentRecyclerViewContext"],[219,35,183,35],[219,38,183,38],[219,42,183,38,"useRecyclerViewContext"],[219,70,183,60],[219,71,183,60,"useRecyclerViewContext"],[219,93,183,60],[219,95,183,61],[219,96,183,62],[220,4,184,4],[220,10,184,10,"recyclerViewId"],[220,24,184,24],[220,27,184,27],[220,31,184,27,"useId"],[220,37,184,32],[220,38,184,32,"useId"],[220,43,184,32],[220,45,184,33],[220,46,184,34],[221,4,185,4],[222,4,186,4],[222,10,186,10,"recyclerViewContext"],[222,29,186,29],[222,32,186,32],[222,36,186,32,"useMemo"],[222,42,186,39],[222,43,186,39,"useMemo"],[222,50,186,39],[222,52,186,40],[222,58,186,46],[223,6,187,8],[223,13,187,15],[224,8,188,12,"layout"],[224,14,188,18],[224,16,188,20,"layout"],[224,17,188,20],[224,22,188,26],[225,10,189,16,"setLayoutTreeId"],[225,25,189,31],[225,26,189,33,"prev"],[225,30,189,37],[225,34,189,42,"prev"],[225,38,189,46],[225,41,189,49],[225,42,189,50],[225,43,189,51],[226,8,190,12],[226,9,190,13],[227,8,191,12,"getRef"],[227,14,191,18],[227,16,191,20,"getRef"],[227,17,191,20],[227,22,191,26],[228,10,192,16],[228,14,192,20,"recyclerViewManager"],[228,33,192,39],[228,34,192,40,"isDisposed"],[228,44,192,50],[228,46,192,52],[229,12,193,20],[229,19,193,27],[229,23,193,31],[230,10,194,16],[231,10,195,16],[231,17,195,23,"handlerMethods"],[231,31,195,37],[232,8,196,12],[232,9,196,13],[233,8,197,12,"getParentRef"],[233,20,197,24],[233,22,197,26,"getParentRef"],[233,23,197,26],[233,28,197,32],[234,10,198,16],[234,14,198,20,"_a"],[234,16,198,22],[235,10,199,16],[235,17,199,23],[235,18,199,24,"_a"],[235,20,199,26],[235,23,199,29,"parentRecyclerViewContext"],[235,48,199,54],[235,53,199,59],[235,57,199,63],[235,61,199,67,"parentRecyclerViewContext"],[235,86,199,92],[235,91,199,97],[235,96,199,102],[235,97,199,103],[235,100,199,106],[235,105,199,111],[235,106,199,112],[235,109,199,115,"parentRecyclerViewContext"],[235,134,199,140],[235,135,199,141,"getRef"],[235,141,199,147],[235,142,199,148],[235,143,199,149],[235,149,199,155],[235,153,199,159],[235,157,199,163,"_a"],[235,159,199,165],[235,164,199,170],[235,169,199,175],[235,170,199,176],[235,173,199,179,"_a"],[235,175,199,181],[235,178,199,184],[235,182,199,188],[236,8,200,12],[236,9,200,13],[237,8,201,12,"getParentScrollViewRef"],[237,30,201,34],[237,32,201,36,"getParentScrollViewRef"],[237,33,201,36],[237,38,201,42],[238,10,202,16],[238,14,202,20,"_a"],[238,16,202,22],[239,10,203,16],[239,17,203,23],[239,18,203,24,"_a"],[239,20,203,26],[239,23,203,29,"parentRecyclerViewContext"],[239,48,203,54],[239,53,203,59],[239,57,203,63],[239,61,203,67,"parentRecyclerViewContext"],[239,86,203,92],[239,91,203,97],[239,96,203,102],[239,97,203,103],[239,100,203,106],[239,105,203,111],[239,106,203,112],[239,109,203,115,"parentRecyclerViewContext"],[239,134,203,140],[239,135,203,141,"getScrollViewRef"],[239,151,203,157],[239,152,203,158],[239,153,203,159],[239,159,203,165],[239,163,203,169],[239,167,203,173,"_a"],[239,169,203,175],[239,174,203,180],[239,179,203,185],[239,180,203,186],[239,183,203,189,"_a"],[239,185,203,191],[239,188,203,194],[239,192,203,198],[240,8,204,12],[240,9,204,13],[241,8,205,12,"getScrollViewRef"],[241,24,205,28],[241,26,205,30,"getScrollViewRef"],[241,27,205,30],[241,32,205,36],[242,10,206,16],[242,17,206,23,"scrollViewRef"],[242,30,206,36],[242,31,206,37,"current"],[242,38,206,44],[243,8,207,12],[243,9,207,13],[244,8,208,12,"markChildLayoutAsPending"],[244,32,208,36],[244,34,208,39,"id"],[244,36,208,41],[244,40,208,46],[245,10,209,16,"pendingChildIds"],[245,25,209,31],[245,26,209,32,"add"],[245,29,209,35],[245,30,209,36,"id"],[245,32,209,38],[245,33,209,39],[246,8,210,12],[246,9,210,13],[247,8,211,12,"unmarkChildLayoutAsPending"],[247,34,211,38],[247,36,211,41,"id"],[247,38,211,43],[247,42,211,48],[248,10,212,16],[248,14,212,20,"pendingChildIds"],[248,29,212,35],[248,30,212,36,"has"],[248,33,212,39],[248,34,212,40,"id"],[248,36,212,42],[248,37,212,43],[248,39,212,45],[249,12,213,20,"pendingChildIds"],[249,27,213,35],[249,28,213,36,"delete"],[249,34,213,42],[249,35,213,43,"id"],[249,37,213,45],[249,38,213,46],[250,12,214,20,"recyclerViewContext"],[250,31,214,39],[250,32,214,40,"layout"],[250,38,214,46],[250,39,214,47],[250,40,214,48],[251,10,215,16],[252,8,216,12],[253,6,217,8],[253,7,217,9],[254,4,218,4],[254,5,218,5],[254,7,218,7],[254,8,219,8,"handlerMethods"],[254,22,219,22],[254,24,220,8,"parentRecyclerViewContext"],[254,49,220,33],[254,51,221,8,"pendingChildIds"],[254,66,221,23],[254,68,222,8,"recyclerViewManager"],[254,87,222,27],[254,88,222,28,"isDisposed"],[254,98,222,38],[254,100,223,8,"setLayoutTreeId"],[254,115,223,23],[254,116,224,5],[254,117,224,6],[255,4,225,4],[256,0,226,0],[257,0,227,0],[258,4,228,4],[258,10,228,10,"validateItemSize"],[258,26,228,26],[258,29,228,29],[258,33,228,29,"useCallback"],[258,39,228,40],[258,40,228,40,"useCallback"],[258,51,228,40],[258,53,228,41],[258,54,228,42,"index"],[258,59,228,47],[258,61,228,49,"size"],[258,65,228,53],[258,70,228,58],[259,6,229,8],[259,10,229,12,"_a"],[259,12,229,14],[259,14,229,16,"_b"],[259,16,229,18],[259,18,229,20,"_c"],[259,20,229,22],[259,22,229,24,"_d"],[259,24,229,26],[260,6,230,8],[260,12,230,14,"layout"],[260,18,230,20],[260,21,230,23,"recyclerViewManager"],[260,40,230,42],[260,41,230,43,"getLayout"],[260,50,230,52],[260,51,230,53,"index"],[260,56,230,58],[260,57,230,59],[261,6,231,8],[261,12,231,14,"width"],[261,17,231,19],[261,20,231,22,"Math"],[261,24,231,26],[261,25,231,27,"max"],[261,28,231,30],[261,29,231,31,"Math"],[261,33,231,35],[261,34,231,36,"min"],[261,37,231,39],[261,38,231,40,"layout"],[261,44,231,46],[261,45,231,47,"width"],[261,50,231,52],[261,52,231,54],[261,53,231,55,"_a"],[261,55,231,57],[261,58,231,60,"layout"],[261,64,231,66],[261,65,231,67,"maxWidth"],[261,73,231,75],[261,79,231,81],[261,83,231,85],[261,87,231,89,"_a"],[261,89,231,91],[261,94,231,96],[261,99,231,101],[261,100,231,102],[261,103,231,105,"_a"],[261,105,231,107],[261,108,231,110,"Infinity"],[261,116,231,118],[261,117,231,119],[261,119,231,121],[261,120,231,122,"_b"],[261,122,231,124],[261,125,231,127,"layout"],[261,131,231,133],[261,132,231,134,"minWidth"],[261,140,231,142],[261,146,231,148],[261,150,231,152],[261,154,231,156,"_b"],[261,156,231,158],[261,161,231,163],[261,166,231,168],[261,167,231,169],[261,170,231,172,"_b"],[261,172,231,174],[261,175,231,177],[261,176,231,178],[261,177,231,179],[262,6,232,8],[262,12,232,14,"height"],[262,18,232,20],[262,21,232,23,"Math"],[262,25,232,27],[262,26,232,28,"max"],[262,29,232,31],[262,30,232,32,"Math"],[262,34,232,36],[262,35,232,37,"min"],[262,38,232,40],[262,39,232,41,"layout"],[262,45,232,47],[262,46,232,48,"height"],[262,52,232,54],[262,54,232,56],[262,55,232,57,"_c"],[262,57,232,59],[262,60,232,62,"layout"],[262,66,232,68],[262,67,232,69,"maxHeight"],[262,76,232,78],[262,82,232,84],[262,86,232,88],[262,90,232,92,"_c"],[262,92,232,94],[262,97,232,99],[262,102,232,104],[262,103,232,105],[262,106,232,108,"_c"],[262,108,232,110],[262,111,232,113,"Infinity"],[262,119,232,121],[262,120,232,122],[262,122,232,124],[262,123,232,125,"_d"],[262,125,232,127],[262,128,232,130,"layout"],[262,134,232,136],[262,135,232,137,"minHeight"],[262,144,232,146],[262,150,232,152],[262,154,232,156],[262,158,232,160,"_d"],[262,160,232,162],[262,165,232,167],[262,170,232,172],[262,171,232,173],[262,174,232,176,"_d"],[262,176,232,178],[262,179,232,181],[262,180,232,182],[262,181,232,183],[263,6,233,8],[263,10,233,12],[263,14,233,12,"areDimensionsNotEqual"],[263,33,233,33],[263,34,233,33,"areDimensionsNotEqual"],[263,55,233,33],[263,57,233,34,"width"],[263,62,233,39],[263,64,233,41,"size"],[263,68,233,45],[263,69,233,46,"width"],[263,74,233,51],[263,75,233,52],[263,79,234,12],[263,83,234,12,"areDimensionsNotEqual"],[263,102,234,33],[263,103,234,33,"areDimensionsNotEqual"],[263,124,234,33],[263,126,234,34,"height"],[263,132,234,40],[263,134,234,42,"size"],[263,138,234,46],[263,139,234,47,"height"],[263,145,234,53],[263,146,234,54],[263,148,234,56],[264,8,235,12],[265,8,236,12],[266,8,237,12],[267,8,238,12],[268,8,239,12],[269,8,240,12],[270,8,241,12],[271,8,242,12],[272,8,243,12],[273,8,244,12,"recyclerViewContext"],[273,27,244,31],[273,28,244,32,"layout"],[273,34,244,38],[273,35,244,39],[273,36,244,40],[274,6,245,8],[275,4,246,4],[275,5,246,5],[275,7,246,7],[275,8,246,8,"recyclerViewContext"],[275,27,246,27],[275,29,246,29,"recyclerViewManager"],[275,48,246,48],[275,49,246,49],[275,50,246,50],[276,4,247,4],[277,4,248,4],[277,10,248,10],[278,6,248,12,"refreshControl"],[278,20,248,26],[279,6,248,28,"renderHeader"],[279,18,248,40],[280,6,248,42,"renderFooter"],[280,18,248,54],[281,6,248,56,"renderEmpty"],[281,17,248,67],[282,6,248,69,"CompatScrollView"],[283,4,248,87],[283,5,248,88],[283,8,248,91],[283,12,248,91,"useSecondaryProps"],[283,35,248,108],[283,36,248,108,"useSecondaryProps"],[283,53,248,108],[283,55,248,109,"props"],[283,60,248,114],[283,61,248,115],[284,4,249,4],[284,8,249,8],[284,9,249,9,"recyclerViewManager"],[284,28,249,28],[284,29,249,29,"getIsFirstLayoutComplete"],[284,53,249,53],[284,54,249,54],[284,55,249,55],[284,59,250,8,"recyclerViewManager"],[284,78,250,27],[284,79,250,28,"getDataLength"],[284,92,250,41],[284,93,250,42],[284,94,250,43],[284,97,250,46],[284,98,250,47],[284,100,250,49],[285,6,251,8,"parentRecyclerViewContext"],[285,31,251,33],[285,36,251,38],[285,40,251,42],[285,44,251,46,"parentRecyclerViewContext"],[285,69,251,71],[285,74,251,76],[285,79,251,81],[285,80,251,82],[285,83,251,85],[285,88,251,90],[285,89,251,91],[285,92,251,94,"parentRecyclerViewContext"],[285,117,251,119],[285,118,251,120,"markChildLayoutAsPending"],[285,142,251,144],[285,143,251,145,"recyclerViewId"],[285,157,251,159],[285,158,251,160],[286,4,252,4],[287,4,253,4],[288,4,254,4],[288,10,254,10,"stickyHeaders"],[288,23,254,23],[288,26,254,26],[288,30,254,26,"useMemo"],[288,36,254,33],[288,37,254,33,"useMemo"],[288,44,254,33],[288,46,254,34],[288,52,254,40],[289,6,255,8],[289,10,255,12,"data"],[289,14,255,16],[289,18,256,12,"data"],[289,22,256,16],[289,23,256,17,"length"],[289,29,256,23],[289,32,256,26],[289,33,256,27],[289,37,257,12,"stickyHeaderIndices"],[289,56,257,31],[289,60,258,12,"stickyHeaderIndices"],[289,79,258,31],[289,80,258,32,"length"],[289,86,258,38],[289,89,258,41],[289,90,258,42],[289,92,258,44],[290,8,259,12],[290,12,259,16,"horizontal"],[290,22,259,26],[290,24,259,28],[291,10,260,16],[291,16,260,22],[291,20,260,26,"Error"],[291,25,260,31],[291,26,260,32,"ErrorMessages"],[291,46,260,45],[291,47,260,45,"ErrorMessages"],[291,60,260,45],[291,61,260,46,"stickyHeadersNotSupportedForHorizontal"],[291,99,260,84],[291,100,260,85],[292,8,261,12],[293,8,262,12],[293,28,262,20,"React"],[293,33,262,25],[293,34,262,25,"default"],[293,41,262,25],[293,42,262,26,"createElement"],[293,55,262,39],[293,56,262,40,"StickyHeaders"],[293,80,262,53],[293,81,262,53,"StickyHeaders"],[293,94,262,53],[293,96,262,55],[294,10,262,57,"stickyHeaderIndices"],[294,29,262,76],[294,31,262,78,"stickyHeaderIndices"],[294,50,262,97],[295,10,262,99,"data"],[295,14,262,103],[295,16,262,105,"data"],[295,20,262,109],[296,10,262,111,"renderItem"],[296,20,262,121],[296,22,262,123,"renderItem"],[296,32,262,133],[297,10,262,135,"scrollY"],[297,17,262,142],[297,19,262,144,"scrollY"],[297,26,262,151],[298,10,262,153,"stickyHeaderRef"],[298,25,262,168],[298,27,262,170,"stickyHeaderRef"],[298,42,262,185],[299,10,262,187,"recyclerViewManager"],[299,29,262,206],[299,31,262,208,"recyclerViewManager"],[299,50,262,227],[300,10,262,229,"extraData"],[300,19,262,238],[300,21,262,240,"extraData"],[301,8,262,250],[301,9,262,251],[301,10,262,252],[302,6,263,8],[303,6,264,8],[303,13,264,15],[303,17,264,19],[304,4,265,4],[304,5,265,5],[304,7,265,7],[304,8,266,8,"data"],[304,12,266,12],[304,14,267,8,"stickyHeaderIndices"],[304,33,267,27],[304,35,268,8,"renderItem"],[304,45,268,18],[304,47,269,8,"scrollY"],[304,54,269,15],[304,56,270,8,"horizontal"],[304,66,270,18],[304,68,271,8,"recyclerViewManager"],[304,87,271,27],[304,89,272,8,"extraData"],[304,98,272,17],[304,99,273,5],[304,100,273,6],[305,4,274,4],[306,4,275,4],[306,10,275,10,"animatedEvent"],[306,23,275,23],[306,26,275,26],[306,30,275,26,"useMemo"],[306,36,275,33],[306,37,275,33,"useMemo"],[306,44,275,33],[306,46,275,34],[306,52,275,40],[307,6,276,8],[307,10,276,12,"stickyHeaders"],[307,23,276,25],[307,25,276,27],[308,8,277,12],[308,15,277,19,"Animated"],[308,23,277,27],[308,24,277,27,"default"],[308,31,277,27],[308,32,277,28,"event"],[308,37,277,33],[308,38,277,34],[308,39,277,35],[309,10,277,37,"nativeEvent"],[309,21,277,48],[309,23,277,50],[310,12,277,52,"contentOffset"],[310,25,277,65],[310,27,277,67],[311,14,277,69,"y"],[311,15,277,70],[311,17,277,72,"scrollY"],[312,12,277,80],[313,10,277,82],[314,8,277,84],[314,9,277,85],[314,10,277,86],[314,12,277,88],[315,10,277,90,"useNativeDriver"],[315,25,277,105],[315,27,277,107],[315,31,277,111],[316,10,277,113,"listener"],[316,18,277,121],[316,20,277,123,"onScrollHandler"],[317,8,277,139],[317,9,277,140],[317,10,277,141],[318,6,278,8],[319,6,279,8],[319,13,279,15,"onScrollHandler"],[319,28,279,30],[320,4,280,4],[320,5,280,5],[320,7,280,7],[320,8,280,8,"onScrollHandler"],[320,23,280,23],[320,25,280,25,"scrollY"],[320,32,280,32],[320,34,280,34,"stickyHeaders"],[320,47,280,47],[320,48,280,48],[320,49,280,49],[321,4,281,4],[321,10,281,10,"shouldMaintainVisibleContentPosition"],[321,46,281,46],[321,49,281,49,"recyclerViewManager"],[321,68,281,68],[321,69,281,69,"shouldMaintainVisibleContentPosition"],[321,105,281,105],[321,106,281,106],[321,107,281,107],[322,4,282,4],[322,10,282,10,"maintainVisibleContentPositionInternal"],[322,48,282,48],[322,51,282,51],[322,55,282,51,"useMemo"],[322,61,282,58],[322,62,282,58,"useMemo"],[322,69,282,58],[322,71,282,59],[322,77,282,65],[323,6,283,8],[323,10,283,12,"shouldMaintainVisibleContentPosition"],[323,46,283,48],[323,48,283,50],[324,8,284,12],[324,15,284,19],[325,10,285,16],[325,13,285,19,"maintainVisibleContentPosition"],[325,43,285,49],[326,10,286,16,"minIndexForVisible"],[326,28,286,34],[326,30,286,36],[327,8,287,12],[327,9,287,13],[328,6,288,8],[329,6,289,8],[329,13,289,15,"undefined"],[329,22,289,24],[330,4,290,4],[330,5,290,5],[330,7,290,7],[330,8,290,8,"maintainVisibleContentPosition"],[330,38,290,38],[330,40,290,40,"shouldMaintainVisibleContentPosition"],[330,76,290,76],[330,77,290,77],[330,78,290,78],[331,4,291,4],[331,10,291,10,"shouldRenderFromBottom"],[331,32,291,32],[331,35,291,35,"recyclerViewManager"],[331,54,291,54],[331,55,291,55,"getDataLength"],[331,68,291,68],[331,69,291,69],[331,70,291,70],[331,73,291,73],[331,74,291,74],[331,79,292,9],[331,80,292,10,"_a"],[331,82,292,12],[331,85,292,15,"maintainVisibleContentPosition"],[331,115,292,45],[331,120,292,50],[331,124,292,54],[331,128,292,58,"maintainVisibleContentPosition"],[331,158,292,88],[331,163,292,93],[331,168,292,98],[331,169,292,99],[331,172,292,102],[331,177,292,107],[331,178,292,108],[331,181,292,111,"maintainVisibleContentPosition"],[331,211,292,141],[331,212,292,142,"startRenderingFromBottom"],[331,236,292,166],[331,242,292,172],[331,246,292,176],[331,250,292,180,"_a"],[331,252,292,182],[331,257,292,187],[331,262,292,192],[331,263,292,193],[331,266,292,196,"_a"],[331,268,292,198],[331,271,292,201],[331,276,292,206],[331,277,292,207],[332,4,293,4],[333,4,294,4],[333,10,294,10,"viewToMeasureBoundedSize"],[333,34,294,34],[333,37,294,37],[333,41,294,37,"useMemo"],[333,47,294,44],[333,48,294,44,"useMemo"],[333,55,294,44],[333,57,294,45],[333,63,294,51],[334,6,295,8],[334,26,295,16,"React"],[334,31,295,21],[334,32,295,21,"default"],[334,39,295,21],[334,40,295,22,"createElement"],[334,53,295,35],[334,54,295,36,"CompatView"],[334,75,295,46],[334,76,295,46,"CompatView"],[334,86,295,46],[334,88,295,48],[335,8,295,50,"style"],[335,13,295,55],[335,15,295,57],[336,10,296,16,"height"],[336,16,296,22],[336,18,296,24,"horizontal"],[336,28,296,34],[336,31,296,37,"undefined"],[336,40,296,46],[336,43,296,49],[336,44,296,50],[337,10,297,16,"width"],[337,15,297,21],[337,17,297,23,"horizontal"],[337,27,297,33],[337,30,297,36],[337,31,297,37],[337,34,297,40,"undefined"],[338,8,298,12],[338,9,298,13],[339,8,298,15,"ref"],[339,11,298,18],[339,13,298,20,"firstChildViewRef"],[340,6,298,38],[340,7,298,39],[340,8,298,40],[341,4,299,4],[341,5,299,5],[341,7,299,7],[341,8,299,8,"horizontal"],[341,18,299,18],[341,19,299,19],[341,20,299,20],[342,4,300,4],[342,10,300,10,"scrollAnchor"],[342,22,300,22],[342,25,300,25],[342,29,300,25,"useMemo"],[342,35,300,32],[342,36,300,32,"useMemo"],[342,43,300,32],[342,45,300,33],[342,51,300,39],[343,6,301,8],[343,10,301,12,"shouldMaintainVisibleContentPosition"],[343,46,301,48],[343,48,301,50],[344,8,302,12],[344,28,302,20,"React"],[344,33,302,25],[344,34,302,25,"default"],[344,41,302,25],[344,42,302,26,"createElement"],[344,55,302,39],[344,56,302,40,"ScrollAnchor"],[344,79,302,52],[344,80,302,52,"ScrollAnchor"],[344,92,302,52],[344,94,302,54],[345,10,302,56,"horizontal"],[345,20,302,66],[345,22,302,68,"Boolean"],[345,29,302,75],[345,30,302,76,"horizontal"],[345,40,302,86],[345,41,302,87],[346,10,302,89,"scrollAnchorRef"],[346,25,302,104],[346,27,302,106,"scrollAnchorRef"],[347,8,302,122],[347,9,302,123],[347,10,302,124],[348,6,303,8],[349,6,304,8],[349,13,304,15],[349,17,304,19],[350,4,305,4],[350,5,305,5],[350,7,305,7],[350,8,305,8,"horizontal"],[350,18,305,18],[350,20,305,20,"shouldMaintainVisibleContentPosition"],[350,56,305,56],[350,57,305,57],[350,58,305,58],[351,4,306,4],[352,4,307,4],[353,4,308,4],[353,24,308,12,"React"],[353,29,308,17],[353,30,308,17,"default"],[353,37,308,17],[353,38,308,18,"createElement"],[353,51,308,31],[353,52,308,32,"RecyclerViewContextProvider"],[353,80,308,59],[353,81,308,59,"RecyclerViewContextProvider"],[353,108,308,59],[353,110,308,61],[354,6,308,63,"value"],[354,11,308,68],[354,13,308,70,"recyclerViewContext"],[355,4,308,90],[355,5,308,91],[355,20,309,8,"React"],[355,25,309,13],[355,26,309,13,"default"],[355,33,309,13],[355,34,309,14,"createElement"],[355,47,309,27],[355,48,309,28,"CompatView"],[355,69,309,38],[355,70,309,38,"CompatView"],[355,80,309,38],[355,82,309,40],[356,6,309,42,"style"],[356,11,309,47],[356,13,309,49],[356,14,310,16],[357,8,311,20,"flex"],[357,12,311,24],[357,14,311,26,"horizontal"],[357,24,311,36],[357,27,311,39,"undefined"],[357,36,311,48],[357,39,311,51],[357,40,311,52],[358,8,312,20,"overflow"],[358,16,312,28],[358,18,312,30],[359,6,313,16],[359,7,313,17],[359,9,314,16,"style"],[359,14,314,21],[359,15,315,13],[360,6,315,15,"ref"],[360,9,315,18],[360,11,315,20,"internalViewRef"],[360,26,315,35],[361,6,315,37,"collapsable"],[361,17,315,48],[361,19,315,50],[361,24,315,55],[362,6,315,57,"onLayout"],[362,14,315,65],[362,16,315,68,"event"],[362,21,315,73],[362,25,315,78],[363,8,316,16],[363,12,316,20,"_a"],[363,14,316,22],[363,16,316,24,"_b"],[363,18,316,26],[363,20,316,28,"_c"],[363,22,316,30],[363,24,316,32,"_d"],[363,26,316,34],[364,8,317,16],[364,12,317,20],[364,16,317,20,"areDimensionsNotEqual"],[364,35,317,41],[364,36,317,41,"areDimensionsNotEqual"],[364,57,317,41],[364,59,317,42,"event"],[364,64,317,47],[364,65,317,48,"nativeEvent"],[364,76,317,59],[364,77,317,60,"layout"],[364,83,317,66],[364,84,317,67,"width"],[364,89,317,72],[364,91,317,74],[364,92,317,75,"_b"],[364,94,317,77],[364,97,317,80],[364,98,317,81,"_a"],[364,100,317,83],[364,103,317,86,"containerViewSizeRef"],[364,123,317,106],[364,124,317,107,"current"],[364,131,317,114],[364,137,317,120],[364,141,317,124],[364,145,317,128,"_a"],[364,147,317,130],[364,152,317,135],[364,157,317,140],[364,158,317,141],[364,161,317,144],[364,166,317,149],[364,167,317,150],[364,170,317,153,"_a"],[364,172,317,155],[364,173,317,156,"width"],[364,178,317,161],[364,184,317,167],[364,188,317,171],[364,192,317,175,"_b"],[364,194,317,177],[364,199,317,182],[364,204,317,187],[364,205,317,188],[364,208,317,191,"_b"],[364,210,317,193],[364,213,317,196],[364,214,317,197],[364,215,317,198],[364,219,318,20],[364,223,318,20,"areDimensionsNotEqual"],[364,242,318,41],[364,243,318,41,"areDimensionsNotEqual"],[364,264,318,41],[364,266,318,42,"event"],[364,271,318,47],[364,272,318,48,"nativeEvent"],[364,283,318,59],[364,284,318,60,"layout"],[364,290,318,66],[364,291,318,67,"height"],[364,297,318,73],[364,299,318,75],[364,300,318,76,"_d"],[364,302,318,78],[364,305,318,81],[364,306,318,82,"_c"],[364,308,318,84],[364,311,318,87,"containerViewSizeRef"],[364,331,318,107],[364,332,318,108,"current"],[364,339,318,115],[364,345,318,121],[364,349,318,125],[364,353,318,129,"_c"],[364,355,318,131],[364,360,318,136],[364,365,318,141],[364,366,318,142],[364,369,318,145],[364,374,318,150],[364,375,318,151],[364,378,318,154,"_c"],[364,380,318,156],[364,381,318,157,"height"],[364,387,318,163],[364,393,318,169],[364,397,318,173],[364,401,318,177,"_d"],[364,403,318,179],[364,408,318,184],[364,413,318,189],[364,414,318,190],[364,417,318,193,"_d"],[364,419,318,195],[364,422,318,198],[364,423,318,199],[364,424,318,200],[364,426,318,202],[365,10,319,20],[366,10,320,20],[367,10,321,20],[368,10,322,20],[369,10,323,20],[370,10,324,20,"recyclerViewContext"],[370,29,324,39],[370,30,324,40,"layout"],[370,36,324,46],[370,37,324,47],[370,38,324,48],[371,8,325,16],[372,6,326,12],[373,4,326,14],[373,5,326,15],[373,20,327,12,"React"],[373,25,327,17],[373,26,327,17,"default"],[373,33,327,17],[373,34,327,18,"createElement"],[373,47,327,31],[373,48,327,32,"CompatScrollView"],[373,64,327,48],[373,66,327,50],[374,6,327,52],[374,9,327,55,"rest"],[374,13,327,59],[375,6,327,61,"horizontal"],[375,16,327,71],[375,18,327,73,"horizontal"],[375,28,327,83],[376,6,327,85,"ref"],[376,9,327,88],[376,11,327,90,"scrollViewRef"],[376,24,327,103],[377,6,327,105,"onScroll"],[377,14,327,113],[377,16,327,115,"animatedEvent"],[377,29,327,128],[378,6,327,130,"maintainVisibleContentPosition"],[378,36,327,160],[378,38,327,162,"maintainVisibleContentPositionInternal"],[378,76,327,200],[379,6,327,202,"refreshControl"],[379,20,327,216],[379,22,327,218,"refreshControl"],[379,36,327,232],[380,6,327,234],[380,9,327,237,"overrideProps"],[381,4,327,251],[381,5,327,252],[381,7,328,16,"scrollAnchor"],[381,19,328,28],[381,21,329,16,"isHorizontalRTL"],[381,36,329,31],[381,40,329,35,"viewToMeasureBoundedSize"],[381,64,329,59],[381,66,330,16,"renderHeader"],[381,78,330,28],[381,80,331,16],[381,81,331,17,"isHorizontalRTL"],[381,96,331,32],[381,100,331,36,"viewToMeasureBoundedSize"],[381,124,331,60],[381,139,332,16,"React"],[381,144,332,21],[381,145,332,21,"default"],[381,152,332,21],[381,153,332,22,"createElement"],[381,166,332,35],[381,167,332,36,"ViewHolderCollection"],[381,188,332,56],[381,189,332,56,"ViewHolderCollection"],[381,209,332,56],[381,211,332,58],[382,6,332,60,"viewHolderCollectionRef"],[382,29,332,83],[382,31,332,85,"viewHolderCollectionRef"],[382,54,332,108],[383,6,332,110,"data"],[383,10,332,114],[383,12,332,116,"data"],[383,16,332,120],[384,6,332,122,"horizontal"],[384,16,332,132],[384,18,332,134,"horizontal"],[384,28,332,144],[385,6,332,146,"renderStack"],[385,17,332,157],[385,19,332,159,"recyclerViewManager"],[385,38,332,178],[385,39,332,179,"getRenderStack"],[385,53,332,193],[385,54,332,194],[385,55,332,195],[386,6,332,197,"getLayout"],[386,15,332,206],[386,17,332,209,"index"],[386,22,332,214],[386,26,332,219,"recyclerViewManager"],[386,45,332,238],[386,46,332,239,"getLayout"],[386,55,332,248],[386,56,332,249,"index"],[386,61,332,254],[386,62,332,255],[387,6,332,257,"getAdjustmentMargin"],[387,25,332,276],[387,27,332,278,"getAdjustmentMargin"],[387,28,332,278],[387,33,332,284],[388,8,333,24],[388,12,333,28],[388,13,333,29,"shouldRenderFromBottom"],[388,35,333,51],[388,39,333,55],[388,40,333,56,"recyclerViewManager"],[388,59,333,75],[388,60,333,76,"hasLayout"],[388,69,333,85],[388,70,333,86],[388,71,333,87],[388,73,333,89],[389,10,334,28],[389,17,334,35],[389,18,334,36],[390,8,335,24],[391,8,336,24],[391,14,336,30,"windowSize"],[391,24,336,40],[391,27,336,43,"horizontal"],[391,37,336,53],[391,40,337,30,"recyclerViewManager"],[391,59,337,49],[391,60,337,50,"getWindowSize"],[391,73,337,63],[391,74,337,64],[391,75,337,65],[391,76,337,66,"width"],[391,81,337,71],[391,84,338,30,"recyclerViewManager"],[391,103,338,49],[391,104,338,50,"getWindowSize"],[391,117,338,63],[391,118,338,64],[391,119,338,65],[391,120,338,66,"height"],[391,126,338,72],[392,8,339,24],[392,14,339,30,"childContainerSize"],[392,32,339,48],[392,35,339,51,"horizontal"],[392,45,339,61],[392,48,340,30,"recyclerViewManager"],[392,67,340,49],[392,68,340,50,"getChildContainerDimensions"],[392,95,340,77],[392,96,340,78],[392,97,340,79],[392,98,340,80,"width"],[392,103,340,85],[392,106,341,30,"recyclerViewManager"],[392,125,341,49],[392,126,341,50,"getChildContainerDimensions"],[392,153,341,77],[392,154,341,78],[392,155,341,79],[392,156,341,80,"height"],[392,162,341,86],[393,8,342,24],[393,15,342,31,"Math"],[393,19,342,35],[393,20,342,36,"max"],[393,23,342,39],[393,24,342,40],[393,25,342,41],[393,27,342,43,"windowSize"],[393,37,342,53],[393,40,343,28,"childContainerSize"],[393,58,343,46],[393,61,344,28,"recyclerViewManager"],[393,80,344,47],[393,81,344,48,"firstItemOffset"],[393,96,344,63],[393,97,344,64],[394,6,345,20],[394,7,345,21],[395,6,345,23,"refHolder"],[395,15,345,32],[395,17,345,34,"refHolder"],[395,26,345,43],[396,6,345,45,"onSizeChanged"],[396,19,345,58],[396,21,345,60,"validateItemSize"],[396,37,345,76],[397,6,345,78,"renderItem"],[397,16,345,88],[397,18,345,90,"renderItem"],[397,28,345,100],[398,6,345,102,"extraData"],[398,15,345,111],[398,17,345,113,"extraData"],[398,26,345,122],[399,6,345,124,"onCommitLayoutEffect"],[399,26,345,144],[399,28,345,146,"onCommitLayoutEffect"],[399,29,345,146],[399,34,345,152],[400,8,346,24,"applyInitialScrollIndex"],[400,31,346,47],[400,32,346,48],[400,33,346,49],[401,8,347,24,"parentRecyclerViewContext"],[401,33,347,49],[401,38,347,54],[401,42,347,58],[401,46,347,62,"parentRecyclerViewContext"],[401,71,347,87],[401,76,347,92],[401,81,347,97],[401,82,347,98],[401,85,347,101],[401,90,347,106],[401,91,347,107],[401,94,347,110,"parentRecyclerViewContext"],[401,119,347,135],[401,120,347,136,"unmarkChildLayoutAsPending"],[401,146,347,162],[401,147,347,163,"recyclerViewId"],[401,161,347,177],[401,162,347,178],[402,8,348,24,"onCommitLayoutEffect"],[402,28,348,44],[402,33,348,49],[402,37,348,53],[402,41,348,57,"onCommitLayoutEffect"],[402,61,348,77],[402,66,348,82],[402,71,348,87],[402,72,348,88],[402,75,348,91],[402,80,348,96],[402,81,348,97],[402,84,348,100,"onCommitLayoutEffect"],[402,104,348,120],[402,105,348,121],[402,106,348,122],[403,6,349,20],[403,7,349,21],[404,6,349,23,"onCommitEffect"],[404,20,349,37],[404,22,349,39,"onCommitEffect"],[404,23,349,39],[404,28,349,45],[405,8,350,24,"renderTimeTracker"],[405,25,350,41],[405,26,350,42,"markRenderComplete"],[405,44,350,60],[405,45,350,61],[405,46,350,62],[406,8,351,24,"recyclerViewManager"],[406,27,351,43],[406,28,351,44,"updateAverageRenderTime"],[406,51,351,67],[406,52,351,68,"renderTimeTracker"],[406,69,351,85],[406,70,351,86,"getAverageRenderTime"],[406,90,351,106],[406,91,351,107],[406,92,351,108],[406,93,351,109],[407,8,352,24,"applyInitialScrollIndex"],[407,31,352,47],[407,32,352,48],[407,33,352,49],[408,8,353,24,"checkBounds"],[408,19,353,35],[408,20,353,36],[408,21,353,37],[409,8,354,24,"recyclerViewManager"],[409,27,354,43],[409,28,354,44,"computeItemViewability"],[409,50,354,66],[409,51,354,67],[409,52,354,68],[410,8,355,24,"recyclerViewManager"],[410,27,355,43],[410,28,355,44,"animationOptimizationsEnabled"],[410,57,355,73],[410,60,355,76],[410,65,355,81],[411,6,356,20],[411,7,356,21],[412,6,356,23,"CellRendererComponent"],[412,27,356,44],[412,29,356,46,"CellRendererComponent"],[412,50,356,67],[413,6,356,69,"ItemSeparatorComponent"],[413,28,356,91],[413,30,356,93,"ItemSeparatorComponent"],[413,52,356,115],[414,6,356,117,"getChildContainerLayout"],[414,29,356,140],[414,31,356,142,"getChildContainerLayout"],[414,32,356,142],[414,37,356,148,"recyclerViewManager"],[414,56,356,167],[414,57,356,168,"hasLayout"],[414,66,356,177],[414,67,356,178],[414,68,356,179],[414,71,357,26,"recyclerViewManager"],[414,90,357,45],[414,91,357,46,"getChildContainerDimensions"],[414,118,357,73],[414,119,357,74],[414,120,357,75],[414,123,358,26,"undefined"],[415,4,358,36],[415,5,358,37],[415,6,358,38],[415,8,359,16,"renderEmpty"],[415,19,359,27],[415,21,360,16,"renderFooter"],[415,33,360,28],[415,34,360,29],[415,36,361,12,"stickyHeaders"],[415,49,361,25],[415,50,361,26],[415,51,361,27],[416,2,362,0],[416,3,362,1],[417,2,363,0],[418,2,364,0,"RecyclerViewComponent"],[418,23,364,21],[418,24,364,22,"displayName"],[418,35,364,33],[418,38,364,36],[418,49,364,47],[419,2,365,0],[420,2,366,0],[420,8,366,6,"RecyclerView"],[420,20,366,18],[420,36,366,21,"React"],[420,41,366,26],[420,42,366,26,"default"],[420,49,366,26],[420,50,366,27,"memo"],[420,54,366,31],[420,68,366,32],[420,72,366,32,"forwardRef"],[420,78,366,42],[420,79,366,42,"forwardRef"],[420,89,366,42],[420,91,366,43,"RecyclerViewComponent"],[420,112,366,64],[420,113,366,65],[420,114,366,66],[421,0,366,67],[421,3]],"functionMap":{"names":["<global>","RecyclerViewComponent","useState$argument_0","useMemo$argument_0","useLayoutEffect$argument_0","Array.from$argument_1","setRenderId$argument_0","onScrollHandler","velocityTracker.computeVelocity$argument_3","layout","setLayoutTreeId$argument_0","getRef","getParentRef","getParentScrollViewRef","getScrollViewRef","markChildLayoutAsPending","unmarkChildLayoutAsPending","validateItemSize","React.createElement$argument_1.onLayout","React.createElement$argument_1.getLayout","React.createElement$argument_1.getAdjustmentMargin","React.createElement$argument_1.onCommitLayoutEffect","React.createElement$argument_1.onCommitEffect","React.createElement$argument_1.getChildContainerLayout"],"mappings":"AAA;8BC0B;yCCI,6BD;8BEiB,eF;oBGe;KHuB;oBGM;iDCK;SDgB;wBEQ,kBF;KHc;wCMI;8HCY;4BFa,kBE;SDE;KNS;wCEW;oBME;gCCC,kBD;aNC;oBQC;aRK;0BSC;aTG;oCUC;aVG;8BWC;aXE;sCYC;aZE;wCaC;abK;KFE;yCgBU;KhBkB;kCEQ;KFW;kCEU;KFK;2DEE;KFQ;6CEI;KFK;iCEC;KFK;mEiBU;ajBW;gNkBM,+ClB,uBmB;qBnBa,6HoB;qBpBI,kBqB;qBrBO,yHsB;mCtBE;CDI"},"hasCjsExports":false},"type":"js/module"}]}