{"dependencies":[{"name":"./interlace","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":36},"end":{"line":3,"column":43,"index":58}}],"key":"N/IHRJiIVu/2RUMe3Em0ytXfNgI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  let interlaceUtils = require(_dependencyMap[0], \"./interlace\");\n  let pixelBppMapper = [\n  // 0 - dummy entry\n  function () {},\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos === data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    let pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = 0xff;\n  },\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 1 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    let pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = data[rawPos + 1];\n  },\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 2 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = 0xff;\n  },\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 3 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = data[rawPos + 3];\n  }];\n  let pixelBppCustomMapper = [\n  // 0 - dummy entry\n  function () {},\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function (pxData, pixelData, pxPos, maxBit) {\n    let pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = maxBit;\n  },\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function (pxData, pixelData, pxPos) {\n    let pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = pixelData[1];\n  },\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function (pxData, pixelData, pxPos, maxBit) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = maxBit;\n  },\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function (pxData, pixelData, pxPos) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = pixelData[3];\n  }];\n  function bitRetriever(data, depth) {\n    let leftOver = [];\n    let i = 0;\n    function split() {\n      if (i === data.length) {\n        throw new Error(\"Ran out of data\");\n      }\n      let byte = data[i];\n      i++;\n      let byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n      switch (depth) {\n        default:\n          throw new Error(\"unrecognised depth\");\n        case 16:\n          byte2 = data[i];\n          i++;\n          leftOver.push((byte << 8) + byte2);\n          break;\n        case 4:\n          byte2 = byte & 0x0f;\n          byte1 = byte >> 4;\n          leftOver.push(byte1, byte2);\n          break;\n        case 2:\n          byte4 = byte & 3;\n          byte3 = byte >> 2 & 3;\n          byte2 = byte >> 4 & 3;\n          byte1 = byte >> 6 & 3;\n          leftOver.push(byte1, byte2, byte3, byte4);\n          break;\n        case 1:\n          byte8 = byte & 1;\n          byte7 = byte >> 1 & 1;\n          byte6 = byte >> 2 & 1;\n          byte5 = byte >> 3 & 1;\n          byte4 = byte >> 4 & 1;\n          byte3 = byte >> 5 & 1;\n          byte2 = byte >> 6 & 1;\n          byte1 = byte >> 7 & 1;\n          leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n          break;\n      }\n    }\n    return {\n      get: function (count) {\n        while (leftOver.length < count) {\n          split();\n        }\n        let returner = leftOver.slice(0, count);\n        leftOver = leftOver.slice(count);\n        return returner;\n      },\n      resetAfterLine: function () {\n        leftOver.length = 0;\n      },\n      end: function () {\n        if (i !== data.length) {\n          throw new Error(\"extra data found\");\n        }\n      }\n    };\n  }\n  function mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {\n    // eslint-disable-line max-params\n    let imageWidth = image.width;\n    let imageHeight = image.height;\n    let imagePass = image.index;\n    for (let y = 0; y < imageHeight; y++) {\n      for (let x = 0; x < imageWidth; x++) {\n        let pxPos = getPxPos(x, y, imagePass);\n        pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\n        rawPos += bpp; //eslint-disable-line no-param-reassign\n      }\n    }\n    return rawPos;\n  }\n  function mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {\n    // eslint-disable-line max-params\n    let imageWidth = image.width;\n    let imageHeight = image.height;\n    let imagePass = image.index;\n    for (let y = 0; y < imageHeight; y++) {\n      for (let x = 0; x < imageWidth; x++) {\n        let pixelData = bits.get(bpp);\n        let pxPos = getPxPos(x, y, imagePass);\n        pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\n      }\n      bits.resetAfterLine();\n    }\n  }\n  exports.dataToBitMap = function (data, bitmapInfo) {\n    let width = bitmapInfo.width;\n    let height = bitmapInfo.height;\n    let depth = bitmapInfo.depth;\n    let bpp = bitmapInfo.bpp;\n    let interlace = bitmapInfo.interlace;\n    let bits;\n    if (depth !== 8) {\n      bits = bitRetriever(data, depth);\n    }\n    let pxData;\n    if (depth <= 8) {\n      pxData = Buffer.alloc(width * height * 4);\n    } else {\n      pxData = new Uint16Array(width * height * 4);\n    }\n    let maxBit = Math.pow(2, depth) - 1;\n    let rawPos = 0;\n    let images;\n    let getPxPos;\n    if (interlace) {\n      images = interlaceUtils.getImagePasses(width, height);\n      getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n    } else {\n      let nonInterlacedPxPos = 0;\n      getPxPos = function () {\n        let returner = nonInterlacedPxPos;\n        nonInterlacedPxPos += 4;\n        return returner;\n      };\n      images = [{\n        width: width,\n        height: height\n      }];\n    }\n    for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {\n      if (depth === 8) {\n        rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\n      } else {\n        mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\n      }\n    }\n    if (depth === 8) {\n      if (rawPos !== data.length) {\n        throw new Error(\"extra data found\");\n      }\n    } else {\n      bits.end();\n    }\n    return pxData;\n  };\n});","lineCount":232,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"interlaceUtils"],[4,20,3,18],[4,23,3,21,"require"],[4,30,3,28],[4,31,3,28,"_dependencyMap"],[4,45,3,28],[4,63,3,42],[4,64,3,43],[5,2,5,0],[5,6,5,4,"pixelBppMapper"],[5,20,5,18],[5,23,5,21],[6,2,6,2],[7,2,7,2],[7,14,7,14],[7,15,7,15],[7,16,7,16],[8,2,9,2],[9,2,10,2],[10,2,11,2],[10,12,11,12,"pxData"],[10,18,11,18],[10,20,11,20,"data"],[10,24,11,24],[10,26,11,26,"pxPos"],[10,31,11,31],[10,33,11,33,"rawPos"],[10,39,11,39],[10,41,11,41],[11,4,12,4],[11,8,12,8,"rawPos"],[11,14,12,14],[11,19,12,19,"data"],[11,23,12,23],[11,24,12,24,"length"],[11,30,12,30],[11,32,12,32],[12,6,13,6],[12,12,13,12],[12,16,13,16,"Error"],[12,21,13,21],[12,22,13,22],[12,39,13,39],[12,40,13,40],[13,4,14,4],[14,4,16,4],[14,8,16,8,"pixel"],[14,13,16,13],[14,16,16,16,"data"],[14,20,16,20],[14,21,16,21,"rawPos"],[14,27,16,27],[14,28,16,28],[15,4,17,4,"pxData"],[15,10,17,10],[15,11,17,11,"pxPos"],[15,16,17,16],[15,17,17,17],[15,20,17,20,"pixel"],[15,25,17,25],[16,4,18,4,"pxData"],[16,10,18,10],[16,11,18,11,"pxPos"],[16,16,18,16],[16,19,18,19],[16,20,18,20],[16,21,18,21],[16,24,18,24,"pixel"],[16,29,18,29],[17,4,19,4,"pxData"],[17,10,19,10],[17,11,19,11,"pxPos"],[17,16,19,16],[17,19,19,19],[17,20,19,20],[17,21,19,21],[17,24,19,24,"pixel"],[17,29,19,29],[18,4,20,4,"pxData"],[18,10,20,10],[18,11,20,11,"pxPos"],[18,16,20,16],[18,19,20,19],[18,20,20,20],[18,21,20,21],[18,24,20,24],[18,28,20,28],[19,2,21,2],[19,3,21,3],[20,2,23,2],[21,2,24,2],[22,2,25,2],[22,12,25,12,"pxData"],[22,18,25,18],[22,20,25,20,"data"],[22,24,25,24],[22,26,25,26,"pxPos"],[22,31,25,31],[22,33,25,33,"rawPos"],[22,39,25,39],[22,41,25,41],[23,4,26,4],[23,8,26,8,"rawPos"],[23,14,26,14],[23,17,26,17],[23,18,26,18],[23,22,26,22,"data"],[23,26,26,26],[23,27,26,27,"length"],[23,33,26,33],[23,35,26,35],[24,6,27,6],[24,12,27,12],[24,16,27,16,"Error"],[24,21,27,21],[24,22,27,22],[24,39,27,39],[24,40,27,40],[25,4,28,4],[26,4,30,4],[26,8,30,8,"pixel"],[26,13,30,13],[26,16,30,16,"data"],[26,20,30,20],[26,21,30,21,"rawPos"],[26,27,30,27],[26,28,30,28],[27,4,31,4,"pxData"],[27,10,31,10],[27,11,31,11,"pxPos"],[27,16,31,16],[27,17,31,17],[27,20,31,20,"pixel"],[27,25,31,25],[28,4,32,4,"pxData"],[28,10,32,10],[28,11,32,11,"pxPos"],[28,16,32,16],[28,19,32,19],[28,20,32,20],[28,21,32,21],[28,24,32,24,"pixel"],[28,29,32,29],[29,4,33,4,"pxData"],[29,10,33,10],[29,11,33,11,"pxPos"],[29,16,33,16],[29,19,33,19],[29,20,33,20],[29,21,33,21],[29,24,33,24,"pixel"],[29,29,33,29],[30,4,34,4,"pxData"],[30,10,34,10],[30,11,34,11,"pxPos"],[30,16,34,16],[30,19,34,19],[30,20,34,20],[30,21,34,21],[30,24,34,24,"data"],[30,28,34,28],[30,29,34,29,"rawPos"],[30,35,34,35],[30,38,34,38],[30,39,34,39],[30,40,34,40],[31,2,35,2],[31,3,35,3],[32,2,37,2],[33,2,38,2],[34,2,39,2],[34,12,39,12,"pxData"],[34,18,39,18],[34,20,39,20,"data"],[34,24,39,24],[34,26,39,26,"pxPos"],[34,31,39,31],[34,33,39,33,"rawPos"],[34,39,39,39],[34,41,39,41],[35,4,40,4],[35,8,40,8,"rawPos"],[35,14,40,14],[35,17,40,17],[35,18,40,18],[35,22,40,22,"data"],[35,26,40,26],[35,27,40,27,"length"],[35,33,40,33],[35,35,40,35],[36,6,41,6],[36,12,41,12],[36,16,41,16,"Error"],[36,21,41,21],[36,22,41,22],[36,39,41,39],[36,40,41,40],[37,4,42,4],[38,4,44,4,"pxData"],[38,10,44,10],[38,11,44,11,"pxPos"],[38,16,44,16],[38,17,44,17],[38,20,44,20,"data"],[38,24,44,24],[38,25,44,25,"rawPos"],[38,31,44,31],[38,32,44,32],[39,4,45,4,"pxData"],[39,10,45,10],[39,11,45,11,"pxPos"],[39,16,45,16],[39,19,45,19],[39,20,45,20],[39,21,45,21],[39,24,45,24,"data"],[39,28,45,28],[39,29,45,29,"rawPos"],[39,35,45,35],[39,38,45,38],[39,39,45,39],[39,40,45,40],[40,4,46,4,"pxData"],[40,10,46,10],[40,11,46,11,"pxPos"],[40,16,46,16],[40,19,46,19],[40,20,46,20],[40,21,46,21],[40,24,46,24,"data"],[40,28,46,28],[40,29,46,29,"rawPos"],[40,35,46,35],[40,38,46,38],[40,39,46,39],[40,40,46,40],[41,4,47,4,"pxData"],[41,10,47,10],[41,11,47,11,"pxPos"],[41,16,47,16],[41,19,47,19],[41,20,47,20],[41,21,47,21],[41,24,47,24],[41,28,47,28],[42,2,48,2],[42,3,48,3],[43,2,50,2],[44,2,51,2],[45,2,52,2],[45,12,52,12,"pxData"],[45,18,52,18],[45,20,52,20,"data"],[45,24,52,24],[45,26,52,26,"pxPos"],[45,31,52,31],[45,33,52,33,"rawPos"],[45,39,52,39],[45,41,52,41],[46,4,53,4],[46,8,53,8,"rawPos"],[46,14,53,14],[46,17,53,17],[46,18,53,18],[46,22,53,22,"data"],[46,26,53,26],[46,27,53,27,"length"],[46,33,53,33],[46,35,53,35],[47,6,54,6],[47,12,54,12],[47,16,54,16,"Error"],[47,21,54,21],[47,22,54,22],[47,39,54,39],[47,40,54,40],[48,4,55,4],[49,4,57,4,"pxData"],[49,10,57,10],[49,11,57,11,"pxPos"],[49,16,57,16],[49,17,57,17],[49,20,57,20,"data"],[49,24,57,24],[49,25,57,25,"rawPos"],[49,31,57,31],[49,32,57,32],[50,4,58,4,"pxData"],[50,10,58,10],[50,11,58,11,"pxPos"],[50,16,58,16],[50,19,58,19],[50,20,58,20],[50,21,58,21],[50,24,58,24,"data"],[50,28,58,28],[50,29,58,29,"rawPos"],[50,35,58,35],[50,38,58,38],[50,39,58,39],[50,40,58,40],[51,4,59,4,"pxData"],[51,10,59,10],[51,11,59,11,"pxPos"],[51,16,59,16],[51,19,59,19],[51,20,59,20],[51,21,59,21],[51,24,59,24,"data"],[51,28,59,28],[51,29,59,29,"rawPos"],[51,35,59,35],[51,38,59,38],[51,39,59,39],[51,40,59,40],[52,4,60,4,"pxData"],[52,10,60,10],[52,11,60,11,"pxPos"],[52,16,60,16],[52,19,60,19],[52,20,60,20],[52,21,60,21],[52,24,60,24,"data"],[52,28,60,28],[52,29,60,29,"rawPos"],[52,35,60,35],[52,38,60,38],[52,39,60,39],[52,40,60,40],[53,2,61,2],[53,3,61,3],[53,4,62,1],[54,2,64,0],[54,6,64,4,"pixelBppCustomMapper"],[54,26,64,24],[54,29,64,27],[55,2,65,2],[56,2,66,2],[56,14,66,14],[56,15,66,15],[56,16,66,16],[57,2,68,2],[58,2,69,2],[59,2,70,2],[59,12,70,12,"pxData"],[59,18,70,18],[59,20,70,20,"pixelData"],[59,29,70,29],[59,31,70,31,"pxPos"],[59,36,70,36],[59,38,70,38,"maxBit"],[59,44,70,44],[59,46,70,46],[60,4,71,4],[60,8,71,8,"pixel"],[60,13,71,13],[60,16,71,16,"pixelData"],[60,25,71,25],[60,26,71,26],[60,27,71,27],[60,28,71,28],[61,4,72,4,"pxData"],[61,10,72,10],[61,11,72,11,"pxPos"],[61,16,72,16],[61,17,72,17],[61,20,72,20,"pixel"],[61,25,72,25],[62,4,73,4,"pxData"],[62,10,73,10],[62,11,73,11,"pxPos"],[62,16,73,16],[62,19,73,19],[62,20,73,20],[62,21,73,21],[62,24,73,24,"pixel"],[62,29,73,29],[63,4,74,4,"pxData"],[63,10,74,10],[63,11,74,11,"pxPos"],[63,16,74,16],[63,19,74,19],[63,20,74,20],[63,21,74,21],[63,24,74,24,"pixel"],[63,29,74,29],[64,4,75,4,"pxData"],[64,10,75,10],[64,11,75,11,"pxPos"],[64,16,75,16],[64,19,75,19],[64,20,75,20],[64,21,75,21],[64,24,75,24,"maxBit"],[64,30,75,30],[65,2,76,2],[65,3,76,3],[66,2,78,2],[67,2,79,2],[68,2,80,2],[68,12,80,12,"pxData"],[68,18,80,18],[68,20,80,20,"pixelData"],[68,29,80,29],[68,31,80,31,"pxPos"],[68,36,80,36],[68,38,80,38],[69,4,81,4],[69,8,81,8,"pixel"],[69,13,81,13],[69,16,81,16,"pixelData"],[69,25,81,25],[69,26,81,26],[69,27,81,27],[69,28,81,28],[70,4,82,4,"pxData"],[70,10,82,10],[70,11,82,11,"pxPos"],[70,16,82,16],[70,17,82,17],[70,20,82,20,"pixel"],[70,25,82,25],[71,4,83,4,"pxData"],[71,10,83,10],[71,11,83,11,"pxPos"],[71,16,83,16],[71,19,83,19],[71,20,83,20],[71,21,83,21],[71,24,83,24,"pixel"],[71,29,83,29],[72,4,84,4,"pxData"],[72,10,84,10],[72,11,84,11,"pxPos"],[72,16,84,16],[72,19,84,19],[72,20,84,20],[72,21,84,21],[72,24,84,24,"pixel"],[72,29,84,29],[73,4,85,4,"pxData"],[73,10,85,10],[73,11,85,11,"pxPos"],[73,16,85,16],[73,19,85,19],[73,20,85,20],[73,21,85,21],[73,24,85,24,"pixelData"],[73,33,85,33],[73,34,85,34],[73,35,85,35],[73,36,85,36],[74,2,86,2],[74,3,86,3],[75,2,88,2],[76,2,89,2],[77,2,90,2],[77,12,90,12,"pxData"],[77,18,90,18],[77,20,90,20,"pixelData"],[77,29,90,29],[77,31,90,31,"pxPos"],[77,36,90,36],[77,38,90,38,"maxBit"],[77,44,90,44],[77,46,90,46],[78,4,91,4,"pxData"],[78,10,91,10],[78,11,91,11,"pxPos"],[78,16,91,16],[78,17,91,17],[78,20,91,20,"pixelData"],[78,29,91,29],[78,30,91,30],[78,31,91,31],[78,32,91,32],[79,4,92,4,"pxData"],[79,10,92,10],[79,11,92,11,"pxPos"],[79,16,92,16],[79,19,92,19],[79,20,92,20],[79,21,92,21],[79,24,92,24,"pixelData"],[79,33,92,33],[79,34,92,34],[79,35,92,35],[79,36,92,36],[80,4,93,4,"pxData"],[80,10,93,10],[80,11,93,11,"pxPos"],[80,16,93,16],[80,19,93,19],[80,20,93,20],[80,21,93,21],[80,24,93,24,"pixelData"],[80,33,93,33],[80,34,93,34],[80,35,93,35],[80,36,93,36],[81,4,94,4,"pxData"],[81,10,94,10],[81,11,94,11,"pxPos"],[81,16,94,16],[81,19,94,19],[81,20,94,20],[81,21,94,21],[81,24,94,24,"maxBit"],[81,30,94,30],[82,2,95,2],[82,3,95,3],[83,2,97,2],[84,2,98,2],[85,2,99,2],[85,12,99,12,"pxData"],[85,18,99,18],[85,20,99,20,"pixelData"],[85,29,99,29],[85,31,99,31,"pxPos"],[85,36,99,36],[85,38,99,38],[86,4,100,4,"pxData"],[86,10,100,10],[86,11,100,11,"pxPos"],[86,16,100,16],[86,17,100,17],[86,20,100,20,"pixelData"],[86,29,100,29],[86,30,100,30],[86,31,100,31],[86,32,100,32],[87,4,101,4,"pxData"],[87,10,101,10],[87,11,101,11,"pxPos"],[87,16,101,16],[87,19,101,19],[87,20,101,20],[87,21,101,21],[87,24,101,24,"pixelData"],[87,33,101,33],[87,34,101,34],[87,35,101,35],[87,36,101,36],[88,4,102,4,"pxData"],[88,10,102,10],[88,11,102,11,"pxPos"],[88,16,102,16],[88,19,102,19],[88,20,102,20],[88,21,102,21],[88,24,102,24,"pixelData"],[88,33,102,33],[88,34,102,34],[88,35,102,35],[88,36,102,36],[89,4,103,4,"pxData"],[89,10,103,10],[89,11,103,11,"pxPos"],[89,16,103,16],[89,19,103,19],[89,20,103,20],[89,21,103,21],[89,24,103,24,"pixelData"],[89,33,103,33],[89,34,103,34],[89,35,103,35],[89,36,103,36],[90,2,104,2],[90,3,104,3],[90,4,105,1],[91,2,107,0],[91,11,107,9,"bitRetriever"],[91,23,107,21,"bitRetriever"],[91,24,107,22,"data"],[91,28,107,26],[91,30,107,28,"depth"],[91,35,107,33],[91,37,107,35],[92,4,108,2],[92,8,108,6,"leftOver"],[92,16,108,14],[92,19,108,17],[92,21,108,19],[93,4,109,2],[93,8,109,6,"i"],[93,9,109,7],[93,12,109,10],[93,13,109,11],[94,4,111,2],[94,13,111,11,"split"],[94,18,111,16,"split"],[94,19,111,16],[94,21,111,19],[95,6,112,4],[95,10,112,8,"i"],[95,11,112,9],[95,16,112,14,"data"],[95,20,112,18],[95,21,112,19,"length"],[95,27,112,25],[95,29,112,27],[96,8,113,6],[96,14,113,12],[96,18,113,16,"Error"],[96,23,113,21],[96,24,113,22],[96,41,113,39],[96,42,113,40],[97,6,114,4],[98,6,115,4],[98,10,115,8,"byte"],[98,14,115,12],[98,17,115,15,"data"],[98,21,115,19],[98,22,115,20,"i"],[98,23,115,21],[98,24,115,22],[99,6,116,4,"i"],[99,7,116,5],[99,9,116,7],[100,6,117,4],[100,10,117,8,"byte8"],[100,15,117,13],[100,17,117,15,"byte7"],[100,22,117,20],[100,24,117,22,"byte6"],[100,29,117,27],[100,31,117,29,"byte5"],[100,36,117,34],[100,38,117,36,"byte4"],[100,43,117,41],[100,45,117,43,"byte3"],[100,50,117,48],[100,52,117,50,"byte2"],[100,57,117,55],[100,59,117,57,"byte1"],[100,64,117,62],[101,6,118,4],[101,14,118,12,"depth"],[101,19,118,17],[102,8,119,6],[103,10,120,8],[103,16,120,14],[103,20,120,18,"Error"],[103,25,120,23],[103,26,120,24],[103,46,120,44],[103,47,120,45],[104,8,121,6],[104,13,121,11],[104,15,121,13],[105,10,122,8,"byte2"],[105,15,122,13],[105,18,122,16,"data"],[105,22,122,20],[105,23,122,21,"i"],[105,24,122,22],[105,25,122,23],[106,10,123,8,"i"],[106,11,123,9],[106,13,123,11],[107,10,124,8,"leftOver"],[107,18,124,16],[107,19,124,17,"push"],[107,23,124,21],[107,24,124,22],[107,25,124,23,"byte"],[107,29,124,27],[107,33,124,31],[107,34,124,32],[107,38,124,36,"byte2"],[107,43,124,41],[107,44,124,42],[108,10,125,8],[109,8,126,6],[109,13,126,11],[109,14,126,12],[110,10,127,8,"byte2"],[110,15,127,13],[110,18,127,16,"byte"],[110,22,127,20],[110,25,127,23],[110,29,127,27],[111,10,128,8,"byte1"],[111,15,128,13],[111,18,128,16,"byte"],[111,22,128,20],[111,26,128,24],[111,27,128,25],[112,10,129,8,"leftOver"],[112,18,129,16],[112,19,129,17,"push"],[112,23,129,21],[112,24,129,22,"byte1"],[112,29,129,27],[112,31,129,29,"byte2"],[112,36,129,34],[112,37,129,35],[113,10,130,8],[114,8,131,6],[114,13,131,11],[114,14,131,12],[115,10,132,8,"byte4"],[115,15,132,13],[115,18,132,16,"byte"],[115,22,132,20],[115,25,132,23],[115,26,132,24],[116,10,133,8,"byte3"],[116,15,133,13],[116,18,133,17,"byte"],[116,22,133,21],[116,26,133,25],[116,27,133,26],[116,30,133,30],[116,31,133,31],[117,10,134,8,"byte2"],[117,15,134,13],[117,18,134,17,"byte"],[117,22,134,21],[117,26,134,25],[117,27,134,26],[117,30,134,30],[117,31,134,31],[118,10,135,8,"byte1"],[118,15,135,13],[118,18,135,17,"byte"],[118,22,135,21],[118,26,135,25],[118,27,135,26],[118,30,135,30],[118,31,135,31],[119,10,136,8,"leftOver"],[119,18,136,16],[119,19,136,17,"push"],[119,23,136,21],[119,24,136,22,"byte1"],[119,29,136,27],[119,31,136,29,"byte2"],[119,36,136,34],[119,38,136,36,"byte3"],[119,43,136,41],[119,45,136,43,"byte4"],[119,50,136,48],[119,51,136,49],[120,10,137,8],[121,8,138,6],[121,13,138,11],[121,14,138,12],[122,10,139,8,"byte8"],[122,15,139,13],[122,18,139,16,"byte"],[122,22,139,20],[122,25,139,23],[122,26,139,24],[123,10,140,8,"byte7"],[123,15,140,13],[123,18,140,17,"byte"],[123,22,140,21],[123,26,140,25],[123,27,140,26],[123,30,140,30],[123,31,140,31],[124,10,141,8,"byte6"],[124,15,141,13],[124,18,141,17,"byte"],[124,22,141,21],[124,26,141,25],[124,27,141,26],[124,30,141,30],[124,31,141,31],[125,10,142,8,"byte5"],[125,15,142,13],[125,18,142,17,"byte"],[125,22,142,21],[125,26,142,25],[125,27,142,26],[125,30,142,30],[125,31,142,31],[126,10,143,8,"byte4"],[126,15,143,13],[126,18,143,17,"byte"],[126,22,143,21],[126,26,143,25],[126,27,143,26],[126,30,143,30],[126,31,143,31],[127,10,144,8,"byte3"],[127,15,144,13],[127,18,144,17,"byte"],[127,22,144,21],[127,26,144,25],[127,27,144,26],[127,30,144,30],[127,31,144,31],[128,10,145,8,"byte2"],[128,15,145,13],[128,18,145,17,"byte"],[128,22,145,21],[128,26,145,25],[128,27,145,26],[128,30,145,30],[128,31,145,31],[129,10,146,8,"byte1"],[129,15,146,13],[129,18,146,17,"byte"],[129,22,146,21],[129,26,146,25],[129,27,146,26],[129,30,146,30],[129,31,146,31],[130,10,147,8,"leftOver"],[130,18,147,16],[130,19,147,17,"push"],[130,23,147,21],[130,24,147,22,"byte1"],[130,29,147,27],[130,31,147,29,"byte2"],[130,36,147,34],[130,38,147,36,"byte3"],[130,43,147,41],[130,45,147,43,"byte4"],[130,50,147,48],[130,52,147,50,"byte5"],[130,57,147,55],[130,59,147,57,"byte6"],[130,64,147,62],[130,66,147,64,"byte7"],[130,71,147,69],[130,73,147,71,"byte8"],[130,78,147,76],[130,79,147,77],[131,10,148,8],[132,6,149,4],[133,4,150,2],[134,4,152,2],[134,11,152,9],[135,6,153,4,"get"],[135,9,153,7],[135,11,153,9],[135,20,153,9,"get"],[135,21,153,19,"count"],[135,26,153,24],[135,28,153,26],[136,8,154,6],[136,15,154,13,"leftOver"],[136,23,154,21],[136,24,154,22,"length"],[136,30,154,28],[136,33,154,31,"count"],[136,38,154,36],[136,40,154,38],[137,10,155,8,"split"],[137,15,155,13],[137,16,155,14],[137,17,155,15],[138,8,156,6],[139,8,157,6],[139,12,157,10,"returner"],[139,20,157,18],[139,23,157,21,"leftOver"],[139,31,157,29],[139,32,157,30,"slice"],[139,37,157,35],[139,38,157,36],[139,39,157,37],[139,41,157,39,"count"],[139,46,157,44],[139,47,157,45],[140,8,158,6,"leftOver"],[140,16,158,14],[140,19,158,17,"leftOver"],[140,27,158,25],[140,28,158,26,"slice"],[140,33,158,31],[140,34,158,32,"count"],[140,39,158,37],[140,40,158,38],[141,8,159,6],[141,15,159,13,"returner"],[141,23,159,21],[142,6,160,4],[142,7,160,5],[143,6,161,4,"resetAfterLine"],[143,20,161,18],[143,22,161,20],[143,31,161,20,"resetAfterLine"],[143,32,161,20],[143,34,161,32],[144,8,162,6,"leftOver"],[144,16,162,14],[144,17,162,15,"length"],[144,23,162,21],[144,26,162,24],[144,27,162,25],[145,6,163,4],[145,7,163,5],[146,6,164,4,"end"],[146,9,164,7],[146,11,164,9],[146,20,164,9,"end"],[146,21,164,9],[146,23,164,21],[147,8,165,6],[147,12,165,10,"i"],[147,13,165,11],[147,18,165,16,"data"],[147,22,165,20],[147,23,165,21,"length"],[147,29,165,27],[147,31,165,29],[148,10,166,8],[148,16,166,14],[148,20,166,18,"Error"],[148,25,166,23],[148,26,166,24],[148,44,166,42],[148,45,166,43],[149,8,167,6],[150,6,168,4],[151,4,169,2],[151,5,169,3],[152,2,170,0],[153,2,172,0],[153,11,172,9,"mapImage8Bit"],[153,23,172,21,"mapImage8Bit"],[153,24,172,22,"image"],[153,29,172,27],[153,31,172,29,"pxData"],[153,37,172,35],[153,39,172,37,"getPxPos"],[153,47,172,45],[153,49,172,47,"bpp"],[153,52,172,50],[153,54,172,52,"data"],[153,58,172,56],[153,60,172,58,"rawPos"],[153,66,172,64],[153,68,172,66],[154,4,173,2],[155,4,174,2],[155,8,174,6,"imageWidth"],[155,18,174,16],[155,21,174,19,"image"],[155,26,174,24],[155,27,174,25,"width"],[155,32,174,30],[156,4,175,2],[156,8,175,6,"imageHeight"],[156,19,175,17],[156,22,175,20,"image"],[156,27,175,25],[156,28,175,26,"height"],[156,34,175,32],[157,4,176,2],[157,8,176,6,"imagePass"],[157,17,176,15],[157,20,176,18,"image"],[157,25,176,23],[157,26,176,24,"index"],[157,31,176,29],[158,4,177,2],[158,9,177,7],[158,13,177,11,"y"],[158,14,177,12],[158,17,177,15],[158,18,177,16],[158,20,177,18,"y"],[158,21,177,19],[158,24,177,22,"imageHeight"],[158,35,177,33],[158,37,177,35,"y"],[158,38,177,36],[158,40,177,38],[158,42,177,40],[159,6,178,4],[159,11,178,9],[159,15,178,13,"x"],[159,16,178,14],[159,19,178,17],[159,20,178,18],[159,22,178,20,"x"],[159,23,178,21],[159,26,178,24,"imageWidth"],[159,36,178,34],[159,38,178,36,"x"],[159,39,178,37],[159,41,178,39],[159,43,178,41],[160,8,179,6],[160,12,179,10,"pxPos"],[160,17,179,15],[160,20,179,18,"getPxPos"],[160,28,179,26],[160,29,179,27,"x"],[160,30,179,28],[160,32,179,30,"y"],[160,33,179,31],[160,35,179,33,"imagePass"],[160,44,179,42],[160,45,179,43],[161,8,180,6,"pixelBppMapper"],[161,22,180,20],[161,23,180,21,"bpp"],[161,26,180,24],[161,27,180,25],[161,28,180,26,"pxData"],[161,34,180,32],[161,36,180,34,"data"],[161,40,180,38],[161,42,180,40,"pxPos"],[161,47,180,45],[161,49,180,47,"rawPos"],[161,55,180,53],[161,56,180,54],[162,8,181,6,"rawPos"],[162,14,181,12],[162,18,181,16,"bpp"],[162,21,181,19],[162,22,181,20],[162,23,181,21],[163,6,182,4],[164,4,183,2],[165,4,184,2],[165,11,184,9,"rawPos"],[165,17,184,15],[166,2,185,0],[167,2,187,0],[167,11,187,9,"mapImageCustomBit"],[167,28,187,26,"mapImageCustomBit"],[167,29,187,27,"image"],[167,34,187,32],[167,36,187,34,"pxData"],[167,42,187,40],[167,44,187,42,"getPxPos"],[167,52,187,50],[167,54,187,52,"bpp"],[167,57,187,55],[167,59,187,57,"bits"],[167,63,187,61],[167,65,187,63,"maxBit"],[167,71,187,69],[167,73,187,71],[168,4,188,2],[169,4,189,2],[169,8,189,6,"imageWidth"],[169,18,189,16],[169,21,189,19,"image"],[169,26,189,24],[169,27,189,25,"width"],[169,32,189,30],[170,4,190,2],[170,8,190,6,"imageHeight"],[170,19,190,17],[170,22,190,20,"image"],[170,27,190,25],[170,28,190,26,"height"],[170,34,190,32],[171,4,191,2],[171,8,191,6,"imagePass"],[171,17,191,15],[171,20,191,18,"image"],[171,25,191,23],[171,26,191,24,"index"],[171,31,191,29],[172,4,192,2],[172,9,192,7],[172,13,192,11,"y"],[172,14,192,12],[172,17,192,15],[172,18,192,16],[172,20,192,18,"y"],[172,21,192,19],[172,24,192,22,"imageHeight"],[172,35,192,33],[172,37,192,35,"y"],[172,38,192,36],[172,40,192,38],[172,42,192,40],[173,6,193,4],[173,11,193,9],[173,15,193,13,"x"],[173,16,193,14],[173,19,193,17],[173,20,193,18],[173,22,193,20,"x"],[173,23,193,21],[173,26,193,24,"imageWidth"],[173,36,193,34],[173,38,193,36,"x"],[173,39,193,37],[173,41,193,39],[173,43,193,41],[174,8,194,6],[174,12,194,10,"pixelData"],[174,21,194,19],[174,24,194,22,"bits"],[174,28,194,26],[174,29,194,27,"get"],[174,32,194,30],[174,33,194,31,"bpp"],[174,36,194,34],[174,37,194,35],[175,8,195,6],[175,12,195,10,"pxPos"],[175,17,195,15],[175,20,195,18,"getPxPos"],[175,28,195,26],[175,29,195,27,"x"],[175,30,195,28],[175,32,195,30,"y"],[175,33,195,31],[175,35,195,33,"imagePass"],[175,44,195,42],[175,45,195,43],[176,8,196,6,"pixelBppCustomMapper"],[176,28,196,26],[176,29,196,27,"bpp"],[176,32,196,30],[176,33,196,31],[176,34,196,32,"pxData"],[176,40,196,38],[176,42,196,40,"pixelData"],[176,51,196,49],[176,53,196,51,"pxPos"],[176,58,196,56],[176,60,196,58,"maxBit"],[176,66,196,64],[176,67,196,65],[177,6,197,4],[178,6,198,4,"bits"],[178,10,198,8],[178,11,198,9,"resetAfterLine"],[178,25,198,23],[178,26,198,24],[178,27,198,25],[179,4,199,2],[180,2,200,0],[181,2,202,0,"exports"],[181,9,202,7],[181,10,202,8,"dataToBitMap"],[181,22,202,20],[181,25,202,23],[181,35,202,33,"data"],[181,39,202,37],[181,41,202,39,"bitmapInfo"],[181,51,202,49],[181,53,202,51],[182,4,203,2],[182,8,203,6,"width"],[182,13,203,11],[182,16,203,14,"bitmapInfo"],[182,26,203,24],[182,27,203,25,"width"],[182,32,203,30],[183,4,204,2],[183,8,204,6,"height"],[183,14,204,12],[183,17,204,15,"bitmapInfo"],[183,27,204,25],[183,28,204,26,"height"],[183,34,204,32],[184,4,205,2],[184,8,205,6,"depth"],[184,13,205,11],[184,16,205,14,"bitmapInfo"],[184,26,205,24],[184,27,205,25,"depth"],[184,32,205,30],[185,4,206,2],[185,8,206,6,"bpp"],[185,11,206,9],[185,14,206,12,"bitmapInfo"],[185,24,206,22],[185,25,206,23,"bpp"],[185,28,206,26],[186,4,207,2],[186,8,207,6,"interlace"],[186,17,207,15],[186,20,207,18,"bitmapInfo"],[186,30,207,28],[186,31,207,29,"interlace"],[186,40,207,38],[187,4,208,2],[187,8,208,6,"bits"],[187,12,208,10],[188,4,210,2],[188,8,210,6,"depth"],[188,13,210,11],[188,18,210,16],[188,19,210,17],[188,21,210,19],[189,6,211,4,"bits"],[189,10,211,8],[189,13,211,11,"bitRetriever"],[189,25,211,23],[189,26,211,24,"data"],[189,30,211,28],[189,32,211,30,"depth"],[189,37,211,35],[189,38,211,36],[190,4,212,2],[191,4,213,2],[191,8,213,6,"pxData"],[191,14,213,12],[192,4,214,2],[192,8,214,6,"depth"],[192,13,214,11],[192,17,214,15],[192,18,214,16],[192,20,214,18],[193,6,215,4,"pxData"],[193,12,215,10],[193,15,215,13,"Buffer"],[193,21,215,19],[193,22,215,20,"alloc"],[193,27,215,25],[193,28,215,26,"width"],[193,33,215,31],[193,36,215,34,"height"],[193,42,215,40],[193,45,215,43],[193,46,215,44],[193,47,215,45],[194,4,216,2],[194,5,216,3],[194,11,216,9],[195,6,217,4,"pxData"],[195,12,217,10],[195,15,217,13],[195,19,217,17,"Uint16Array"],[195,30,217,28],[195,31,217,29,"width"],[195,36,217,34],[195,39,217,37,"height"],[195,45,217,43],[195,48,217,46],[195,49,217,47],[195,50,217,48],[196,4,218,2],[197,4,219,2],[197,8,219,6,"maxBit"],[197,14,219,12],[197,17,219,15,"Math"],[197,21,219,19],[197,22,219,20,"pow"],[197,25,219,23],[197,26,219,24],[197,27,219,25],[197,29,219,27,"depth"],[197,34,219,32],[197,35,219,33],[197,38,219,36],[197,39,219,37],[198,4,220,2],[198,8,220,6,"rawPos"],[198,14,220,12],[198,17,220,15],[198,18,220,16],[199,4,221,2],[199,8,221,6,"images"],[199,14,221,12],[200,4,222,2],[200,8,222,6,"getPxPos"],[200,16,222,14],[201,4,224,2],[201,8,224,6,"interlace"],[201,17,224,15],[201,19,224,17],[202,6,225,4,"images"],[202,12,225,10],[202,15,225,13,"interlaceUtils"],[202,29,225,27],[202,30,225,28,"getImagePasses"],[202,44,225,42],[202,45,225,43,"width"],[202,50,225,48],[202,52,225,50,"height"],[202,58,225,56],[202,59,225,57],[203,6,226,4,"getPxPos"],[203,14,226,12],[203,17,226,15,"interlaceUtils"],[203,31,226,29],[203,32,226,30,"getInterlaceIterator"],[203,52,226,50],[203,53,226,51,"width"],[203,58,226,56],[203,60,226,58,"height"],[203,66,226,64],[203,67,226,65],[204,4,227,2],[204,5,227,3],[204,11,227,9],[205,6,228,4],[205,10,228,8,"nonInterlacedPxPos"],[205,28,228,26],[205,31,228,29],[205,32,228,30],[206,6,229,4,"getPxPos"],[206,14,229,12],[206,17,229,15],[206,26,229,15,"getPxPos"],[206,27,229,15],[206,29,229,27],[207,8,230,6],[207,12,230,10,"returner"],[207,20,230,18],[207,23,230,21,"nonInterlacedPxPos"],[207,41,230,39],[208,8,231,6,"nonInterlacedPxPos"],[208,26,231,24],[208,30,231,28],[208,31,231,29],[209,8,232,6],[209,15,232,13,"returner"],[209,23,232,21],[210,6,233,4],[210,7,233,5],[211,6,234,4,"images"],[211,12,234,10],[211,15,234,13],[211,16,234,14],[212,8,234,16,"width"],[212,13,234,21],[212,15,234,23,"width"],[212,20,234,28],[213,8,234,30,"height"],[213,14,234,36],[213,16,234,38,"height"],[214,6,234,45],[214,7,234,46],[214,8,234,47],[215,4,235,2],[216,4,237,2],[216,9,237,7],[216,13,237,11,"imageIndex"],[216,23,237,21],[216,26,237,24],[216,27,237,25],[216,29,237,27,"imageIndex"],[216,39,237,37],[216,42,237,40,"images"],[216,48,237,46],[216,49,237,47,"length"],[216,55,237,53],[216,57,237,55,"imageIndex"],[216,67,237,65],[216,69,237,67],[216,71,237,69],[217,6,238,4],[217,10,238,8,"depth"],[217,15,238,13],[217,20,238,18],[217,21,238,19],[217,23,238,21],[218,8,239,6,"rawPos"],[218,14,239,12],[218,17,239,15,"mapImage8Bit"],[218,29,239,27],[218,30,240,8,"images"],[218,36,240,14],[218,37,240,15,"imageIndex"],[218,47,240,25],[218,48,240,26],[218,50,241,8,"pxData"],[218,56,241,14],[218,58,242,8,"getPxPos"],[218,66,242,16],[218,68,243,8,"bpp"],[218,71,243,11],[218,73,244,8,"data"],[218,77,244,12],[218,79,245,8,"rawPos"],[218,85,246,6],[218,86,246,7],[219,6,247,4],[219,7,247,5],[219,13,247,11],[220,8,248,6,"mapImageCustomBit"],[220,25,248,23],[220,26,249,8,"images"],[220,32,249,14],[220,33,249,15,"imageIndex"],[220,43,249,25],[220,44,249,26],[220,46,250,8,"pxData"],[220,52,250,14],[220,54,251,8,"getPxPos"],[220,62,251,16],[220,64,252,8,"bpp"],[220,67,252,11],[220,69,253,8,"bits"],[220,73,253,12],[220,75,254,8,"maxBit"],[220,81,255,6],[220,82,255,7],[221,6,256,4],[222,4,257,2],[223,4,258,2],[223,8,258,6,"depth"],[223,13,258,11],[223,18,258,16],[223,19,258,17],[223,21,258,19],[224,6,259,4],[224,10,259,8,"rawPos"],[224,16,259,14],[224,21,259,19,"data"],[224,25,259,23],[224,26,259,24,"length"],[224,32,259,30],[224,34,259,32],[225,8,260,6],[225,14,260,12],[225,18,260,16,"Error"],[225,23,260,21],[225,24,260,22],[225,42,260,40],[225,43,260,41],[226,6,261,4],[227,4,262,2],[227,5,262,3],[227,11,262,9],[228,6,263,4,"bits"],[228,10,263,8],[228,11,263,9,"end"],[228,14,263,12],[228,15,263,13],[228,16,263,14],[229,4,264,2],[230,4,266,2],[230,11,266,9,"pxData"],[230,17,266,15],[231,2,267,0],[231,3,267,1],[232,0,267,2],[232,3]],"functionMap":{"names":["<global>","<anonymous>","bitRetriever","split","get","resetAfterLine","end","mapImage8Bit","mapImageCustomBit","exports.dataToBitMap","getPxPos"],"mappings":"AAA;ECM,cD;ECI;GDU;ECI;GDU;ECI;GDS;ECI;GDS;ECK,cD;ECI;GDM;ECI;GDM;ECI;GDK;ECI;GDK;AEG;ECI;GDuC;SEG;KFO;oBGC;KHE;SIC;KJI;CFE;AOE;CPa;AQE;CRa;uBSE;eC2B;KDI;CTkC"},"hasCjsExports":true},"type":"js/module"}]}