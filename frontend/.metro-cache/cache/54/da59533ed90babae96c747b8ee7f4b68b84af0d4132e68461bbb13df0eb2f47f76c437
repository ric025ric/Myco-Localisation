{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useLayoutState","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":50,"index":104}}],"key":"492UtmrjepOeMNKrwkxWLoSiA4M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useRecyclingState = useRecyclingState;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _useLayoutState = require(_dependencyMap[1], \"./useLayoutState\");\n  /**\n   * A custom hook that provides state management with automatic reset functionality.\n   * Similar to useState, but automatically resets the state when specified dependencies change.\n   * This is particularly useful for managing state that needs to be reset when certain props or values change when items are recycled.\n   * This also avoids another setState call on recycling and helps with performance.\n   *\n   * @param initialState - The initial state value or a function that returns the initial state\n   * @param deps - Array of dependencies that trigger a state reset when changed\n   * @param onReset - Optional callback function that is called when the state is reset\n   * @returns A tuple containing:\n   *   - The current state value\n   *   - A setState function that works like useState's setState\n   */\n  function useRecyclingState(initialState, deps, onReset) {\n    // Store the current state value in a ref to persist between renders\n    const valueStore = (0, _react.useRef)();\n    // Use layoutState to trigger re-renders when state changes\n    const [_, setCounter] = (0, _useLayoutState.useLayoutState)(0);\n    // Reset state when dependencies change\n    (0, _react.useMemo)(() => {\n      // Calculate initial value from function or direct value\n      const initialValue = typeof initialState === \"function\" ? initialState() : initialState;\n      valueStore.current = initialValue;\n      // Call onReset callback if provided\n      onReset === null || onReset === void 0 ? void 0 : onReset();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n    /**\n     * Proxy setState function that updates the stored value and triggers a re-render.\n     * Only triggers a re-render if the new value is different from the current value.\n     */\n    const setStateProxy = (0, _react.useCallback)((newValue, skipParentLayout) => {\n      // Calculate next state value from function or direct value\n      const nextState = typeof newValue === \"function\" ? newValue(valueStore.current) : newValue;\n      // Only update and trigger re-render if value has changed\n      if (nextState !== valueStore.current) {\n        valueStore.current = nextState;\n        setCounter(prev => prev + 1, skipParentLayout);\n      }\n    }, [setCounter]);\n    return [valueStore.current, setStateProxy];\n  }\n});","lineCount":52,"map":[[7,2,16,0,"exports"],[7,9,16,0],[7,10,16,0,"useRecyclingState"],[7,27,16,0],[7,30,16,0,"useRecyclingState"],[7,47,16,0],[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_useLayoutState"],[9,21,2,0],[9,24,2,0,"require"],[9,31,2,0],[9,32,2,0,"_dependencyMap"],[9,46,2,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,2,16,7],[23,11,16,16,"useRecyclingState"],[23,28,16,33,"useRecyclingState"],[23,29,16,34,"initialState"],[23,41,16,46],[23,43,16,48,"deps"],[23,47,16,52],[23,49,16,54,"onReset"],[23,56,16,61],[23,58,16,63],[24,4,17,4],[25,4,18,4],[25,10,18,10,"valueStore"],[25,20,18,20],[25,23,18,23],[25,27,18,23,"useRef"],[25,33,18,29],[25,34,18,29,"useRef"],[25,40,18,29],[25,42,18,30],[25,43,18,31],[26,4,19,4],[27,4,20,4],[27,10,20,10],[27,11,20,11,"_"],[27,12,20,12],[27,14,20,14,"setCounter"],[27,24,20,24],[27,25,20,25],[27,28,20,28],[27,32,20,28,"useLayoutState"],[27,47,20,42],[27,48,20,42,"useLayoutState"],[27,62,20,42],[27,64,20,43],[27,65,20,44],[27,66,20,45],[28,4,21,4],[29,4,22,4],[29,8,22,4,"useMemo"],[29,14,22,11],[29,15,22,11,"useMemo"],[29,22,22,11],[29,24,22,12],[29,30,22,18],[30,6,23,8],[31,6,24,8],[31,12,24,14,"initialValue"],[31,24,24,26],[31,27,24,29],[31,34,24,36,"initialState"],[31,46,24,48],[31,51,24,53],[31,61,24,63],[31,64,25,14,"initialState"],[31,76,25,26],[31,77,25,27],[31,78,25,28],[31,81,26,14,"initialState"],[31,93,26,26],[32,6,27,8,"valueStore"],[32,16,27,18],[32,17,27,19,"current"],[32,24,27,26],[32,27,27,29,"initialValue"],[32,39,27,41],[33,6,28,8],[34,6,29,8,"onReset"],[34,13,29,15],[34,18,29,20],[34,22,29,24],[34,26,29,28,"onReset"],[34,33,29,35],[34,38,29,40],[34,43,29,45],[34,44,29,46],[34,47,29,49],[34,52,29,54],[34,53,29,55],[34,56,29,58,"onReset"],[34,63,29,65],[34,64,29,66],[34,65,29,67],[35,6,30,8],[36,4,31,4],[36,5,31,5],[36,7,31,7,"deps"],[36,11,31,11],[36,12,31,12],[37,4,32,4],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,4,36,4],[41,10,36,10,"setStateProxy"],[41,23,36,23],[41,26,36,26],[41,30,36,26,"useCallback"],[41,36,36,37],[41,37,36,37,"useCallback"],[41,48,36,37],[41,50,36,38],[41,51,36,39,"newValue"],[41,59,36,47],[41,61,36,49,"skipParentLayout"],[41,77,36,65],[41,82,36,70],[42,6,37,8],[43,6,38,8],[43,12,38,14,"nextState"],[43,21,38,23],[43,24,38,26],[43,31,38,33,"newValue"],[43,39,38,41],[43,44,38,46],[43,54,38,56],[43,57,39,14,"newValue"],[43,65,39,22],[43,66,39,23,"valueStore"],[43,76,39,33],[43,77,39,34,"current"],[43,84,39,41],[43,85,39,42],[43,88,40,14,"newValue"],[43,96,40,22],[44,6,41,8],[45,6,42,8],[45,10,42,12,"nextState"],[45,19,42,21],[45,24,42,26,"valueStore"],[45,34,42,36],[45,35,42,37,"current"],[45,42,42,44],[45,44,42,46],[46,8,43,12,"valueStore"],[46,18,43,22],[46,19,43,23,"current"],[46,26,43,30],[46,29,43,33,"nextState"],[46,38,43,42],[47,8,44,12,"setCounter"],[47,18,44,22],[47,19,44,24,"prev"],[47,23,44,28],[47,27,44,33,"prev"],[47,31,44,37],[47,34,44,40],[47,35,44,41],[47,37,44,43,"skipParentLayout"],[47,53,44,59],[47,54,44,60],[48,6,45,8],[49,4,46,4],[49,5,46,5],[49,7,46,7],[49,8,46,8,"setCounter"],[49,18,46,18],[49,19,46,19],[49,20,46,20],[50,4,47,4],[50,11,47,11],[50,12,47,12,"valueStore"],[50,22,47,22],[50,23,47,23,"current"],[50,30,47,30],[50,32,47,32,"setStateProxy"],[50,45,47,45],[50,46,47,46],[51,2,48,0],[52,0,48,1],[52,3]],"functionMap":{"names":["<global>","useRecyclingState","useMemo$argument_0","setStateProxy","setCounter$argument_0"],"mappings":"AAA;OCe;YCM;KDS;sCEK;uBCQ,kBD;KFE;CDE"},"hasCjsExports":false},"type":"js/module"}]}