{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // let Utils = require('./utils')\n\n  exports.render = function (qrData, options, cb) {\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n\n    // let opts = Utils.getOptions(options)\n\n    // use same scheme as https://github.com/gtanner/qrcode-terminal because it actually works! =)\n    const black = '\\x1b[40m  \\x1b[0m';\n    const white = '\\x1b[47m  \\x1b[0m';\n    let output = '';\n    const hMargin = Array(size + 3).join(white);\n    const vMargin = Array(2).join(white);\n    output += hMargin + '\\n';\n    for (let i = 0; i < size; ++i) {\n      output += white;\n      for (let j = 0; j < size; j++) {\n        // let topModule = data[i * size + j]\n        // let bottomModule = data[(i + 1) * size + j]\n\n        output += data[i * size + j] ? black : white; // getBlockChar(topModule, bottomModule)\n      }\n      // output += white+'\\n'\n      output += vMargin + '\\n';\n    }\n    output += hMargin + '\\n';\n    if (typeof cb === 'function') {\n      cb(null, output);\n    }\n    return output;\n  };\n  /*\n  exports.renderToFile = function renderToFile (path, qrData, options, cb) {\n    if (typeof cb === 'undefined') {\n      cb = options\n      options = undefined\n    }\n  \n    let fs = require('fs')\n    let utf8 = exports.render(qrData, options)\n    fs.writeFile(path, utf8, cb)\n  }\n  */\n});","lineCount":46,"map":[[2,2,1,0],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"render"],[4,16,3,14],[4,19,3,17],[4,29,3,27,"qrData"],[4,35,3,33],[4,37,3,35,"options"],[4,44,3,42],[4,46,3,44,"cb"],[4,48,3,46],[4,50,3,48],[5,4,4,2],[5,10,4,8,"size"],[5,14,4,12],[5,17,4,15,"qrData"],[5,23,4,21],[5,24,4,22,"modules"],[5,31,4,29],[5,32,4,30,"size"],[5,36,4,34],[6,4,5,2],[6,10,5,8,"data"],[6,14,5,12],[6,17,5,15,"qrData"],[6,23,5,21],[6,24,5,22,"modules"],[6,31,5,29],[6,32,5,30,"data"],[6,36,5,34],[8,4,7,2],[10,4,9,2],[11,4,10,2],[11,10,10,8,"black"],[11,15,10,13],[11,18,10,16],[11,37,10,35],[12,4,11,2],[12,10,11,8,"white"],[12,15,11,13],[12,18,11,16],[12,37,11,35],[13,4,13,2],[13,8,13,6,"output"],[13,14,13,12],[13,17,13,15],[13,19,13,17],[14,4,14,2],[14,10,14,8,"hMargin"],[14,17,14,15],[14,20,14,18,"Array"],[14,25,14,23],[14,26,14,24,"size"],[14,30,14,28],[14,33,14,31],[14,34,14,32],[14,35,14,33],[14,36,14,34,"join"],[14,40,14,38],[14,41,14,39,"white"],[14,46,14,44],[14,47,14,45],[15,4,15,2],[15,10,15,8,"vMargin"],[15,17,15,15],[15,20,15,18,"Array"],[15,25,15,23],[15,26,15,24],[15,27,15,25],[15,28,15,26],[15,29,15,27,"join"],[15,33,15,31],[15,34,15,32,"white"],[15,39,15,37],[15,40,15,38],[16,4,17,2,"output"],[16,10,17,8],[16,14,17,12,"hMargin"],[16,21,17,19],[16,24,17,22],[16,28,17,26],[17,4,18,2],[17,9,18,7],[17,13,18,11,"i"],[17,14,18,12],[17,17,18,15],[17,18,18,16],[17,20,18,18,"i"],[17,21,18,19],[17,24,18,22,"size"],[17,28,18,26],[17,30,18,28],[17,32,18,30,"i"],[17,33,18,31],[17,35,18,33],[18,6,19,4,"output"],[18,12,19,10],[18,16,19,14,"white"],[18,21,19,19],[19,6,20,4],[19,11,20,9],[19,15,20,13,"j"],[19,16,20,14],[19,19,20,17],[19,20,20,18],[19,22,20,20,"j"],[19,23,20,21],[19,26,20,24,"size"],[19,30,20,28],[19,32,20,30,"j"],[19,33,20,31],[19,35,20,33],[19,37,20,35],[20,8,21,6],[21,8,22,6],[23,8,24,6,"output"],[23,14,24,12],[23,18,24,16,"data"],[23,22,24,20],[23,23,24,21,"i"],[23,24,24,22],[23,27,24,25,"size"],[23,31,24,29],[23,34,24,32,"j"],[23,35,24,33],[23,36,24,34],[23,39,24,37,"black"],[23,44,24,42],[23,47,24,45,"white"],[23,52,24,50],[24,6,25,4],[25,6,26,4],[26,6,27,4,"output"],[26,12,27,10],[26,16,27,14,"vMargin"],[26,23,27,21],[26,26,27,24],[26,30,27,28],[27,4,28,2],[28,4,30,2,"output"],[28,10,30,8],[28,14,30,12,"hMargin"],[28,21,30,19],[28,24,30,22],[28,28,30,26],[29,4,32,2],[29,8,32,6],[29,15,32,13,"cb"],[29,17,32,15],[29,22,32,20],[29,32,32,30],[29,34,32,32],[30,6,33,4,"cb"],[30,8,33,6],[30,9,33,7],[30,13,33,11],[30,15,33,13,"output"],[30,21,33,19],[30,22,33,20],[31,4,34,2],[32,4,36,2],[32,11,36,9,"output"],[32,17,36,15],[33,2,37,0],[33,3,37,1],[34,2,38,0],[35,0,39,0],[36,0,40,0],[37,0,41,0],[38,0,42,0],[39,0,43,0],[40,0,44,0],[41,0,45,0],[42,0,46,0],[43,0,47,0],[44,0,48,0],[45,0,49,0],[46,0,38,0],[46,3]],"functionMap":{"names":["<global>","exports.render"],"mappings":"AAA;iBCE;CDkC"},"hasCjsExports":true},"type":"js/module"}]}